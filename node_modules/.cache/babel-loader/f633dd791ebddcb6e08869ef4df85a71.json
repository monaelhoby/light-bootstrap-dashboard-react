{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditProduct = (editableProduct, setProducts, callback) => {\n  // console.log(\"editableProduct\",editableProduct)\n  db.collection(\"products\").doc(editableProduct.id).update({\n    name: editableProduct.name,\n    purchasedUrl: editableProduct.purchasedUrl,\n    unpurchasedUrl: editableProduct.unpurchasedUrl,\n    visibility: editableProduct.visibility,\n    productIcon: editableProduct.productIcon,\n    description: editableProduct.description,\n    id: editableProduct.id,\n    apps: editableProduct.apps,\n    features: editableProduct.features\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      updateProductsinUsers(editableProduct);\n      callback();\n    });\n  }).then(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n    });\n  });\n};\nexport const handleAddNewProduct = (addedProduct, setProducts, callback) => {\n  db.collection(\"products\").add({\n    name: addedProduct.name,\n    description: addedProduct.description,\n    purchasedUrl: addedProduct.purchasedUrl,\n    unpurchasedUrl: addedProduct.unpurchasedUrl,\n    visibility: addedProduct.visibility,\n    productIcon: addedProduct.productIcon,\n    apps: addedProduct.apps,\n    features: addedProduct.features\n  }).then(newProduct => {\n    db.collection(\"products\").get().then(snapshot => {\n      let products = [];\n      snapshot.docs.forEach(product => {\n        product.checked = false;\n        products.push(product);\n      });\n      setProducts([...products]); // console.log(\"addedProduct\", addedProduct)\n\n      addNewProductToUsers(addedProduct, newProduct.id);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteProduct = (product, setProducts, callback) => {\n  // console.log(product.id)\n  db.collection(\"products\").doc(product.id).delete().then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      deleteProductFromUsers(product.data().name);\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateProductsinUsers = product => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(p => {\n        return product.id !== p.id;\n      });\n      let oldProduct = user.data().products.find(p => {\n        // console.log(\"p.id\", p.id)\n        // console.log(\"product.id\", product.id)\n        return product.id == p.id;\n      }); // console.log(\"old product is\",oldProduct)\n\n      let theNewProduct = {};\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      theNewProduct.features = [];\n      product.apps.forEach(a => {\n        let exist = false;\n        let generatedApp = {};\n        oldProduct.apps.forEach(app => {\n          generatedApp.name = a.name;\n          generatedApp.tag = a.tag;\n          generatedApp.appIcon = a.appIcon;\n          generatedApp.activeUrl = a.activeUrl;\n          generatedApp.inActiveUrl = a.inActiveUrl;\n\n          if (app.name == a.name) {\n            console.log(a);\n            exist = true;\n            generatedApp.name = app.name;\n            generatedApp.tag = app.tag;\n            generatedApp.appIcon = app.appIcon;\n            generatedApp.activeUrl = app.activeUrl;\n            generatedApp.inActiveUrl = app.inActiveUrl;\n            generatedApp.active = app.active;\n            generatedApp.purchased = app.purchased;\n            generatedApp.credentials = app.credentials;\n            generatedApp.expireDate = app.expireDate;\n            generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n            generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n            generatedApp.lastLaunchDate = app.lastLaunchDate;\n            generatedApp.timesAppLaunched = app.timesAppLaunched;\n            generatedApp.deviceId = app.deviceId;\n            generatedApp.activatedOn = app.activatedOn;\n            generatedApp.codeUsed = app.codeUsed;\n            generatedApp.DateofLastUse = app.DateofLastUse;\n            generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n          }\n        });\n\n        if (!exist) {\n          generatedApp.name = \"\";\n          generatedApp.tag = \"\";\n          generatedApp.appIcon = \"\";\n          generatedApp.activeUrl = \"\";\n          generatedApp.inActiveUrl = \"\";\n          generatedApp.active = false;\n          generatedApp.purchased = false;\n          generatedApp.credentials = false;\n          generatedApp.expireDate = \"\";\n          generatedApp.timesAppLaunchedLastLogin = \"\";\n          generatedApp.timesAppLaunchedPurchased = \"\";\n          generatedApp.lastLaunchDate = \"\";\n          generatedApp.timesAppLaunched = \"\";\n          generatedApp.deviceId = \"\";\n          generatedApp.activatedOn = \"\";\n          generatedApp.codeUsed = \"\";\n          generatedApp.DateofLastUse = \"\";\n          generatedApp.LaunchesSinceActive = \"\";\n        }\n\n        theNewProduct.apps.push(generatedApp);\n      });\n      product.features.forEach(a => {\n        let exist = false;\n        let generatedFeature = {};\n        oldProduct.features.forEach(feature => {\n          generatedFeature.name = a.name;\n          generatedFeature.tag = a.tag;\n          generatedFeature.activeUrl = a.activeUrl;\n          generatedFeature.inActiveUrl = a.inActiveUrl;\n\n          if (feature.name == a.name) {\n            console.log(a);\n            exist = true;\n            generatedFeature.name = a.name;\n            generatedFeature.tag = a.tag;\n            generatedFeature.activeUrl = a.activeUrl;\n            generatedFeature.inActiveUrl = a.inActiveUrl;\n          }\n        });\n\n        if (!exist) {\n          generatedFeature.name = \"\";\n          generatedFeature.tag = \"\";\n          generatedFeature.activeUrl = \"\";\n          generatedFeature.inActiveUrl = \"\";\n        }\n\n        theNewProduct.apps.push(generatedFeature);\n      });\n      products.push(theNewProduct); // console.log(products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const deleteProductFromUsers = productName => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(product => {\n        // console.log(product.name,productName)\n        return product.name !== productName;\n      }); // console.log(\"products is \",products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nconst addNewProductToUsers = (product, productId) => {\n  db.collection(\"users\").get().then(snapshot => {\n    // console.log(productId)\n    let theProduct = {};\n    theProduct.name = product.name;\n    theProduct.purchasedUrl = product.purchasedUrl;\n    theProduct.unpurchasedUrl = product.unpurchasedUrl;\n    theProduct.visibility = product.visibility;\n    theProduct.productIcon = product.productIcon, theProduct.description = product.description, theProduct.apps = [];\n    theProduct.features = [];\n    theProduct.id = productId; // theProduct.id = product.id;\n\n    product.apps.forEach(app => {\n      theProduct.apps.push({\n        name: app.name,\n        activeUrl: app.activeUrl ? app.activeUrl : \"\",\n        inActiveUrl: app.inActiveUrl ? app.inActiveUrl : \"\",\n        tag: app.tag ? app.tag : \"\",\n        appIcon: app.appIcon ? app.appIcon : \"\",\n        active: app.active ? app.active : \"\",\n        purchased: app.purchased ? app.purchased : \"\",\n        credentials: app.credentials ? app.credentials : \"\",\n        expireDate: app.expireDate ? app.expireDate : \"\",\n        timesAppLaunchedLastLogin: app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\n        timesAppLaunchedPurchased: app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\n        lastLaunchDate: app.lastLaunchDate ? app.lastLaunchDate : \"\",\n        timesAppLaunched: app.timesAppLaunched ? app.timesAppLaunched : \"\",\n        deviceId: \"9876543\",\n        activatedOn: app.activatedOn ? app.activatedOn : \"\",\n        codeUsed: \"9876543\",\n        DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\n        LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\n      });\n    });\n    product.features.forEach(feature => {\n      theProduct.features.push({\n        name: feature.name,\n        activeUrl: feature.activeUrl ? feature.activeUrl : \"\",\n        inActiveUrl: feature.inActiveUrl ? feature.inActiveUrl : \"\",\n        tag: feature.tag ? feature.tag : \"\"\n      });\n    });\n    snapshot.docs.forEach(user => {\n      let products = user.data().products;\n      products.push(theProduct);\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const handleDeleteProducts = (ids, setProducts, callback) => {\n  // console.log(ids)\n  return db.collection(\"products\").get().then(snapshot => {\n    snapshot.docs.forEach(product => {\n      let products = [];\n      ids.forEach(uid => {\n        db.collection(\"products\").doc(uid).delete();\n        products.push(product);\n        deleteProductFromUsers(product.data().name); // console.log(\"[...snapshot.docs]\", product.data())\n      });\n      setProducts([...products]);\n      callback();\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n}; // const resetUsersDetails = () =>{\n//     let products;\n//     db.collection(\"products\").get().then(snapshot=>{\n//         products = snapshot.docs;\n//         db.collection(\"users\").get().then(snapshot=>{\n//             snapshot.docs.forEach(user=>{\n//                 products.forEach(product=>{\n//                     user.products\n//                 })\n//             })\n//         })\n//     });  \n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/ProductsActions.js"],"names":["db","handleEditProduct","editableProduct","setProducts","callback","collection","doc","id","update","name","purchasedUrl","unpurchasedUrl","visibility","productIcon","description","apps","features","then","get","snapshot","docs","updateProductsinUsers","handleAddNewProduct","addedProduct","add","newProduct","products","forEach","product","checked","push","addNewProductToUsers","catch","error","console","handleDeleteProduct","delete","deleteProductFromUsers","data","err","log","user","filter","p","oldProduct","find","theNewProduct","a","exist","generatedApp","app","tag","appIcon","activeUrl","inActiveUrl","active","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive","generatedFeature","feature","set","merge","productName","productId","theProduct","handleDeleteProducts","ids","uid"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\nexport const handleEditProduct = (editableProduct,setProducts,callback)=> {\r\n    // console.log(\"editableProduct\",editableProduct)\r\n    db.collection(\"products\").doc(editableProduct.id).update({\r\n        name:editableProduct.name,\r\n        purchasedUrl: editableProduct.purchasedUrl,\r\n        unpurchasedUrl: editableProduct.unpurchasedUrl,\r\n        visibility: editableProduct.visibility,\r\n        productIcon: editableProduct.productIcon,\r\n        description: editableProduct.description,\r\n        id: editableProduct.id,\r\n        apps:editableProduct.apps,\r\n        features:editableProduct.features\r\n    }).then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            updateProductsinUsers(editableProduct)\r\n            callback();\r\n        })\r\n    }).then(()=>{\r\n        db.collection(\"users\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleAddNewProduct = (addedProduct,setProducts,callback)=>{\r\n    \r\n    db.collection(\"products\").add({\r\n        name: addedProduct.name,\r\n        description: addedProduct.description,\r\n        purchasedUrl: addedProduct.purchasedUrl,\r\n        unpurchasedUrl: addedProduct.unpurchasedUrl,\r\n        visibility: addedProduct.visibility,\r\n        productIcon: addedProduct.productIcon,\r\n        apps: addedProduct.apps,\r\n        features: addedProduct.features\r\n    })\r\n    .then((newProduct) => {\r\n        db.collection(\"products\").get().then(snapshot=>{\r\n            let products = [];\r\n            snapshot.docs.forEach(product=>{\r\n                product.checked = false;\r\n                products.push(product)\r\n            })\r\n            setProducts([...products]);\r\n            // console.log(\"addedProduct\", addedProduct)\r\n            addNewProductToUsers(addedProduct,newProduct.id)\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteProduct = (product,setProducts, callback)=>{\r\n    // console.log(product.id)\r\n    db.collection(\"products\").doc(product.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            deleteProductFromUsers(product.data().name);\r\n        })\r\n        callback()\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\nconst updateProductsinUsers = (product)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(p=>{\r\n                return product.id !== p.id;\r\n            });\r\n\r\n            let oldProduct = user.data().products.find(p=>{\r\n                // console.log(\"p.id\", p.id)\r\n                // console.log(\"product.id\", product.id)\r\n                return product.id == p.id\r\n            })\r\n            // console.log(\"old product is\",oldProduct)\r\n\r\n            let theNewProduct = {};\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            theNewProduct.features = [];\r\n            product.apps.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedApp   = {};\r\n                oldProduct.apps.forEach((app)=>{\r\n                    generatedApp.name = a.name;\r\n                    generatedApp.tag = a.tag;\r\n                    generatedApp.appIcon = a.appIcon;\r\n                    generatedApp.activeUrl = a.activeUrl;\r\n                    generatedApp.inActiveUrl = a.inActiveUrl;\r\n\r\n                    if(app.name == a.name){\r\n                        console.log(a)\r\n                        exist = true;\r\n                        generatedApp.name = app.name\r\n                        generatedApp.tag = app.tag\r\n                        generatedApp.appIcon = app.appIcon\r\n                        generatedApp.activeUrl = app.activeUrl\r\n                        generatedApp.inActiveUrl = app.inActiveUrl\r\n                        generatedApp.active = app.active\r\n                        generatedApp.purchased= app.purchased\r\n                        generatedApp.credentials = app.credentials\r\n                        generatedApp.expireDate= app.expireDate\r\n                        generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                        generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                        generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                        generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                        generatedApp.deviceId = app.deviceId \r\n                        generatedApp.activatedOn= app.activatedOn\r\n                        generatedApp.codeUsed= app.codeUsed\r\n                        generatedApp.DateofLastUse= app.DateofLastUse\r\n                        generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                    }\r\n                })\r\n                if(!exist){\r\n                    generatedApp.name = \"\"\r\n                    generatedApp.tag = \"\"\r\n                    generatedApp.appIcon = \"\"\r\n                    generatedApp.activeUrl = \"\"\r\n                    generatedApp.inActiveUrl = \"\"\r\n                    generatedApp.active = false;\r\n                    generatedApp.purchased= false\r\n                    generatedApp.credentials = false\r\n                    generatedApp.expireDate= \"\"\r\n                    generatedApp.timesAppLaunchedLastLogin = \"\"\r\n                    generatedApp.timesAppLaunchedPurchased = \"\"\r\n                    generatedApp.lastLaunchDate = \"\"\r\n                    generatedApp.timesAppLaunched = \"\"\r\n                    generatedApp.deviceId = \"\"\r\n                    generatedApp.activatedOn= \"\"\r\n                    generatedApp.codeUsed= \"\" \r\n                    generatedApp.DateofLastUse= \"\"\r\n                    generatedApp.LaunchesSinceActive= \"\"\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedApp)\r\n            })\r\n            product.features.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedFeature   = {};\r\n                oldProduct.features.forEach((feature)=>{\r\n                    generatedFeature.name = a.name;\r\n                    generatedFeature.tag = a.tag;\r\n                    generatedFeature.activeUrl = a.activeUrl;\r\n                    generatedFeature.inActiveUrl = a.inActiveUrl;\r\n\r\n                    if(feature.name == a.name){\r\n                        console.log(a)\r\n                        exist = true;\r\n                        generatedFeature.name = a.name;\r\n                        generatedFeature.tag = a.tag;\r\n                        generatedFeature.activeUrl = a.activeUrl;\r\n                        generatedFeature.inActiveUrl = a.inActiveUrl;\r\n                    }\r\n                })\r\n                if(!exist){\r\n                    generatedFeature.name = \"\";\r\n                    generatedFeature.tag = \"\";\r\n                    generatedFeature.activeUrl = \"\";\r\n                    generatedFeature.inActiveUrl = \"\";\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedFeature)\r\n            })\r\n\r\n            products.push(theNewProduct)\r\n            // console.log(products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteProductFromUsers = (productName)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(product=>{\r\n                // console.log(product.name,productName)\r\n                return product.name !== productName;\r\n            });\r\n\r\n            // console.log(\"products is \",products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewProductToUsers = (product,productId)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        // console.log(productId)\r\n        let theProduct = {};\r\n        theProduct.name = product.name;\r\n        theProduct.purchasedUrl= product.purchasedUrl;\r\n        theProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n        theProduct.visibility= product.visibility;\r\n        theProduct.productIcon= product.productIcon,\r\n        theProduct.description= product.description,\r\n        theProduct.apps = [];\r\n        theProduct.features = [];\r\n        theProduct.id = productId\r\n        // theProduct.id = product.id;\r\n        product.apps.forEach(app=>{\r\n            theProduct.apps.push({\r\n                name:app.name,\r\n                activeUrl:app.activeUrl ? app.activeUrl : \"\",\r\n                inActiveUrl:app.inActiveUrl ? app.inActiveUrl : \"\",\r\n                tag: app.tag ? app.tag : \"\",\r\n                appIcon: app.appIcon ? app.appIcon : \"\",\r\n                active:app.active ? app.active : \"\",\r\n                purchased: app.purchased ? app.purchased : \"\",\r\n                credentials : app.credentials ? app.credentials : \"\",\r\n                expireDate: app.expireDate ? app.expireDate : \"\",\r\n                timesAppLaunchedLastLogin : app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\r\n                timesAppLaunchedPurchased : app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\r\n                lastLaunchDate : app.lastLaunchDate ? app.lastLaunchDate : \"\",\r\n                timesAppLaunched : app.timesAppLaunched ? app.timesAppLaunched : \"\",\r\n                deviceId : \"9876543\",\r\n                activatedOn: app.activatedOn ? app.activatedOn : \"\",\r\n                codeUsed: \"9876543\" ,\r\n                DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\r\n                LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\r\n            })\r\n        })\r\n        product.features.forEach(feature => {\r\n            theProduct.features.push({\r\n            name:feature.name,\r\n            activeUrl:feature.activeUrl ? feature.activeUrl : \"\",\r\n            inActiveUrl:feature.inActiveUrl ? feature.inActiveUrl : \"\",\r\n            tag: feature.tag ? feature.tag : \"\",\r\n            })\r\n        })\r\n        \r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products;\r\n            products.push(theProduct);\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleDeleteProducts = (ids, setProducts,callback) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"products\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((product) => {\r\n            let products = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"products\").doc(uid).delete();\r\n                products.push(product)\r\n                deleteProductFromUsers(product.data().name);\r\n                // console.log(\"[...snapshot.docs]\", product.data())\r\n            })\r\n            setProducts([...products])\r\n            callback()\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n// const resetUsersDetails = () =>{\r\n//     let products;\r\n//     db.collection(\"products\").get().then(snapshot=>{\r\n//         products = snapshot.docs;\r\n//         db.collection(\"users\").get().then(snapshot=>{\r\n//             snapshot.docs.forEach(user=>{\r\n//                 products.forEach(product=>{\r\n//                     user.products\r\n//                 })\r\n//             })\r\n//         })\r\n//     });  \r\n// }"]},"metadata":{},"sourceType":"module"}