{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditProduct = (editableProduct, setProducts, callback) => {\n  db.collection(\"products\").doc(editableProduct.id).update({\n    name: editableProduct.name,\n    purchasedUrl: editableProduct.purchasedUrl,\n    unpurchasedUrl: editableProduct.unpurchasedUrl,\n    visibility: editableProduct.visibility,\n    apps: editableProduct.apps\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      updateProductsinUsers(editableProduct);\n      callback();\n    });\n  }).then(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n    });\n  });\n};\nexport const handleAddNewProduct = (addedProduct, setProducts, callback) => {\n  db.collection(\"products\").add({\n    name: addedProduct.name,\n    description: addedProduct.description,\n    purchasedUrl: addedProduct.purchasedUrl,\n    unpurchasedUrl: addedProduct.unpurchasedUrl,\n    visibility: addedProduct.visibility,\n    productIcon: addedProduct.productIcon,\n    apps: addedProduct.apps\n  }).then(newProduct => {\n    db.collection(\"products\").get().then(snapshot => {\n      let products = [];\n      snapshot.docs.forEach(product => {\n        product.checked = false;\n        products.push(product);\n      });\n      setProducts([...products]); // console.log(\"addedProduct\", addedProduct)\n\n      addNewProductToUsers(addedProduct, newProduct.id);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteProduct = (product, setProducts) => {\n  db.collection(\"products\").doc(product.id).delete().then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      deleteProductFromUsers(product.data().name);\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateProductsinUsers = product => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(p => {\n        return product.id !== p.id;\n      });\n      let oldProduct = user.data().products.find(p => {\n        // console.log(\"p.id\", p.id)\n        // console.log(\"product.id\", product.id)\n        return product.id == p.id;\n      }); // console.log(\"old product is\",oldProduct)\n\n      let theNewProduct = {};\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      product.apps.forEach(a => {\n        let exist = false;\n        let generatedApp = {};\n        oldProduct.apps.forEach(app => {\n          generatedApp.name = a;\n\n          if (app.name == a) {\n            exist = true;\n            generatedApp.active = app.active;\n          }\n        });\n\n        if (!exist) {\n          generatedApp.active = false;\n        }\n\n        theNewProduct.apps.push(generatedApp);\n      });\n      products.push(theNewProduct); // console.log(products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const deleteProductFromUsers = productName => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(product => {\n        // console.log(product.name,productName)\n        return product.name !== productName;\n      }); // console.log(\"products is \",products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nconst addNewProductToUsers = (product, productId) => {\n  db.collection(\"users\").get().then(snapshot => {\n    let theProduct = {};\n    theProduct.name = product.name;\n    theProduct.purchasedUrl = product.purchasedUrl;\n    theProduct.unpurchasedUrl = product.unpurchasedUrl;\n    theProduct.visibility = product.visibility;\n    theProduct.productIcon = product.productIcon, theProduct.apps = [];\n    theProduct.id = productId; // theProduct.id = product.id;\n\n    product.apps.forEach(app => {\n      theProduct.apps.push({\n        name: app.name,\n        activeUrl: app.activeUrl ? app.activeUrl : \"\",\n        inActiveUrl: app.inActiveUrl ? app.inActiveUrl : \"\",\n        tag: app.tag ? app.tag : \"\",\n        appIcon: app.appIcon ? app.appIcon : \"\",\n        active: false\n      });\n    });\n    snapshot.docs.forEach(user => {\n      let products = user.data().products;\n      products.push(theProduct);\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const handleDeleteProducts = (ids, setProducts) => {\n  // console.log(ids)\n  return db.collection(\"products\").get().then(snapshot => {\n    snapshot.docs.forEach(product => {\n      let products = [];\n      ids.forEach(uid => {\n        db.collection(\"products\").doc(uid).delete();\n        products.push(product);\n        deleteProductFromUsers(product.data().name); // console.log(\"[...snapshot.docs]\", product.data())\n      });\n      setProducts([...products]);\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n}; // const resetUsersDetails = () =>{\n//     let products;\n//     db.collection(\"products\").get().then(snapshot=>{\n//         products = snapshot.docs;\n//         db.collection(\"users\").get().then(snapshot=>{\n//             snapshot.docs.forEach(user=>{\n//                 products.forEach(product=>{\n//                     user.products\n//                 })\n//             })\n//         })\n//     });  \n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/ProductsActions.js"],"names":["db","handleEditProduct","editableProduct","setProducts","callback","collection","doc","id","update","name","purchasedUrl","unpurchasedUrl","visibility","apps","then","get","snapshot","docs","updateProductsinUsers","handleAddNewProduct","addedProduct","add","description","productIcon","newProduct","products","forEach","product","checked","push","addNewProductToUsers","catch","error","console","handleDeleteProduct","delete","deleteProductFromUsers","data","err","log","user","filter","p","oldProduct","find","theNewProduct","a","exist","generatedApp","app","active","set","merge","productName","productId","theProduct","activeUrl","inActiveUrl","tag","appIcon","handleDeleteProducts","ids","uid"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\nexport const handleEditProduct = (editableProduct,setProducts,callback)=> {\r\n    \r\n    db.collection(\"products\").doc(editableProduct.id).update({\r\n        name:editableProduct.name,\r\n        purchasedUrl: editableProduct.purchasedUrl,\r\n        unpurchasedUrl: editableProduct.unpurchasedUrl,\r\n        visibility: editableProduct.visibility,\r\n        apps:editableProduct.apps\r\n    }).then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            updateProductsinUsers(editableProduct)\r\n            callback();\r\n        })\r\n    }).then(()=>{\r\n        db.collection(\"users\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleAddNewProduct = (addedProduct,setProducts,callback)=>{\r\n    \r\n    db.collection(\"products\").add({\r\n        name: addedProduct.name,\r\n        description: addedProduct.description,\r\n        purchasedUrl: addedProduct.purchasedUrl,\r\n        unpurchasedUrl: addedProduct.unpurchasedUrl,\r\n        visibility: addedProduct.visibility,\r\n        productIcon: addedProduct.productIcon,\r\n        apps: addedProduct.apps,\r\n    })\r\n    .then((newProduct) => {\r\n        db.collection(\"products\").get().then(snapshot=>{\r\n            let products = [];\r\n            snapshot.docs.forEach(product=>{\r\n                product.checked = false;\r\n                products.push(product)\r\n            })\r\n            setProducts([...products]);\r\n            // console.log(\"addedProduct\", addedProduct)\r\n            addNewProductToUsers(addedProduct,newProduct.id)\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteProduct = (product,setProducts)=>{\r\n    db.collection(\"products\").doc(product.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            deleteProductFromUsers(product.data().name);\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\nconst updateProductsinUsers = (product)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(p=>{\r\n                return product.id !== p.id;\r\n            });\r\n\r\n            let oldProduct = user.data().products.find(p=>{\r\n                // console.log(\"p.id\", p.id)\r\n                // console.log(\"product.id\", product.id)\r\n                return product.id == p.id\r\n            })\r\n            \r\n        \r\n            // console.log(\"old product is\",oldProduct)\r\n\r\n            let theNewProduct = {};\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            product.apps.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedApp   = {};\r\n                oldProduct.apps.forEach((app)=>{\r\n                    generatedApp.name = a;\r\n\r\n                    if(app.name == a){\r\n                        exist = true;\r\n                        generatedApp.active = app.active\r\n                    }\r\n                })\r\n\r\n                if(!exist){\r\n                    generatedApp.active = false;\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedApp)\r\n            })\r\n\r\n            products.push(theNewProduct)\r\n            // console.log(products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteProductFromUsers = (productName)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(product=>{\r\n                // console.log(product.name,productName)\r\n                return product.name !== productName;\r\n            });\r\n\r\n            // console.log(\"products is \",products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewProductToUsers = (product,productId)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        \r\n        let theProduct = {};\r\n        theProduct.name = product.name;\r\n        theProduct.purchasedUrl= product.purchasedUrl;\r\n        theProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n        theProduct.visibility= product.visibility;\r\n        theProduct.productIcon= product.productIcon,\r\n        theProduct.apps = [];\r\n        theProduct.id = productId\r\n        // theProduct.id = product.id;\r\n        product.apps.forEach(app=>{\r\n            theProduct.apps.push({\r\n                name:app.name,\r\n                activeUrl:app.activeUrl ? app.activeUrl : \"\",\r\n                inActiveUrl:app.inActiveUrl ? app.inActiveUrl : \"\",\r\n                tag: app.tag ? app.tag : \"\",\r\n                appIcon: app.appIcon ? app.appIcon : \"\",\r\n                active:false\r\n            })\r\n        })\r\n        \r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products;\r\n            products.push(theProduct);\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleDeleteProducts = (ids, setProducts) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"products\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((product) => {\r\n            let products = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"products\").doc(uid).delete();\r\n                products.push(product)\r\n                deleteProductFromUsers(product.data().name);\r\n                // console.log(\"[...snapshot.docs]\", product.data())\r\n            })\r\n            setProducts([...products])\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n// const resetUsersDetails = () =>{\r\n//     let products;\r\n//     db.collection(\"products\").get().then(snapshot=>{\r\n//         products = snapshot.docs;\r\n//         db.collection(\"users\").get().then(snapshot=>{\r\n//             snapshot.docs.forEach(user=>{\r\n//                 products.forEach(product=>{\r\n//                     user.products\r\n//                 })\r\n//             })\r\n//         })\r\n//     });  \r\n// }"]},"metadata":{},"sourceType":"module"}