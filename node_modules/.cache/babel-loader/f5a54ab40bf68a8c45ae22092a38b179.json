{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp) => {\n  console.log(\"jnh\");\n  db.collection(\"users\").doc(user.uid).get().then(snapshot => {\n    let theUser = {};\n    theUser.products = [];\n    snapshot.docs.forEach(p => {\n      let oneProduct = {};\n      oneProduct.name = p.data().name;\n      oneProduct.visibility = p.data().visibility;\n      oneProduct.apps = [];\n      oneProduct.comments = p.data().comment;\n      oneProduct.purchased = false;\n      oneProduct.purchasedUrl = p.data().purchasedUrl;\n      oneProduct.unpurchasedUrl = p.data().unpurchasedUrl;\n      oneProduct.datePurchased = \"22/1/2021\";\n      p.data().apps.forEach(app => {\n        oneProduct.apps.push({\n          name: app,\n          active: false,\n          purchased: false,\n          credentials: false,\n          expireDate: \"30/3/2021\",\n          timesAppLaunchedLastLogin: 3,\n          timesAppLaunchedPurchased: 4,\n          lastLaunchDate: \"23-12-2020\",\n          timesAppLaunched: 7,\n          deviceId: \" \"\n        });\n      });\n\n      if (oneProduct.name == product.name) {\n        if (app == theApp.name) {\n          app.deviceId = \" \";\n        }\n      }\n\n      theUser.products.push(oneProduct);\n      console.log(\"the user is \", theUser.products);\n    });\n    return db.collection('users').set({ ...user,\n      theUser\n    });\n  }).catch(err => {\n    setError(\"Failed to create an account\");\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Ramdan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","console","log","collection","doc","uid","get","then","snapshot","theUser","products","docs","forEach","p","oneProduct","name","data","visibility","apps","comments","comment","purchased","purchasedUrl","unpurchasedUrl","datePurchased","app","push","active","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","set","catch","err","setError"],"mappings":"AAAA,SAASA,EAAT,QAAmB,gBAAnB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAMC,OAAN,EAAcC,MAAd,KAAyB;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAN,EAAAA,EAAE,CAACO,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BN,IAAI,CAACO,GAAhC,EAAqCC,GAArC,GAA2CC,IAA3C,CAAgDC,QAAQ,IAAG;AACzD,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACC,QAAR,GAAmB,EAAnB;AAEAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,CAAC,IAAE;AACvB,UAAIC,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAACC,IAAX,GAAkBF,CAAC,CAACG,IAAF,GAASD,IAA3B;AACAD,MAAAA,UAAU,CAACG,UAAX,GAAwBJ,CAAC,CAACG,IAAF,GAASC,UAAjC;AACAH,MAAAA,UAAU,CAACI,IAAX,GAAkB,EAAlB;AACAJ,MAAAA,UAAU,CAACK,QAAX,GAAsBN,CAAC,CAACG,IAAF,GAASI,OAA/B;AACAN,MAAAA,UAAU,CAACO,SAAX,GAAuB,KAAvB;AACAP,MAAAA,UAAU,CAACQ,YAAX,GAA0BT,CAAC,CAACG,IAAF,GAASM,YAAnC;AACAR,MAAAA,UAAU,CAACS,cAAX,GAA4BV,CAAC,CAACG,IAAF,GAASO,cAArC;AACAT,MAAAA,UAAU,CAACU,aAAX,GAA2B,WAA3B;AACAX,MAAAA,CAAC,CAACG,IAAF,GAASE,IAAT,CAAcN,OAAd,CAAsBa,GAAG,IAAE;AACvBX,QAAAA,UAAU,CAACI,IAAX,CAAgBQ,IAAhB,CAAqB;AACjBX,UAAAA,IAAI,EAACU,GADY;AAEjBE,UAAAA,MAAM,EAAC,KAFU;AAGjBN,UAAAA,SAAS,EAAE,KAHM;AAIjBO,UAAAA,WAAW,EAAG,KAJG;AAKjBC,UAAAA,UAAU,EAAE,WALK;AAMjBC,UAAAA,yBAAyB,EAAG,CANX;AAOjBC,UAAAA,yBAAyB,EAAG,CAPX;AAQjBC,UAAAA,cAAc,EAAG,YARA;AASjBC,UAAAA,gBAAgB,EAAG,CATF;AAUjBC,UAAAA,QAAQ,EAAG;AAVM,SAArB;AAYH,OAbD;;AAgBA,UAAGpB,UAAU,CAACC,IAAX,IAAmBhB,OAAO,CAACgB,IAA9B,EAAmC;AAC/B,YAAGU,GAAG,IAAIzB,MAAM,CAACe,IAAjB,EAAsB;AAClBU,UAAAA,GAAG,CAACS,QAAJ,GAAe,GAAf;AACH;AACJ;;AACDzB,MAAAA,OAAO,CAACC,QAAR,CAAiBgB,IAAjB,CAAsBZ,UAAtB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,OAAO,CAACC,QAApC;AACD,KAjCD;AAmCA,WAAOd,EAAE,CAACO,UAAH,CAAc,OAAd,EAAuBgC,GAAvB,CAA2B,EAAC,GAAGrC,IAAJ;AAASW,MAAAA;AAAT,KAA3B,CAAP;AACC,GAxCH,EAyCC2B,KAzCD,CAyCOC,GAAG,IAAE;AACVC,IAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD,GA3CD;AA4CD,CA9CI","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp) => {\r\n    console.log(\"jnh\")\r\n    db.collection(\"users\").doc(user.uid).get().then(snapshot =>{\r\n      let theUser = {};\r\n      theUser.products = [];\r\n        \r\n      snapshot.docs.forEach(p=>{\r\n        let oneProduct = {};\r\n        oneProduct.name = p.data().name;\r\n        oneProduct.visibility = p.data().visibility;\r\n        oneProduct.apps = [];\r\n        oneProduct.comments = p.data().comment;\r\n        oneProduct.purchased = false;\r\n        oneProduct.purchasedUrl = p.data().purchasedUrl;\r\n        oneProduct.unpurchasedUrl = p.data().unpurchasedUrl;\r\n        oneProduct.datePurchased = \"22/1/2021\";\r\n        p.data().apps.forEach(app=>{\r\n            oneProduct.apps.push({\r\n                name:app,\r\n                active:false,\r\n                purchased: false,\r\n                credentials : false,\r\n                expireDate: \"30/3/2021\",\r\n                timesAppLaunchedLastLogin : 3,\r\n                timesAppLaunchedPurchased : 4,\r\n                lastLaunchDate : \"23-12-2020\",\r\n                timesAppLaunched : 7,\r\n                deviceId : \" \"\r\n            })\r\n        })\r\n        \r\n                \r\n        if(oneProduct.name == product.name){\r\n            if(app == theApp.name){\r\n                app.deviceId = \" \"\r\n            }\r\n        }\r\n        theUser.products.push(oneProduct);\r\n        console.log(\"the user is \", theUser.products)\r\n      })\r\n\r\n      return db.collection('users').set({...user,theUser}) \r\n      })\r\n    .catch(err=>{\r\n      setError(\"Failed to create an account\");\r\n    })\r\n  }"]},"metadata":{},"sourceType":"module"}