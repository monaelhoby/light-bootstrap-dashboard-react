{"ast":null,"code":"import { db } from '../firebase'; // import {crypto} from 'crypto'\n\nconst crypto = require(\"crypto\");\n\nexport const handleAddCode = (code, setCodes, callback) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n  db.collection(\"codes\").add({\n    perfixCode: code.perfixCode,\n    code: code.perfixCode + cryptoCode,\n    Suffixcode: cryptoCode,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    purchasedLocation: code.purchasedLocation,\n    notes: code.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleAddCodes = (code, setCodes, callback) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  let codes = [];\n\n  for (let i = 0; i < code.quantity; i++) {\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n    codes.push(code.perfixCode + cryptoCode);\n  }\n\n  db.collection(\"codes\").add({\n    perfixCode: code.perfixCode,\n    code: codes,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    purchasedLocation: code.purchasedLocation,\n    notes: code.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteCode = (uid, codes, i, setCodes) => {\n  codes.splice(i, 1);\n  setCodes([...codes]);\n  return db.collection(\"codes\").doc(uid).delete().then(() => {// callback()\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteCodes = (ids, setCodes) => {\n  return db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"codes\").doc(uid).delete();\n        codes.push(code);\n      });\n      setCodes([...codes]);\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleEditCode = (editCode, setCodes, callback) => {\n  console.log(editCode);\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n  db.collection(\"codes\").doc(editCode.id).update({\n    perfixCode: editCode.perfixCode,\n    code: editCode.perfixCode + cryptoCode,\n    productActivated: editCode.apps,\n    notes: editCode.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/codeActions.js"],"names":["db","crypto","require","handleAddCode","code","setCodes","callback","length","Number","lengthCode","cryptoCode","randomBytes","toString","collection","add","perfixCode","Suffixcode","dateAdded","Date","toLocaleString","productActivated","apps","purchasedLocation","notes","then","codes","get","snapshot","docs","forEach","checked","push","catch","error","console","handleAddCodes","i","quantity","handleDeleteCode","uid","splice","doc","delete","err","log","handleDeleteCodes","ids","handleEditCode","editCode","id","update"],"mappings":"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","sourcesContent":["import {db} from '../firebase';\r\n// import {crypto} from 'crypto'\r\nconst crypto = require(\"crypto\");\r\n\r\nexport const handleAddCode = (code,setCodes,callback) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    db.collection(\"codes\").add({\r\n        perfixCode : code.perfixCode,\r\n        code : code.perfixCode+cryptoCode,\r\n        Suffixcode : cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleAddCodes = (code,setCodes,callback) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    let codes=[]\r\n    for(let i =0; i<code.quantity; i++){\r\n        cryptoCode = crypto.randomBytes(length).toString(\"hex\");\r\n        codes.push(code.perfixCode+cryptoCode)\r\n    }\r\n    db.collection(\"codes\").add({\r\n        perfixCode : code.perfixCode,\r\n        code : codes,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteCode = (uid,codes,i,setCodes)=>{\r\n    codes.splice(i, 1);\r\n    setCodes([...codes]);\r\n    return db.collection(\"codes\").doc(uid).delete()\r\n    .then(() => {\r\n        // callback()\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteCodes = (ids, setCodes) =>{  \r\n    return db.collection(\"codes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"codes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes])\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleEditCode = (editCode,setCodes,callback) => {\r\n    console.log(editCode)\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        perfixCode : editCode.perfixCode,\r\n        code : editCode.perfixCode+cryptoCode,\r\n        productActivated : editCode.apps,\r\n        notes : editCode.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}