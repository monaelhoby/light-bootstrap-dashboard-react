{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp, setUser) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    if (app.name.name == theApp.name.name) {\n      app.deviceId = \"\";\n    }\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleDeactiveAllApps = (user, product, setUser, callback) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    app.deviceId = \"\";\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  callback();\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleInactiveCode = (code, prefixCode, theUser, theCodeObject, callback, setCode) => {\n  db.collection(\"codes\").get().then(snapshot => {\n    let activeCodeObject = {};\n    snapshot.docs.forEach(oneCode => {\n      if (Array.isArray(oneCode.data().code)) {\n        let activeCode = \"\";\n        activeCode = oneCode.data().code.find(singleCode => singleCode == code);\n\n        if (activeCode) {\n          activeCodeObject = oneCode.data();\n        }\n      } else if (!Array.isArray(oneCode.data().code)) {\n        if (oneCode.data().code == code) {\n          activeCodeObject = oneCode.data();\n        } else {\n          return;\n        }\n      }\n    });\n    db.collection(\"inactiveCodes\").add({\n      inactiveCode: code,\n      activatedBy: theUser.email,\n      firstName: theUser.firstName,\n      lastName: theUser.lastName,\n      prefixCode: prefixCode,\n      dataAdded: new Date().toLocaleString(),\n      placeOfPurchase: activeCodeObject.purchasedLocation,\n      productActivated: activeCodeObject.productActivated,\n      notes: activeCodeObject.notes\n    }).then(() => {\n      // console.log(theCodeObject.data().productActivated)\n      db.collection(\"codes\").doc(theCodeObject.id).delete();\n      updateAppsinUser(theCodeObject.data().productActivated, theUser.id, code);\n      callback();\n      setCode(\"\");\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateAppsinUser = (productsActivated, id, code) => {\n  db.collection(\"users\").doc(id).get().then(snapshot => {\n    let allProducts = snapshot.data().products;\n    let theNewProduct = {};\n    let productActivatedExist = {}; // console.log(\"allProducts before\",allProducts);\n\n    productsActivated.apps.forEach(p => {\n      allProducts.forEach((piu, i) => {\n        if (piu.name === p.productName) {\n          piu.apps.forEach((app, j) => {\n            if (app.name === p.appName) {\n              allProducts[i].apps[j].purchased = true;\n              allProducts[i].apps[j].activatedOn = new Date().toLocaleString(); // console.log(\"allProducts\",allProducts)\n            }\n          });\n        }\n      });\n    });\n    productsActivated.features.forEach(p => {\n      allProducts.forEach((piu, i) => {\n        if (piu.name === p.productName) {\n          piu.features.forEach((feature, k) => {\n            if (feature.name === p.featureName) {\n              allProducts[i].features[k].purchased = true;\n              allProducts[i].features[k].activatedOn = new Date().toLocaleString(); // console.log(\"allProducts\",allProducts)\n            }\n          });\n        }\n      });\n    }); // console.log(\"allProducts\",allProducts)\n\n    db.collection(\"users\").doc(id).set({\n      products: allProducts\n    }, {\n      merge: true\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","setUser","newUser","editableProduct","products","find","p","name","filter","apps","forEach","app","deviceId","push","collection","doc","id","set","handleDeactiveAllApps","callback","handleInactiveCode","code","prefixCode","theUser","theCodeObject","setCode","get","then","snapshot","activeCodeObject","docs","oneCode","Array","isArray","data","activeCode","singleCode","add","inactiveCode","activatedBy","email","firstName","lastName","dataAdded","Date","toLocaleString","placeOfPurchase","purchasedLocation","productActivated","notes","delete","updateAppsinUser","catch","err","console","log","productsActivated","allProducts","theNewProduct","productActivatedExist","piu","i","productName","j","appName","purchased","activatedOn","features","feature","k","featureName","merge"],"mappings":"AAAA,SAASA,EAAT,QAAmB,gBAAnB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAMC,OAAN,EAAcC,MAAd,EAAqBC,OAArB,KAAiC;AAC9D,MAAIC,OAAO,GAAGJ,IAAd;AACA,MAAIK,eAAe,GAAGD,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBC,CAAC,IAAE;AAC3C,WAAOA,CAAC,CAACC,IAAF,IAAUR,OAAO,CAACQ,IAAzB;AACH,GAFqB,CAAtB;AAIAL,EAAAA,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACE,QAAR,CAAiBI,MAAjB,CAAwBF,CAAC,IAAE;AAC1C,WAAOA,CAAC,CAACC,IAAF,KAAWR,OAAO,CAACQ,IAA1B;AACH,GAFkB,CAAnB;AAIAJ,EAAAA,eAAe,CAACM,IAAhB,CAAqBC,OAArB,CAA6BC,GAAG,IAAI;AAChC,QAAIA,GAAG,CAACJ,IAAJ,CAASA,IAAT,IAAiBP,MAAM,CAACO,IAAP,CAAYA,IAAjC,EAAsC;AAClCI,MAAAA,GAAG,CAACC,QAAJ,GAAe,EAAf;AACH;AACJ,GAJD;AAKAV,EAAAA,OAAO,CAACE,QAAR,CAAiBS,IAAjB,CAAsBV,eAAtB;AACAF,EAAAA,OAAO,CAAC,EAAC,GAAGC;AAAJ,GAAD,CAAP;AAEA,SAAON,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BjB,IAAI,CAACkB,EAAhC,EAAoCC,GAApC,CAAwCf,OAAxC,CAAP;AAED,CApBI;AAsBL,OAAO,MAAMgB,qBAAqB,GAAG,CAACpB,IAAD,EAAMC,OAAN,EAAcE,OAAd,EAAsBkB,QAAtB,KAAmC;AACtE,MAAIjB,OAAO,GAAGJ,IAAd;AACA,MAAIK,eAAe,GAAGD,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBC,CAAC,IAAE;AAC3C,WAAOA,CAAC,CAACC,IAAF,IAAUR,OAAO,CAACQ,IAAzB;AACH,GAFqB,CAAtB;AAIAL,EAAAA,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACE,QAAR,CAAiBI,MAAjB,CAAwBF,CAAC,IAAE;AAC1C,WAAOA,CAAC,CAACC,IAAF,KAAWR,OAAO,CAACQ,IAA1B;AACH,GAFkB,CAAnB;AAIAJ,EAAAA,eAAe,CAACM,IAAhB,CAAqBC,OAArB,CAA6BC,GAAG,IAAI;AAC5BA,IAAAA,GAAG,CAACC,QAAJ,GAAe,EAAf;AACP,GAFD;AAGAV,EAAAA,OAAO,CAACE,QAAR,CAAiBS,IAAjB,CAAsBV,eAAtB;AACAF,EAAAA,OAAO,CAAC,EAAC,GAAGC;AAAJ,GAAD,CAAP;AACAiB,EAAAA,QAAQ;AACR,SAAOvB,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BjB,IAAI,CAACkB,EAAhC,EAAoCC,GAApC,CAAwCf,OAAxC,CAAP;AAED,CAlBM;AAoBP,OAAO,MAAMkB,kBAAkB,GAAG,CAACC,IAAD,EAAMC,UAAN,EAAkBC,OAAlB,EAA2BC,aAA3B,EAAyCL,QAAzC,EAAkDM,OAAlD,KAA8D;AAC9F7B,EAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBY,GAAvB,GACCC,IADD,CACMC,QAAQ,IAAI;AAClB,QAAIC,gBAAgB,GAAG,EAAvB;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcpB,OAAd,CAAsBqB,OAAO,IAAI;AAC7B,UAAGC,KAAK,CAACC,OAAN,CAAcF,OAAO,CAACG,IAAR,GAAeb,IAA7B,CAAH,EAAsC;AAClC,YAAIc,UAAU,GAAG,EAAjB;AACAA,QAAAA,UAAU,GAAGJ,OAAO,CAACG,IAAR,GAAeb,IAAf,CAAoBhB,IAApB,CAAyB+B,UAAU,IAAIA,UAAU,IAAEf,IAAnD,CAAb;;AACA,YAAGc,UAAH,EAAc;AACVN,UAAAA,gBAAgB,GAAGE,OAAO,CAACG,IAAR,EAAnB;AACH;AACJ,OAND,MAMM,IAAG,CAACF,KAAK,CAACC,OAAN,CAAcF,OAAO,CAACG,IAAR,GAAeb,IAA7B,CAAJ,EAAuC;AACzC,YAAGU,OAAO,CAACG,IAAR,GAAeb,IAAf,IAAuBA,IAA1B,EAAgC;AAC5BQ,UAAAA,gBAAgB,GAAGE,OAAO,CAACG,IAAR,EAAnB;AACH,SAFD,MAEK;AACD;AACH;AACJ;AACJ,KAdD;AAeAtC,IAAAA,EAAE,CAACkB,UAAH,CAAc,eAAd,EAA+BuB,GAA/B,CAAmC;AAC/BC,MAAAA,YAAY,EAAGjB,IADgB;AAE/BkB,MAAAA,WAAW,EAAGhB,OAAO,CAACiB,KAFS;AAG/BC,MAAAA,SAAS,EAAGlB,OAAO,CAACkB,SAHW;AAI/BC,MAAAA,QAAQ,EAAGnB,OAAO,CAACmB,QAJY;AAK/BpB,MAAAA,UAAU,EAAGA,UALkB;AAM/BqB,MAAAA,SAAS,EAAG,IAAIC,IAAJ,GAAWC,cAAX,EANmB;AAO/BC,MAAAA,eAAe,EAAEjB,gBAAgB,CAACkB,iBAPH;AAQ/BC,MAAAA,gBAAgB,EAAEnB,gBAAgB,CAACmB,gBARJ;AAS/BC,MAAAA,KAAK,EAAEpB,gBAAgB,CAACoB;AATO,KAAnC,EAUGtB,IAVH,CAUQ,MAAM;AACV;AACA/B,MAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BS,aAAa,CAACR,EAAzC,EAA6CkC,MAA7C;AACAC,MAAAA,gBAAgB,CAAC3B,aAAa,CAACU,IAAd,GAAqBc,gBAAtB,EAAuCzB,OAAO,CAACP,EAA/C,EAAkDK,IAAlD,CAAhB;AACAF,MAAAA,QAAQ;AACRM,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAhBD;AAiBC,GAnCD,EAmCG2B,KAnCH,CAmCSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GArCD;AAsCD,CAvCM;;AAyCP,MAAMF,gBAAgB,GAAG,CAACK,iBAAD,EAAoBxC,EAApB,EAAuBK,IAAvB,KAA8B;AACrDzB,EAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BC,EAA3B,EAA+BU,GAA/B,GACCC,IADD,CACMC,QAAQ,IAAE;AACZ,QAAI6B,WAAW,GAAC7B,QAAQ,CAACM,IAAT,GAAgB9B,QAAhC;AACA,QAAIsD,aAAa,GAAG,EAApB;AACA,QAAIC,qBAAqB,GAAG,EAA5B,CAHY,CAIZ;;AAEAH,IAAAA,iBAAiB,CAAC/C,IAAlB,CAAuBC,OAAvB,CAA+BJ,CAAC,IAAE;AAC9BmD,MAAAA,WAAW,CAAC/C,OAAZ,CAAoB,CAACkD,GAAD,EAAKC,CAAL,KAAS;AACzB,YAAGD,GAAG,CAACrD,IAAJ,KAAaD,CAAC,CAACwD,WAAlB,EAA8B;AAC1BF,UAAAA,GAAG,CAACnD,IAAJ,CAASC,OAAT,CAAiB,CAACC,GAAD,EAAKoD,CAAL,KAAS;AACtB,gBAAGpD,GAAG,CAACJ,IAAJ,KAAaD,CAAC,CAAC0D,OAAlB,EAA0B;AACtBP,cAAAA,WAAW,CAACI,CAAD,CAAX,CAAepD,IAAf,CAAoBsD,CAApB,EAAuBE,SAAvB,GAAmC,IAAnC;AACAR,cAAAA,WAAW,CAACI,CAAD,CAAX,CAAepD,IAAf,CAAoBsD,CAApB,EAAuBG,WAAvB,GAAqC,IAAItB,IAAJ,GAAWC,cAAX,EAArC,CAFsB,CAGtB;AACH;AACJ,WAND;AAOH;AACJ,OAVD;AAWH,KAZD;AAaAW,IAAAA,iBAAiB,CAACW,QAAlB,CAA2BzD,OAA3B,CAAmCJ,CAAC,IAAE;AAClCmD,MAAAA,WAAW,CAAC/C,OAAZ,CAAoB,CAACkD,GAAD,EAAKC,CAAL,KAAS;AACzB,YAAGD,GAAG,CAACrD,IAAJ,KAAaD,CAAC,CAACwD,WAAlB,EAA8B;AAC1BF,UAAAA,GAAG,CAACO,QAAJ,CAAazD,OAAb,CAAqB,CAAC0D,OAAD,EAASC,CAAT,KAAa;AAC9B,gBAAGD,OAAO,CAAC7D,IAAR,KAAiBD,CAAC,CAACgE,WAAtB,EAAkC;AAC9Bb,cAAAA,WAAW,CAACI,CAAD,CAAX,CAAeM,QAAf,CAAwBE,CAAxB,EAA2BJ,SAA3B,GAAuC,IAAvC;AACAR,cAAAA,WAAW,CAACI,CAAD,CAAX,CAAeM,QAAf,CAAwBE,CAAxB,EAA2BH,WAA3B,GAAyC,IAAItB,IAAJ,GAAWC,cAAX,EAAzC,CAF8B,CAG9B;AACH;AACJ,WAND;AAOH;AACJ,OAVD;AAWH,KAZD,EAnBY,CAgCZ;;AACAjD,IAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BC,EAA3B,EAA+BC,GAA/B,CAAmC;AAC/Bb,MAAAA,QAAQ,EAAEqD;AADqB,KAAnC,EAEE;AAACc,MAAAA,KAAK,EAAC;AAAP,KAFF;AAGC,GArCL,EAqCOnB,KArCP,CAqCaC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAvCL;AAwCH,CAzCC","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp,setUser) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n        if (app.name.name == theApp.name.name){\r\n            app.deviceId = \"\";\r\n        }\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleDeactiveAllApps = (user,product,setUser,callback) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n            app.deviceId = \"\";\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n    callback()\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleInactiveCode = (code,prefixCode, theUser, theCodeObject,callback,setCode) => {\r\n    db.collection(\"codes\").get()\r\n    .then(snapshot => {\r\n    let activeCodeObject = {};\r\n    snapshot.docs.forEach(oneCode => {\r\n        if(Array.isArray(oneCode.data().code)){\r\n            let activeCode = \"\";\r\n            activeCode = oneCode.data().code.find(singleCode => singleCode==code);\r\n            if(activeCode){\r\n                activeCodeObject = oneCode.data() \r\n            }\r\n        }else if(!Array.isArray(oneCode.data().code)){\r\n            if(oneCode.data().code == code) {\r\n                activeCodeObject = oneCode.data() \r\n            }else{\r\n                return\r\n            }\r\n        }\r\n    })\r\n    db.collection(\"inactiveCodes\").add({\r\n        inactiveCode : code,\r\n        activatedBy : theUser.email,\r\n        firstName : theUser.firstName,\r\n        lastName : theUser.lastName,\r\n        prefixCode : prefixCode,\r\n        dataAdded : new Date().toLocaleString(),\r\n        placeOfPurchase: activeCodeObject.purchasedLocation,\r\n        productActivated: activeCodeObject.productActivated,\r\n        notes: activeCodeObject.notes,\r\n    }).then(() => {\r\n        // console.log(theCodeObject.data().productActivated)\r\n        db.collection(\"codes\").doc(theCodeObject.id).delete()\r\n        updateAppsinUser(theCodeObject.data().productActivated,theUser.id,code)\r\n        callback()\r\n        setCode(\"\")\r\n    })\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  const updateAppsinUser = (productsActivated, id,code)=>{\r\n    db.collection(\"users\").doc(id).get()\r\n    .then(snapshot=>{\r\n        let allProducts=snapshot.data().products\r\n        let theNewProduct = {};\r\n        let productActivatedExist = {};\r\n        // console.log(\"allProducts before\",allProducts);\r\n\r\n        productsActivated.apps.forEach(p=>{\r\n            allProducts.forEach((piu,i)=>{\r\n                if(piu.name === p.productName){\r\n                    piu.apps.forEach((app,j)=>{\r\n                        if(app.name === p.appName){\r\n                            allProducts[i].apps[j].purchased = true\r\n                            allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\r\n                            // console.log(\"allProducts\",allProducts)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        productsActivated.features.forEach(p=>{\r\n            allProducts.forEach((piu,i)=>{\r\n                if(piu.name === p.productName){\r\n                    piu.features.forEach((feature,k)=>{\r\n                        if(feature.name === p.featureName){\r\n                            allProducts[i].features[k].purchased = true\r\n                            allProducts[i].features[k].activatedOn = new Date().toLocaleString()\r\n                            // console.log(\"allProducts\",allProducts)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        // console.log(\"allProducts\",allProducts)\r\n        db.collection(\"users\").doc(id).set({\r\n            products: allProducts\r\n        },{merge:true})\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}