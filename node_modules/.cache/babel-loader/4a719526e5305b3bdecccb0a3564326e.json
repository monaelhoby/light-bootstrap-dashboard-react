{"ast":null,"code":"import { db } from '../firebase'; // import {crypto} from 'crypto'\n\nconst crypto = require(\"crypto\");\n\nexport const handleAddCode = (code, setCodes, callback) => {\n  // console.log(code.lengthCode)\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n  cryptoCode = cryptoCode.slice(0, length); // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  });\n  db.collection(\"codes\").add({\n    prefixCode: code.prefixCode,\n    code: code.prefixCode + cryptoCode,\n    suffixCode: cryptoCode,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: activatedProduct,\n    products: code.products,\n    purchasedLocation: code.purchasedLocation,\n    notes: code.notes\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleAddCodes = (code, setCodes, callback) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null; // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  }); // console.log(\"activatedProduct\", activatedProduct)\n\n  for (let i = 0; i < code.quantity; i++) {\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n    cryptoCode = cryptoCode.slice(0, length);\n    db.collection(\"codes\").add({\n      prefixCode: code.prefixCode,\n      code: code.prefixCode + cryptoCode,\n      dateAdded: new Date().toLocaleString(),\n      productActivated: activatedProduct,\n      purchasedLocation: code.purchasedLocation,\n      notes: code.notes,\n      products: code.products,\n      suffix: code.cryptoCode\n    }).then(() => {\n      db.collection(\"codes\").get().then(snapshot => {\n        let codes = [];\n        snapshot.docs.forEach(code => {\n          code.checked = false;\n          codes.push(code);\n        });\n        setCodes([...snapshot.docs]);\n        callback();\n      });\n    }).catch(error => {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n};\nexport const handleDeleteCode = (code, setCodes, callback) => {\n  db.collection(\"codes\").doc(code.id).delete().then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      setCodes([...snapshot.docs]);\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const handleDeleteCodes = (ids, setCodes, callback) => {\n  let theCodes = [];\n  return db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"codes\").doc(uid).delete();\n        codes.push(code);\n      });\n    });\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        theCodes.push(code);\n      });\n      setCodes([...theCodes]);\n    });\n    callback();\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleEditCode = (editCode, setCodes, callback) => {\n  // console.log(\"editCode\", editCode)\n  let activatedProduct = [];\n  editCode.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  });\n  console.log(editCode);\n  db.collection(\"codes\").doc(editCode.id).update({\n    prefixCode: editCode.prefixCode,\n    code: editCode.prefixCode + editCode.suffixCode,\n    productActivated: activatedProduct,\n    notes: editCode.notes,\n    products: editCode.products\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleEditCodes = (editCode, setCodes, callback) => {\n  db.collection(\"codes\").doc(editCode.id).update({\n    productActivated: editCode.apps,\n    notes: editCode.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteInactiveCodes = (ids, setCodes, callback) => {\n  // console.log(ids)\n  return db.collection(\"inactiveCodes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      ids.forEach(uid => {\n        db.collection(\"inactiveCodes\").doc(uid).delete();\n      });\n    });\n    callback();\n  }).then(() => {\n    db.collection(\"inactiveCodes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        codes.push(code);\n      });\n      setCodes([...codes]);\n    });\n    callback();\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleReactiveCode = (code, setCodes, callback) => {\n  console.log(code);\n  db.collection(\"codes\").add({\n    code: code.code,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    products: code.products,\n    purchasedLocation: code.placeOfPurchase,\n    notes: code.notes,\n    prefixCode: code.prefixCode,\n    suffix: code.suffixCode\n  }).then(() => {\n    db.collection(\"inactiveCodes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        db.collection(\"inactiveCodes\").doc(code.id).delete();\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n    });\n    callback();\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/codeActions.js"],"names":["db","crypto","require","handleAddCode","code","setCodes","callback","length","Number","lengthCode","cryptoCode","randomBytes","toString","slice","activatedProduct","products","forEach","product","theProduct","checked","name","productName","id","productId","apps","app","push","features","feature","collection","add","prefixCode","suffixCode","dateAdded","Date","toLocaleString","productActivated","purchasedLocation","notes","then","get","snapshot","codes","docs","catch","error","console","handleAddCodes","i","quantity","suffix","handleDeleteCode","doc","delete","err","log","handleDeleteCodes","ids","theCodes","uid","handleEditCode","editCode","update","handleEditCodes","handleDeleteInactiveCodes","handleReactiveCode","placeOfPurchase"],"mappings":"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","sourcesContent":["import {db} from '../firebase';\r\n// import {crypto} from 'crypto'\r\nconst crypto = require(\"crypto\");\r\n\r\nexport const handleAddCode = (code,setCodes,callback) => {\r\n    // console.log(code.lengthCode)\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    cryptoCode = cryptoCode.slice(0,length)\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : code.prefixCode+cryptoCode,\r\n        suffixCode : cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        products : code.products,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n    })\r\n    .then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleAddCodes = (code,setCodes,callback) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    // console.log(\"activatedProduct\", activatedProduct)\r\n    for(let i =0; i<code.quantity; i++){\r\n        cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n        cryptoCode = cryptoCode.slice(0,length)\r\n    db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : code.prefixCode+cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n        products: code.products,\r\n        suffix: code.cryptoCode\r\n    })\r\n    .then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...snapshot.docs]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n    }\r\n}\r\n\r\nexport const handleDeleteCode = (code,setCodes,callback)=>{\r\n    \r\n\r\n    db.collection(\"codes\").doc(code.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"codes\").get()\r\n        .then(snapshot=>{\r\n            setCodes([...snapshot.docs]);\r\n        })\r\n        callback()\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteCodes = (ids, setCodes,callback) =>{  \r\n    let theCodes = [];\r\n    return db.collection(\"codes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"codes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n        })\r\n    }).then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            snapshot.docs.forEach(code => {\r\n                code.checked = false;\r\n                theCodes.push(code)\r\n            })\r\n            setCodes([...theCodes]);\r\n        })\r\n        callback()\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleEditCode = (editCode,setCodes,callback) => {\r\n    // console.log(\"editCode\", editCode)\r\n    let activatedProduct = []\r\n    editCode.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    console.log(editCode)\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        prefixCode : editCode.prefixCode,\r\n        code : editCode.prefixCode+editCode.suffixCode,\r\n        productActivated : activatedProduct,\r\n        notes : editCode.notes,\r\n        products : editCode.products\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleEditCodes = (editCode,setCodes,callback) => {\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        productActivated : editCode.apps,\r\n        notes : editCode.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteInactiveCodes = (ids, setCodes,callback) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"inactiveCodes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            ids.forEach(uid => {\r\n                db.collection(\"inactiveCodes\").doc(uid).delete();\r\n            })\r\n        })\r\n        callback()\r\n    }).then(() => {\r\n        db.collection(\"inactiveCodes\").get().then((snapshot) => {\r\n            let codes =[]\r\n            snapshot.docs.forEach((code) => {\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes])\r\n        })\r\n        callback()\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleReactiveCode = (code,setCodes,callback) => {\r\n    console.log(code)\r\n    db.collection(\"codes\").add({\r\n        code : code.code,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        products : code.products,\r\n        purchasedLocation : code.placeOfPurchase,\r\n        notes : code.notes,\r\n        prefixCode : code.prefixCode,\r\n        suffix: code.suffixCode\r\n    })\r\n    .then(() => {\r\n        db.collection(\"inactiveCodes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                db.collection(\"inactiveCodes\").doc(code.id).delete()\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n        })\r\n        callback()\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}