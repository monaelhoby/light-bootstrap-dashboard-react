{"ast":null,"code":"import { functions, db } from \"../firebase\";\nconst deleteUser = functions.httpsCallable(\"deleteUser\");\nconst deleteUsers = functions.httpsCallable(\"deleteUsers\");\nconst updateUser = functions.httpsCallable(\"updateUser\");\nexport const handleUpdateUser = (user, setUsers, callback) => {\n  let theUsers = [];\n  return updateUser(user).then(() => {\n    console.log(\"updated successfully\"); // db.collection(\"users\").doc(user.uid).update({\n    //     email:user.email,\n    //     password:user.password,\n    //     userName:user.userName,\n    //     userCode:user.userCode,\n    //     products:user.products\n    // })\n    // .then(()=>{\n    //     db.collection(\"users\").get().then(snapshot=>{\n    //         snapshot.docs.forEach(user=>{\n    //             user.checked = false;\n    //             user.purchased = false;\n    //             theUsers.push(user);\n    //         })\n    //         setUsers([...theUsers]);\n    //     })\n    // })\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteUser = (uid, users, i, setUsers) => {\n  users.splice(i, 1);\n  setUsers([...users]);\n  return deleteUser({\n    uid: uid\n  }).then(() => {\n    db.collection(\"users\").doc(uid).delete();\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteUsers = ids => {\n  return deleteUsers(ids).then(res => {\n    console.log(\"res after deleting users\", res);\n    ids.forEach(uid => {\n      db.collection(\"users\").doc(uid).delete();\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\n\nconst deleteDoc = n => {\n  if (n == 0) return;\n  console.log(n);\n};\n\nconst returnFilteredUsers = (users, userId) => {\n  let newUsers = users.filter(user => {\n    return user.id !== userId;\n  });\n  return newUsers;\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Ramdan Work/light-bootstrap-dashboard-react/src/views/UsersAction.js"],"names":["functions","db","deleteUser","httpsCallable","deleteUsers","updateUser","handleUpdateUser","user","setUsers","callback","theUsers","then","console","log","catch","err","handleDeleteUser","uid","users","i","splice","collection","doc","delete","handleDeleteUsers","ids","res","forEach","deleteDoc","n","returnFilteredUsers","userId","newUsers","filter","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,EAApB,QAA8B,aAA9B;AACA,MAAMC,UAAU,GAAIF,SAAS,CAACG,aAAV,CAAwB,YAAxB,CAApB;AACA,MAAMC,WAAW,GAAGJ,SAAS,CAACG,aAAV,CAAwB,aAAxB,CAApB;AACA,MAAME,UAAU,GAAIL,SAAS,CAACG,aAAV,CAAwB,YAAxB,CAApB;AAEA,OAAO,MAAMG,gBAAgB,GAAG,CAACC,IAAD,EAAMC,QAAN,EAAeC,QAAf,KAA0B;AACtD,MAAIC,QAAQ,GAAG,EAAf;AACA,SAAOL,UAAU,CAACE,IAAD,CAAV,CACNI,IADM,CACD,MAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GApBM,EAqBNC,KArBM,CAqBAC,GAAG,IAAE;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AACH,GAvBM,CAAP;AAwBH,CA1BM;AA+BP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAKC,KAAL,EAAWC,CAAX,EAAaX,QAAb,KAAwB;AACpDU,EAAAA,KAAK,CAACE,MAAN,CAAaD,CAAb,EAAgB,CAAhB;AACAX,EAAAA,QAAQ,CAAC,CAAC,GAAGU,KAAJ,CAAD,CAAR;AAEA,SAAOhB,UAAU,CAAC;AAACe,IAAAA,GAAG,EAACA;AAAL,GAAD,CAAV,CACNN,IADM,CACD,MAAI;AACNV,IAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,GAA3B,EAAgCM,MAAhC;AAEH,GAJM,EAKNT,KALM,CAKAC,GAAG,IAAE;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AACH,GAPM,CAAP;AAQH,CAZM;AAaP,OAAO,MAAMS,iBAAiB,GAAIC,GAAD,IAAQ;AACrC,SAAOrB,WAAW,CAACqB,GAAD,CAAX,CACNd,IADM,CACDe,GAAG,IAAE;AACPd,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCa,GAAvC;AACAD,IAAAA,GAAG,CAACE,OAAJ,CAAYV,GAAG,IAAI;AACfhB,MAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,GAA3B,EAAgCM,MAAhC;AACH,KAFD;AAGH,GANM,EAMJT,KANI,CAMEC,GAAG,IAAE;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBE,GAAlB;AACH,GARM,CAAP;AASH,CAVM;;AAeP,MAAMa,SAAS,GAAIC,CAAD,IAAK;AACnB,MAAGA,CAAC,IAAI,CAAR,EAAW;AAEXjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAZ;AACH,CAJD;;AAMA,MAAMC,mBAAmB,GAAG,CAACZ,KAAD,EAAOa,MAAP,KAAgB;AACxC,MAAIC,QAAQ,GAAGd,KAAK,CAACe,MAAN,CAAa1B,IAAI,IAAE;AAC9B,WAAOA,IAAI,CAAC2B,EAAL,KAAYH,MAAnB;AACH,GAFc,CAAf;AAGA,SAAOC,QAAP;AACH,CALD","sourcesContent":["import { functions, db } from \"../firebase\";\r\nconst deleteUser  = functions.httpsCallable(\"deleteUser\");\r\nconst deleteUsers = functions.httpsCallable(\"deleteUsers\");\r\nconst updateUser  = functions.httpsCallable(\"updateUser\");\r\n\r\nexport const handleUpdateUser = (user,setUsers,callback)=>{\r\n    let theUsers = []\r\n    return updateUser(user)\r\n    .then(()=>{\r\n        console.log(\"updated successfully\")\r\n        // db.collection(\"users\").doc(user.uid).update({\r\n        //     email:user.email,\r\n        //     password:user.password,\r\n        //     userName:user.userName,\r\n        //     userCode:user.userCode,\r\n        //     products:user.products\r\n        // })\r\n        // .then(()=>{\r\n        //     db.collection(\"users\").get().then(snapshot=>{\r\n        //         snapshot.docs.forEach(user=>{\r\n        //             user.checked = false;\r\n        //             user.purchased = false;\r\n        //             theUsers.push(user);\r\n        //         })\r\n        //         setUsers([...theUsers]);\r\n        //     })\r\n        // })\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const handleDeleteUser = (uid,users,i,setUsers)=>{\r\n    users.splice(i, 1);\r\n    setUsers([...users]);\r\n\r\n    return deleteUser({uid:uid})\r\n    .then(()=>{\r\n        db.collection(\"users\").doc(uid).delete();\r\n\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\nexport const handleDeleteUsers = (ids) =>{\r\n    return deleteUsers(ids)\r\n    .then(res=>{\r\n        console.log(\"res after deleting users\",res);\r\n        ids.forEach(uid => {\r\n            db.collection(\"users\").doc(uid).delete();\r\n        });\r\n    }).catch(err=>{\r\n        console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst deleteDoc = (n)=>{\r\n    if(n == 0) return;\r\n\r\n    console.log(n);\r\n}\r\n\r\nconst returnFilteredUsers = (users,userId)=>{\r\n    let newUsers = users.filter(user=>{\r\n        return user.id !== userId;\r\n    })\r\n    return newUsers; \r\n}"]},"metadata":{},"sourceType":"module"}