{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditProduct = (editableProduct, setProducts, callback) => {\n  // console.log(\"editableProduct\",editableProduct)\n  db.collection(\"products\").doc(editableProduct.id).update({\n    name: editableProduct.name,\n    purchasedUrl: editableProduct.purchasedUrl,\n    unpurchasedUrl: editableProduct.unpurchasedUrl,\n    visibility: editableProduct.visibility,\n    productIcon: editableProduct.productIcon,\n    description: editableProduct.description,\n    id: editableProduct.id,\n    apps: editableProduct.apps,\n    features: editableProduct.features\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      // console.log(snapshot.docs[0].data())\n      setProducts([...snapshot.docs]);\n      updateProductsinUsers(editableProduct); // updateProductsinCodes(editableProduct)\n\n      callback();\n\n      if (theOffset || thePageLimit) {\n        setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentProducts([...snapshot.docs]);\n      }\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const handleAddNewProduct = (addedProduct, setProducts, callback) => {\n  // console.log(addedProduct)\n  db.collection(\"products\").add({\n    name: addedProduct.name,\n    description: addedProduct.description,\n    purchasedUrl: addedProduct.purchasedUrl,\n    unpurchasedUrl: addedProduct.unpurchasedUrl,\n    visibility: addedProduct.visibility,\n    productIcon: addedProduct.productIcon,\n    apps: addedProduct.apps[0].name.length ? addedProduct.apps : null,\n    features: addedProduct.features[0].name.length ? addedProduct.features : null // id : addedProduct.id\n\n  }).then(newProduct => {\n    db.collection(\"products\").get().then(snapshot => {\n      let products = [];\n      snapshot.docs.forEach(product => {\n        product.checked = false;\n        products.push(product);\n      });\n      setProducts([...products]); // console.log(\"addedProduct\", addedProduct)\n\n      addNewProductToUsers(addedProduct, newProduct.id);\n      callback();\n\n      if (theOffset || thePageLimit) {\n        setCurrentProducts(products.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentProducts([...products]);\n      }\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteProduct = (product, setProducts, callback) => {\n  // console.log(product.id)\n  db.collection(\"products\").doc(product.id).delete().then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      deleteProductFromUsers(product.data().name);\n\n      if (theOffset || thePageLimit) {\n        setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentProducts([...snapshot.docs]);\n      }\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateProductsinUsers = product => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(p => {\n        return product.id !== p.id;\n      });\n      let oldProduct = user.data().products.find(p => {\n        // console.log(\"p.id\", p.id)\n        // console.log(\"product.id\", product.id)\n        return product.id == p.id;\n      }); // console.log(\"old product is\",oldProduct)\n\n      let theNewProduct = {};\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      theNewProduct.features = [];\n      product.apps ? product.apps.forEach(a => {\n        let exist = false;\n        let generatedApp = {};\n        oldProduct ? oldProduct.apps.forEach(app => {\n          generatedApp.name = a.name;\n          generatedApp.tag = a.tag;\n          generatedApp.inActiveUrl = a.inActiveUrl;\n          generatedApp.activeUrl = a.activeUrl;\n          generatedApp.appIcon = a.appIcon;\n\n          if (app.name == a.name) {\n            // console.log(a)\n            exist = true;\n            generatedApp.active = app.active;\n            generatedApp.comments = a.comment ? a.comment : \"\";\n            generatedApp.purchased = app.purchased;\n            generatedApp.credentials = app.credentials;\n            generatedApp.expireDate = app.expireDate;\n            generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n            generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n            generatedApp.lastLaunchDate = app.lastLaunchDate;\n            generatedApp.timesAppLaunched = app.timesAppLaunched;\n            generatedApp.deviceId = app.deviceId;\n            generatedApp.activatedOn = app.activatedOn;\n            generatedApp.codeUsed = app.codeUsed;\n            generatedApp.DateofLastUse = app.DateofLastUse;\n            generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n          }\n        }) : null;\n\n        if (!exist) {\n          generatedApp.active = false;\n          generatedApp.comments = \"\";\n          generatedApp.purchased = false;\n          generatedApp.credentials = false;\n          generatedApp.expireDate = \"\";\n          generatedApp.timesAppLaunchedLastLogin = \"\";\n          generatedApp.timesAppLaunchedPurchased = \"\";\n          generatedApp.lastLaunchDate = \"\";\n          generatedApp.timesAppLaunched = \"\";\n          generatedApp.deviceId = \"\";\n          generatedApp.activatedOn = \"\";\n          generatedApp.codeUsed = \"\";\n          generatedApp.DateofLastUse = \"\";\n          generatedApp.LaunchesSinceActive = \"\";\n        }\n\n        theNewProduct.apps.push(generatedApp);\n      }) : null;\n      product.features ? product.features.forEach(a => {\n        let exist = false;\n        let generatedFeature = {};\n        oldProduct ? oldProduct.features.forEach(feature => {\n          // console.log(\"a:\",a)\n          // console.log(\"feature:\",feature)\n          // console.log(a)\n          exist = true;\n          generatedFeature.name = a.name;\n          generatedFeature.tag = a.tag;\n          generatedFeature.activeUrl = a.activeUrl;\n          generatedFeature.inActiveUrl = a.inActiveUrl;\n          generatedFeature.comments = a.comment ? a.comment : \"\";\n          generatedFeature.active = feature.active ? feature.active : false;\n          generatedFeature.purchased = feature.purchased ? feature.purchased : false;\n          generatedFeature.expireDate = feature.expireDate ? feature.expireDate : \"30/3/2021\";\n          generatedFeature.activatedOn = feature.activatedOn ? feature.activatedOn : '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\n          generatedFeature.codeUsed = feature.codeUsed ? feature.codeUsed : '123456789';\n        }) : null;\n        theNewProduct.features.push(generatedFeature);\n      }) : null;\n      products.push(theNewProduct); // console.log(products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const deleteProductFromUsers = productName => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(product => {\n        // console.log(product.id)\n        return product.name !== productName;\n      }); // console.log(\"products is \",products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nconst addNewProductToUsers = (product, productId) => {\n  db.collection(\"users\").get().then(snapshot => {\n    // console.log(productId)\n    let theProduct = {};\n    theProduct.name = product.name;\n    theProduct.purchasedUrl = product.purchasedUrl;\n    theProduct.unpurchasedUrl = product.unpurchasedUrl;\n    theProduct.visibility = product.visibility;\n    theProduct.productIcon = product.productIcon, theProduct.description = product.description, theProduct.apps = [];\n    theProduct.features = [];\n    theProduct.id = productId; // theProduct.id = product.id;\n\n    if (product.apps[0].name.length) {\n      product.apps.forEach(app => {\n        theProduct.apps.push({\n          name: app.name,\n          activeUrl: app.activeUrl ? app.activeUrl : \"\",\n          inActiveUrl: app.inActiveUrl ? app.inActiveUrl : \"\",\n          tag: app.tag ? app.tag : \"\",\n          appIcon: app.appIcon ? app.appIcon : \"\",\n          active: app.active ? app.active : false,\n          purchased: app.purchased ? app.purchased : false,\n          credentials: app.credentials ? app.credentials : \"\",\n          expireDate: app.expireDate ? app.expireDate : \"\",\n          timesAppLaunchedLastLogin: app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\n          timesAppLaunchedPurchased: app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\n          lastLaunchDate: app.lastLaunchDate ? app.lastLaunchDate : \"\",\n          timesAppLaunched: app.timesAppLaunched ? app.timesAppLaunched : \"\",\n          deviceId: \"9876543\",\n          activatedOn: app.activatedOn ? app.activatedOn : \"\",\n          codeUsed: \"9876543\",\n          DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\n          LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\n        });\n      });\n    }\n\n    if (product.features[0].name.length) {\n      product.features.forEach(feature => {\n        theProduct.features.push({\n          name: feature.name,\n          activeUrl: feature.activeUrl ? feature.activeUrl : \"\",\n          inActiveUrl: feature.inActiveUrl ? feature.inActiveUrl : \"\",\n          tag: feature.tag ? feature.tag : \"\",\n          active: false,\n          purchased: false,\n          expireDate: \"\",\n          activatedOn: \"\",\n          codeUsed: \"9876543\"\n        });\n      });\n    }\n\n    snapshot.docs.forEach(user => {\n      let products = user.data().products;\n      products.push(theProduct);\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n}; // const updateProductsinCodes = (product)=>{\n//     db.collection(\"codes\").get().then(snapshot=>{\n//         snapshot.docs.forEach(code=>{\n//             let allAppCodes=code.data().productActivated.apps\n//             // console.log(\"allProducts before\",allProducts);\n//             allAppCodes.forEach(app => {\n//                 if(product.name === app.productName){\n//                     app.productName = \n//                     piu.apps.forEach((app,j)=>{\n//                         if(app.name === p.appName){\n//                             allProducts[i].apps[j].purchased = true\n//                             allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\n//                             // console.log(\"allAppCodes\",allAppCodes)\n//                         }\n//                     })\n//                 }\n//             })\n//             code.data().productActivated.apps.forEach(app => {\n//                 if(app.productName == product.name){\n//                 }\n//             })\n//             // db.collection(\"codes\").doc(code.id).update({\n//             // })\n//             console.log(code.data())\n//             // console.log(products)\n//             // db.collection(\"users\").doc(user.id).set({\n//             //     products\n//             // },{merge:true})\n//         })\n//     })\n// }\n\n\nexport const handleDeleteProducts = (ids, setProducts, callback) => {\n  // console.log(ids)\n  return db.collection(\"products\").get().then(snapshot => {\n    snapshot.docs.forEach(product => {\n      let products = [];\n      ids.forEach(uid => {\n        db.collection(\"products\").doc(uid).delete();\n        products.push(product);\n        deleteProductFromUsers(product.data().name); // console.log(\"[...snapshot.docs]\", product.data())\n      });\n    });\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      callback();\n\n      if (theOffset || thePageLimit) {\n        setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentProducts([...snapshot.docs]);\n      }\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n}; // const resetUsersDetails = () =>{\n//     let products;\n//     db.collection(\"products\").get().then(snapshot=>{\n//         products = snapshot.docs;\n//         db.collection(\"users\").get().then(snapshot=>{\n//             snapshot.docs.forEach(user=>{\n//                 products.forEach(product=>{\n//                     user.products\n//                 })\n//             })\n//         })\n//     });  \n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/ProductsActions.js"],"names":["db","handleEditProduct","editableProduct","setProducts","callback","collection","doc","id","update","name","purchasedUrl","unpurchasedUrl","visibility","productIcon","description","apps","features","then","get","snapshot","docs","updateProductsinUsers","theOffset","thePageLimit","setCurrentProducts","slice","catch","err","console","log","handleAddNewProduct","addedProduct","add","length","newProduct","products","forEach","product","checked","push","addNewProductToUsers","error","handleDeleteProduct","delete","deleteProductFromUsers","data","user","filter","p","oldProduct","find","theNewProduct","a","exist","generatedApp","app","tag","inActiveUrl","activeUrl","appIcon","active","comments","comment","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive","generatedFeature","feature","set","merge","productName","productId","theProduct","handleDeleteProducts","ids","uid"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\nexport const handleEditProduct = (editableProduct,setProducts,callback)=> {\r\n    // console.log(\"editableProduct\",editableProduct)\r\n    db.collection(\"products\").doc(editableProduct.id).update({\r\n        name:editableProduct.name,\r\n        purchasedUrl: editableProduct.purchasedUrl,\r\n        unpurchasedUrl: editableProduct.unpurchasedUrl,\r\n        visibility: editableProduct.visibility,\r\n        productIcon: editableProduct.productIcon,\r\n        description: editableProduct.description,\r\n        id: editableProduct.id,\r\n        apps:editableProduct.apps,\r\n        features:editableProduct.features\r\n    }).then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            // console.log(snapshot.docs[0].data())\r\n            setProducts([...snapshot.docs]);\r\n            updateProductsinUsers(editableProduct)\r\n            // updateProductsinCodes(editableProduct)\r\n            callback();\r\n            if(theOffset || thePageLimit){\r\n                setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit))\r\n            }else{\r\n                setCurrentProducts([...snapshot.docs])\r\n            }\r\n        })\r\n    })\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const handleAddNewProduct = (addedProduct,setProducts,callback)=>{\r\n    // console.log(addedProduct)\r\n    db.collection(\"products\").add({\r\n        name: addedProduct.name,\r\n        description: addedProduct.description,\r\n        purchasedUrl: addedProduct.purchasedUrl,\r\n        unpurchasedUrl: addedProduct.unpurchasedUrl,\r\n        visibility: addedProduct.visibility,\r\n        productIcon: addedProduct.productIcon,\r\n        apps: addedProduct.apps[0].name.length?addedProduct.apps:null,\r\n        features: addedProduct.features[0].name.length?addedProduct.features:null,\r\n        // id : addedProduct.id\r\n    })\r\n    .then((newProduct) => {\r\n        db.collection(\"products\").get().then(snapshot=>{\r\n            let products = [];\r\n            snapshot.docs.forEach(product=>{\r\n                product.checked = false;\r\n                products.push(product)\r\n            })\r\n            setProducts([...products]);\r\n            // console.log(\"addedProduct\", addedProduct)\r\n            addNewProductToUsers(addedProduct,newProduct.id)\r\n            callback() \r\n            if(theOffset || thePageLimit){\r\n                setCurrentProducts(products.slice(theOffset, theOffset + thePageLimit))\r\n            }else{\r\n                setCurrentProducts([...products])\r\n            }\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteProduct = (product,setProducts, callback)=>{\r\n    // console.log(product.id)\r\n    db.collection(\"products\").doc(product.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            deleteProductFromUsers(product.data().name);\r\n            if(theOffset || thePageLimit){\r\n                setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit))\r\n            }else{\r\n                setCurrentProducts([...snapshot.docs])\r\n            }\r\n        })\r\n        callback()\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\nconst updateProductsinUsers = (product)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(p=>{\r\n                return product.id !== p.id;\r\n            });\r\n\r\n            let oldProduct = user.data().products.find(p=>{\r\n                // console.log(\"p.id\", p.id)\r\n                // console.log(\"product.id\", product.id)\r\n                return product.id == p.id\r\n            })\r\n            // console.log(\"old product is\",oldProduct)\r\n\r\n            let theNewProduct = {};\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            theNewProduct.features = [];\r\n            product.apps ? product.apps.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedApp   = {};\r\n                oldProduct ? oldProduct.apps.forEach((app)=>{\r\n                    generatedApp.name = a.name;\r\n                    generatedApp.tag = a.tag;\r\n                    generatedApp.inActiveUrl = a.inActiveUrl;\r\n                    generatedApp.activeUrl = a.activeUrl;\r\n                    generatedApp.appIcon = a.appIcon;\r\n\r\n                    if(app.name == a.name){\r\n                        // console.log(a)\r\n                        exist = true;\r\n                        generatedApp.active = app.active\r\n                        generatedApp.comments = a.comment?a.comment : \"\"\r\n                        generatedApp.purchased= app.purchased\r\n                        generatedApp.credentials = app.credentials\r\n                        generatedApp.expireDate= app.expireDate\r\n                        generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                        generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                        generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                        generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                        generatedApp.deviceId = app.deviceId \r\n                        generatedApp.activatedOn= app.activatedOn\r\n                        generatedApp.codeUsed= app.codeUsed\r\n                        generatedApp.DateofLastUse= app.DateofLastUse\r\n                        generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                    }\r\n                }) : null\r\n\r\n                if(!exist){\r\n                    generatedApp.active = false;\r\n                    generatedApp.comments =  \"\"\r\n                    generatedApp.purchased= false\r\n                    generatedApp.credentials = false\r\n                    generatedApp.expireDate= \"\"\r\n                    generatedApp.timesAppLaunchedLastLogin = \"\"\r\n                    generatedApp.timesAppLaunchedPurchased = \"\"\r\n                    generatedApp.lastLaunchDate = \"\"\r\n                    generatedApp.timesAppLaunched = \"\"\r\n                    generatedApp.deviceId = \"\"\r\n                    generatedApp.activatedOn= \"\"\r\n                    generatedApp.codeUsed= \"\" \r\n                    generatedApp.DateofLastUse= \"\"\r\n                    generatedApp.LaunchesSinceActive= \"\"\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedApp)\r\n            }) : null\r\n            product.features ? product.features.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedFeature   = {};\r\n                oldProduct ? oldProduct.features.forEach((feature)=>{\r\n                    // console.log(\"a:\",a)\r\n                    // console.log(\"feature:\",feature)\r\n                        // console.log(a)\r\n                        exist = true;\r\n                        generatedFeature.name = a.name;\r\n                        generatedFeature.tag = a.tag;\r\n                        generatedFeature.activeUrl = a.activeUrl;\r\n                        generatedFeature.inActiveUrl = a.inActiveUrl;\r\n                        generatedFeature.comments = a.comment?a.comment : \"\"\r\n                        generatedFeature.active=feature.active? feature.active : false;\r\n                        generatedFeature.purchased= feature.purchased ? feature.purchased : false;\r\n                        generatedFeature.expireDate= feature.expireDate?feature.expireDate:\"30/3/2021\";\r\n                        generatedFeature.activatedOn= feature.activatedOn?feature.activatedOn : '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\r\n                        generatedFeature.codeUsed= feature.codeUsed ? feature.codeUsed : '123456789' \r\n                }) : null\r\n\r\n                theNewProduct.features.push(generatedFeature)\r\n            }) : null\r\n\r\n            products.push(theNewProduct)\r\n            // console.log(products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteProductFromUsers = (productName)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(product=>{\r\n                // console.log(product.id)\r\n                return product.name !== productName;\r\n            });\r\n\r\n            // console.log(\"products is \",products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewProductToUsers = (product,productId)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        // console.log(productId)\r\n        let theProduct = {};\r\n        theProduct.name = product.name;\r\n        theProduct.purchasedUrl= product.purchasedUrl;\r\n        theProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n        theProduct.visibility= product.visibility;\r\n        theProduct.productIcon= product.productIcon,\r\n        theProduct.description= product.description,\r\n        theProduct.apps = [];\r\n        theProduct.features = [];\r\n        theProduct.id = productId\r\n        // theProduct.id = product.id;\r\n    if(product.apps[0].name.length){\r\n        product.apps.forEach(app=>{\r\n            theProduct.apps.push({\r\n                name:app.name,\r\n                activeUrl:app.activeUrl ? app.activeUrl : \"\",\r\n                inActiveUrl:app.inActiveUrl ? app.inActiveUrl : \"\",\r\n                tag: app.tag ? app.tag : \"\",\r\n                appIcon: app.appIcon ? app.appIcon : \"\",\r\n                active:app.active ? app.active : false,\r\n                purchased: app.purchased ? app.purchased : false,\r\n                credentials : app.credentials ? app.credentials : \"\",\r\n                expireDate: app.expireDate ? app.expireDate : \"\",\r\n                timesAppLaunchedLastLogin : app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\r\n                timesAppLaunchedPurchased : app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\r\n                lastLaunchDate : app.lastLaunchDate ? app.lastLaunchDate : \"\",\r\n                timesAppLaunched : app.timesAppLaunched ? app.timesAppLaunched : \"\",\r\n                deviceId : \"9876543\",\r\n                activatedOn: app.activatedOn ? app.activatedOn : \"\",\r\n                codeUsed: \"9876543\" ,\r\n                DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\r\n                LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\r\n            })\r\n        })\r\n    }\r\n    if(product.features[0].name.length){    \r\n        product.features.forEach(feature => {\r\n            theProduct.features.push({\r\n            name:feature.name,\r\n            activeUrl:feature.activeUrl ? feature.activeUrl : \"\",\r\n            inActiveUrl:feature.inActiveUrl ? feature.inActiveUrl : \"\",\r\n            tag: feature.tag ? feature.tag : \"\",\r\n            active: false,\r\n            purchased:  false,\r\n            expireDate: \"\",\r\n            activatedOn:  \"\",\r\n            codeUsed: \"9876543\" ,\r\n            })\r\n        })\r\n    }\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products;\r\n            products.push(theProduct);\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\n// const updateProductsinCodes = (product)=>{\r\n//     db.collection(\"codes\").get().then(snapshot=>{\r\n//         snapshot.docs.forEach(code=>{\r\n//             let allAppCodes=code.data().productActivated.apps\r\n//             // console.log(\"allProducts before\",allProducts);\r\n//             allAppCodes.forEach(app => {\r\n//                 if(product.name === app.productName){\r\n//                     app.productName = \r\n//                     piu.apps.forEach((app,j)=>{\r\n//                         if(app.name === p.appName){\r\n//                             allProducts[i].apps[j].purchased = true\r\n//                             allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\r\n//                             // console.log(\"allAppCodes\",allAppCodes)\r\n//                         }\r\n//                     })\r\n//                 }\r\n//             })\r\n//             code.data().productActivated.apps.forEach(app => {\r\n//                 if(app.productName == product.name){\r\n\r\n//                 }\r\n//             })\r\n//             // db.collection(\"codes\").doc(code.id).update({\r\n//             // })\r\n//             console.log(code.data())\r\n            \r\n//             // console.log(products)\r\n//             // db.collection(\"users\").doc(user.id).set({\r\n//             //     products\r\n//             // },{merge:true})\r\n//         })\r\n//     })\r\n// }\r\n\r\nexport const handleDeleteProducts = (ids, setProducts,callback) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"products\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((product) => {\r\n            let products = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"products\").doc(uid).delete();\r\n                products.push(product)\r\n                deleteProductFromUsers(product.data().name);\r\n                // console.log(\"[...snapshot.docs]\", product.data())\r\n            })\r\n        })\r\n    }).then(() => {\r\n        db.collection(\"products\").get()\r\n        .then(snapshot => {\r\n            setProducts([...snapshot.docs])\r\n            callback() \r\n            if(theOffset || thePageLimit){\r\n                setCurrentProducts(snapshot.docs.slice(theOffset, theOffset + thePageLimit))\r\n            }else{\r\n                setCurrentProducts([...snapshot.docs])\r\n            }\r\n        })\r\n    })\r\n    .catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n// const resetUsersDetails = () =>{\r\n//     let products;\r\n//     db.collection(\"products\").get().then(snapshot=>{\r\n//         products = snapshot.docs;\r\n//         db.collection(\"users\").get().then(snapshot=>{\r\n//             snapshot.docs.forEach(user=>{\r\n//                 products.forEach(product=>{\r\n//                     user.products\r\n//                 })\r\n//             })\r\n//         })\r\n//     });  \r\n// }"]},"metadata":{},"sourceType":"module"}