{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp, setUser) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    if (app.name.name == theApp.name.name) {\n      app.deviceId = \"\";\n    }\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleDeactiveAllApps = (user, product, setUser, callback) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    app.deviceId = \"\";\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  callback();\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleInactiveCode = code => {\n  db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(oneCode => {\n      let activeCode = 3;\n\n      if (Array.isArray(oneCode.data().code)) {\n        let activeCode = \"\";\n        activeCode = oneCode.data().code.find(singleCode => singleCode == code);\n\n        if (activeCode) {\n          activeCode = oneCode.data();\n        }\n      } else if (!Array.isArray(oneCode.data().code)) {\n        if (oneCode.data().code == code) {\n          activeCode = oneCode.data();\n        } else {\n          return;\n        }\n      }\n    });\n    console.log(\"activeCode\", activeCode);\n  }); //   db.collection(\"inactiveCodes\").add({\n  //   })\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","setUser","newUser","editableProduct","products","find","p","name","filter","apps","forEach","app","deviceId","push","collection","doc","id","set","handleDeactiveAllApps","callback","handleInactiveCode","code","get","then","snapshot","docs","oneCode","activeCode","Array","isArray","data","singleCode","console","log"],"mappings":"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","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp,setUser) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n        if (app.name.name == theApp.name.name){\r\n            app.deviceId = \"\";\r\n        }\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleDeactiveAllApps = (user,product,setUser,callback) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n            app.deviceId = \"\";\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n    callback()\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleInactiveCode = code => {\r\n      db.collection(\"codes\").get()\r\n      .then(snapshot => {\r\n        snapshot.docs.forEach(oneCode => {\r\n            let activeCode = 3;\r\n            if(Array.isArray(oneCode.data().code)){\r\n                let activeCode = \"\";\r\n                activeCode = oneCode.data().code.find(singleCode => singleCode==code);\r\n                if(activeCode){\r\n                    activeCode = oneCode.data() \r\n                }\r\n            }else if(!Array.isArray(oneCode.data().code)){\r\n                if(oneCode.data().code == code) {\r\n                    activeCode = oneCode.data() \r\n                }else{\r\n                    return\r\n                }\r\n            }\r\n        })\r\n        console.log(\"activeCode\", activeCode)\r\n      })\r\n    //   db.collection(\"inactiveCodes\").add({\r\n\r\n    //   })\r\n  }"]},"metadata":{},"sourceType":"module"}