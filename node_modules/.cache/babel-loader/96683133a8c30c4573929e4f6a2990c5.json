{"ast":null,"code":"var _jsxFileName = \"E:\\\\Folder\\\\React\\\\projects\\\\my_freelance_work\\\\M.Radwan Work\\\\light-bootstrap-dashboard-react\\\\src\\\\views\\\\resetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\";\nimport { useAuth } from \"../components/contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function forgetPassword() {\n  _s();\n\n  // console.log(\"useAuth\",useAuth())\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    handleResetPassword\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showResetPassword, setShowResetPassword] = useState(false);\n  useEffect(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      let users = [];\n      snapshot.docs.forEach(user => {\n        user.checked = false;\n        users.push(user);\n      });\n      setUsers([...users]);\n    });\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await handleResetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox\");\n    } catch (err) {\n      console.log(err);\n      setError(\"Failed to Reset Password\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      style: {\n        maxWidth: \"400px\",\n        margin: \"50px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: () => setShowResetPassword(true),\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                ref: emailRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: \"w-100\",\n              type: \"submit\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 text-center mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 text-center mt-2\",\n        children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showResetPassword,\n        onHide: () => setShowResetPassword(false),\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            marginBottom: 30\n          },\n          children: \"Password Reset sent to your email successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSubmit,\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showFailedResetPassword,\n        onHide: () => setShowFailedResetPassword(false),\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            marginBottom: 30\n          },\n          children: \"Account Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(forgetPassword, \"XwyOE65H/TDSy4cjQGX9xkIGoHk=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/resetPassword.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","Modal","useAuth","Link","forgetPassword","emailRef","passwordRef","handleResetPassword","error","setError","message","setMessage","loading","setLoading","users","setUsers","showResetPassword","setShowResetPassword","useEffect","db","collection","get","then","snapshot","docs","forEach","user","checked","push","handleSubmit","e","preventDefault","current","value","err","console","log","maxWidth","margin","marginBottom","showFailedResetPassword","setShowFailedResetPassword"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\";\r\nimport { useAuth } from \"../components/contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function forgetPassword() {\r\n  // console.log(\"useAuth\",useAuth())\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { handleResetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [users, setUsers] = useState([])\r\n  const [showResetPassword, setShowResetPassword] = useState(false)\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\").get()\r\n    .then(snapshot=>{\r\n      let users = [];\r\n      snapshot.docs.forEach(user=>{\r\n        user.checked = false;\r\n        users.push(user);\r\n      })\r\n      setUsers([...users]);\r\n    })\r\n  },[]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await handleResetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox\")\r\n    } catch(err) {\r\n        console.log(err)\r\n      setError(\"Failed to Reset Password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"w-100\" style={{ maxWidth: \"400px\",margin:\"50px auto\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={() => setShowResetPassword(true)}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n      <Modal \r\n        show={showResetPassword} \r\n        onHide={() => setShowResetPassword(false)}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton>\r\n          {/* <Modal.Title>Confirm</Modal.Title> */}\r\n        </Modal.Header>\r\n        <Modal.Body style={{marginBottom: 30}}>Password Reset sent to your email successfully</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n        <Modal \r\n        show={showFailedResetPassword} \r\n        onHide={() => setShowFailedResetPassword(false)}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton>\r\n          {/* <Modal.Title>Confirm</Modal.Title> */}\r\n        </Modal.Header>\r\n        <Modal.Body style={{marginBottom: 30}}>Account Not Found</Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}