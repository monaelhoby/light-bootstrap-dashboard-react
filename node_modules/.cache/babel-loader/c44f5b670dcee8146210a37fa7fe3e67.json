{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp) => {\n  db.collection(\"users\").doc(user.uid).get().then(snapshot => {\n    let theUser = [];\n    theUser.products = snapshot.data().products; //   theUser.products.forEach( product => {\n    //     if(theProduct.name == product.name){\n    //         product.apps.forEach(app => {\n    //             if(app.name.name == theApp.name.name){\n    //                 app.deviceId = \" \"\n    //             }\n    //                 console.log(app.deviceId)\n    //         })\n    //     }\n    //   })\n\n    snapshot.data().products.forEach(p => {\n      let oneProduct = {};\n      oneProduct.name = p.name;\n      oneProduct.visibility = p.visibility;\n      oneProduct.apps = p.apps;\n      oneProduct.comments = p.comment;\n      oneProduct.purchased = p.purchased;\n      oneProduct.purchasedUrl = p.purchasedUrl;\n      oneProduct.unpurchasedUrl = p.unpurchasedUrl;\n      oneProduct.datePurchased = p.datePurchased;\n      p.apps.forEach(app => {\n        oneProduct.apps.push({\n          name: app,\n          active: false,\n          purchased: false,\n          credentials: false,\n          expireDate: \"30/3/2021\",\n          timesAppLaunchedLastLogin: 3,\n          timesAppLaunchedPurchased: 4,\n          lastLaunchDate: \"23-12-2020\",\n          timesAppLaunched: 7,\n          deviceId: \" \"\n        });\n      });\n\n      if (oneProduct.name == product.name) {\n        if (app == theApp.name) {\n          app.deviceId = \" \";\n        }\n      }\n\n      theUser.products.push(oneProduct);\n      console.log(\"the user is \", theUser.products);\n    });\n    return db.collection('users').set(theUser);\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Ramdan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","collection","doc","uid","get","then","snapshot","theUser","products","data","forEach","p","oneProduct","name","visibility","apps","comments","comment","purchased","purchasedUrl","unpurchasedUrl","datePurchased","app","push","active","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","console","log","set","catch","err"],"mappings":"AAAA,SAASA,EAAT,QAAmB,gBAAnB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAMC,OAAN,EAAcC,MAAd,KAAyB;AAEtDJ,EAAAA,EAAE,CAACK,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,IAAI,CAACK,GAAhC,EAAqCC,GAArC,GAA2CC,IAA3C,CAAgDC,QAAQ,IAAG;AACzD,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACC,QAAR,GAAmBF,QAAQ,CAACG,IAAT,GAAgBD,QAAnC,CAFyD,CAK3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,IAAAA,QAAQ,CAACG,IAAT,GAAgBD,QAAhB,CAAyBE,OAAzB,CAAiCC,CAAC,IAAE;AAEhC,UAAIC,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAACC,IAAX,GAAkBF,CAAC,CAACE,IAApB;AACAD,MAAAA,UAAU,CAACE,UAAX,GAAwBH,CAAC,CAACG,UAA1B;AACAF,MAAAA,UAAU,CAACG,IAAX,GAAkBJ,CAAC,CAACI,IAApB;AACAH,MAAAA,UAAU,CAACI,QAAX,GAAsBL,CAAC,CAACM,OAAxB;AACAL,MAAAA,UAAU,CAACM,SAAX,GAAuBP,CAAC,CAACO,SAAzB;AACAN,MAAAA,UAAU,CAACO,YAAX,GAA0BR,CAAC,CAACQ,YAA5B;AACAP,MAAAA,UAAU,CAACQ,cAAX,GAA4BT,CAAC,CAACS,cAA9B;AACAR,MAAAA,UAAU,CAACS,aAAX,GAA2BV,CAAC,CAACU,aAA7B;AACAV,MAAAA,CAAC,CAACI,IAAF,CAAOL,OAAP,CAAeY,GAAG,IAAE;AAChBV,QAAAA,UAAU,CAACG,IAAX,CAAgBQ,IAAhB,CAAqB;AACjBV,UAAAA,IAAI,EAACS,GADY;AAEjBE,UAAAA,MAAM,EAAC,KAFU;AAGjBN,UAAAA,SAAS,EAAE,KAHM;AAIjBO,UAAAA,WAAW,EAAG,KAJG;AAKjBC,UAAAA,UAAU,EAAE,WALK;AAMjBC,UAAAA,yBAAyB,EAAG,CANX;AAOjBC,UAAAA,yBAAyB,EAAG,CAPX;AAQjBC,UAAAA,cAAc,EAAG,YARA;AASjBC,UAAAA,gBAAgB,EAAG,CATF;AAUjBC,UAAAA,QAAQ,EAAG;AAVM,SAArB;AAYH,OAbD;;AAcA,UAAGnB,UAAU,CAACC,IAAX,IAAmBd,OAAO,CAACc,IAA9B,EAAmC;AAC/B,YAAGS,GAAG,IAAItB,MAAM,CAACa,IAAjB,EAAsB;AAClBS,UAAAA,GAAG,CAACS,QAAJ,GAAe,GAAf;AACH;AACJ;;AACDxB,MAAAA,OAAO,CAACC,QAAR,CAAiBe,IAAjB,CAAsBX,UAAtB;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B1B,OAAO,CAACC,QAApC;AACD,KAhCH;AAkCE,WAAOZ,EAAE,CAACK,UAAH,CAAc,OAAd,EAAuBiC,GAAvB,CAA2B3B,OAA3B,CAAP;AACC,GAlDH,EAmDC4B,KAnDD,CAmDOC,GAAG,IAAE;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,GArDD;AAsDD,CAxDI","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp) => {\r\n    \r\n    db.collection(\"users\").doc(user.uid).get().then(snapshot =>{\r\n      let theUser = [];\r\n      theUser.products = snapshot.data().products;\r\n        \r\n\r\n    //   theUser.products.forEach( product => {\r\n    //     if(theProduct.name == product.name){\r\n    //         product.apps.forEach(app => {\r\n    //             if(app.name.name == theApp.name.name){\r\n    //                 app.deviceId = \" \"\r\n    //             }\r\n    //                 console.log(app.deviceId)\r\n    //         })\r\n    //     }\r\n    //   })\r\n    snapshot.data().products.forEach(p=>{\r\n          \r\n        let oneProduct = {};\r\n        oneProduct.name = p.name;\r\n        oneProduct.visibility = p.visibility;\r\n        oneProduct.apps = p.apps;\r\n        oneProduct.comments = p.comment;\r\n        oneProduct.purchased = p.purchased;\r\n        oneProduct.purchasedUrl = p.purchasedUrl;\r\n        oneProduct.unpurchasedUrl = p.unpurchasedUrl;\r\n        oneProduct.datePurchased = p.datePurchased;\r\n        p.apps.forEach(app=>{\r\n            oneProduct.apps.push({\r\n                name:app,\r\n                active:false,\r\n                purchased: false,\r\n                credentials : false,\r\n                expireDate: \"30/3/2021\",\r\n                timesAppLaunchedLastLogin : 3,\r\n                timesAppLaunchedPurchased : 4,\r\n                lastLaunchDate : \"23-12-2020\",\r\n                timesAppLaunched : 7,\r\n                deviceId : \" \"\r\n            })\r\n        })\r\n        if(oneProduct.name == product.name){\r\n            if(app == theApp.name){\r\n                app.deviceId = \" \"\r\n            }\r\n        }\r\n        theUser.products.push(oneProduct);\r\n        console.log(\"the user is \", theUser.products)\r\n      })\r\n\r\n      return db.collection('users').set(theUser) \r\n      })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }"]},"metadata":{},"sourceType":"module"}