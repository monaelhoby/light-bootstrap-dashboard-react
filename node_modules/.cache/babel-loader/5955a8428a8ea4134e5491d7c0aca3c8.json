{"ast":null,"code":"var _jsxFileName = \"E:\\\\Folder\\\\React\\\\projects\\\\my_freelance_work\\\\M.Radwan Work\\\\light-bootstrap-dashboard-react\\\\src\\\\components\\\\pagination.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.gotoPage = page => {\n      const {\n        onPageChanged = f => f\n      } = this.props;\n      const currentPage = Math.max(0, Math.min(page, this.totalPages));\n      const paginationData = {\n        currentPage,\n        totalPages: this.totalPages,\n        pageLimit: this.pageLimit,\n        totalRecords: this.totalRecords\n      };\n      this.setState({\n        currentPage\n      }, () => onPageChanged(paginationData));\n    };\n\n    this.handleClick = (page, evt) => {\n      evt.preventDefault();\n      this.gotoPage(page);\n    };\n\n    this.handleMoveLeft = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage - this.pageNeighbours);\n    };\n\n    this.handleMoveRight = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage + this.pageNeighbours);\n    };\n\n    this.fetchPageNumbers = () => {\n      const totalPages = this.totalPages;\n      const currentPage = this.state.currentPage;\n      const pageNeighbours = this.pageNeighbours;\n      const totalNumbers = this.pageNeighbours * 2 + 3;\n      const totalBlocks = totalNumbers + 2;\n\n      if (totalPages > totalBlocks) {\n        let pages = [];\n        const leftBound = currentPage - pageNeighbours;\n        const rightBound = currentPage + pageNeighbours;\n        const beforeLastPage = totalPages - 1;\n        const startPage = leftBound > 2 ? leftBound : 2;\n        const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n        pages = range(startPage, endPage);\n        const pagesCount = pages.length;\n        const singleSpillOffset = totalNumbers - pagesCount - 1;\n        const leftSpill = startPage > 2;\n        const rightSpill = endPage < beforeLastPage;\n        const leftSpillPage = LEFT_PAGE;\n        const rightSpillPage = RIGHT_PAGE;\n\n        if (leftSpill && !rightSpill) {\n          const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n          pages = [leftSpillPage, ...extraPages, ...pages];\n        } else if (!leftSpill && rightSpill) {\n          const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n          pages = [...pages, ...extraPages, rightSpillPage];\n        } else if (leftSpill && rightSpill) {\n          pages = [leftSpillPage, ...pages, rightSpillPage];\n        }\n\n        return [1, ...pages, totalPages];\n      }\n\n      return range(1, totalPages);\n    };\n\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours: _pageNeighbours = 0\n    } = props;\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 15;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n    this.pageNeighbours = typeof _pageNeighbours === \"number\" ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  render() {\n    if (!this.totalRecords) return null;\n    if (this.totalPages === 1) return null;\n    const {\n      currentPage\n    } = this.state;\n    const pages = this.fetchPageNumbers();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"Countries Pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              href: \"#\",\n              \"aria-label\": \"Previous\",\n              onClick: this.handleMoveLeft,\n              children: \"Previous Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              href: \"#\",\n              \"aria-label\": \"Next\",\n              onClick: this.handleMoveRight,\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: pages.map((page, index) => {\n            if (page === LEFT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Previous\",\n                onClick: this.handleMoveLeft,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xAB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this);\n            if (page === RIGHT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Next\",\n                onClick: this.handleMoveRight,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item${currentPage === page ? \" active\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                onClick: e => this.handleClick(page, e),\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\nexport default Pagination;","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/pagination.js"],"names":["React","Component","Fragment","PropTypes","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Pagination","constructor","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","totalBlocks","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","pagesCount","length","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","ceil","componentDidMount","render","map","index","e","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 15;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - this.pageNeighbours );\r\n  };\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + this.pageNeighbours );\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n        <div className=\"pagination\">\r\n            <button className=\"page-item\">\r\n            <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                aria-label=\"Previous\"\r\n                onClick={this.handleMoveLeft}\r\n            >\r\n                Previous Page\r\n            </a>\r\n            </button>\r\n            <button className=\"page-item\">\r\n            <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                aria-label=\"Next\"\r\n                onClick={this.handleMoveRight}\r\n            >\r\n                Next Page\r\n            </a>\r\n            </button>\r\n          </div>\r\n          <ul className=\"pagination\">\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Previous\"\r\n                      onClick={this.handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&laquo;</span>\r\n                      <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Next\"\r\n                      onClick={this.handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                      <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n                \r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={e => this.handleClick(page, e)}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}