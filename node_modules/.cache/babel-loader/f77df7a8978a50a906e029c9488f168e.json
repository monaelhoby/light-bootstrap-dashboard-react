{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditProduct = (editableProduct, setProducts, callback) => {\n  // console.log(\"editableProduct\",editableProduct)\n  db.collection(\"products\").doc(editableProduct.id).update({\n    name: editableProduct.name,\n    purchasedUrl: editableProduct.purchasedUrl,\n    unpurchasedUrl: editableProduct.unpurchasedUrl,\n    visibility: editableProduct.visibility,\n    productIcon: editableProduct.productIcon,\n    description: editableProduct.description,\n    id: editableProduct.id,\n    apps: editableProduct.apps,\n    features: editableProduct.features\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      // console.log(snapshot.docs[0].data())\n      setProducts([...snapshot.docs]);\n      updateProductsinUsers(editableProduct);\n      updateProductsinCodes(editableProduct);\n      callback();\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const handleAddNewProduct = (addedProduct, setProducts, callback) => {\n  // console.log(addedProduct)\n  db.collection(\"products\").add({\n    name: addedProduct.name,\n    description: addedProduct.description,\n    purchasedUrl: addedProduct.purchasedUrl,\n    unpurchasedUrl: addedProduct.unpurchasedUrl,\n    visibility: addedProduct.visibility,\n    productIcon: addedProduct.productIcon,\n    apps: addedProduct.apps[0].name.length ? addedProduct.apps : null,\n    features: addedProduct.features[0].name.length ? addedProduct.features : null // id : addedProduct.id\n\n  }).then(newProduct => {\n    db.collection(\"products\").get().then(snapshot => {\n      let products = [];\n      snapshot.docs.forEach(product => {\n        product.checked = false;\n        products.push(product);\n      });\n      setProducts([...products]); // console.log(\"addedProduct\", addedProduct)\n\n      addNewProductToUsers(addedProduct, newProduct.id);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteProduct = (product, setProducts, callback) => {\n  // console.log(product.id)\n  db.collection(\"products\").doc(product.id).delete().then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      deleteProductFromUsers(product.data().name);\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateProductsinUsers = product => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(p => {\n        return product.id !== p.id;\n      });\n      let oldProduct = user.data().products.find(p => {\n        // console.log(\"p.id\", p.id)\n        // console.log(\"product.id\", product.id)\n        return product.id == p.id;\n      }); // console.log(\"old product is\",oldProduct)\n\n      let theNewProduct = {};\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      theNewProduct.features = [];\n      product.apps.forEach(a => {\n        let exist = false;\n        let generatedApp = {};\n        oldProduct.apps.forEach(app => {\n          generatedApp.name = a.name;\n          generatedApp.tag = a.tag;\n          generatedApp.inActiveUrl = a.inActiveUrl;\n          generatedApp.activeUrl = a.activeUrl;\n\n          if (app.name == a.name) {\n            // console.log(a)\n            exist = true;\n            generatedApp.active = app.active;\n            generatedApp.comments = a.comment ? a.comment : \"\";\n            generatedApp.purchased = app.purchased;\n            generatedApp.credentials = app.credentials;\n            generatedApp.expireDate = app.expireDate;\n            generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n            generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n            generatedApp.lastLaunchDate = app.lastLaunchDate;\n            generatedApp.timesAppLaunched = app.timesAppLaunched;\n            generatedApp.deviceId = app.deviceId;\n            generatedApp.activatedOn = app.activatedOn;\n            generatedApp.codeUsed = app.codeUsed;\n            generatedApp.DateofLastUse = app.DateofLastUse;\n            generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n          }\n        });\n\n        if (!exist) {\n          generatedApp.active = false;\n          generatedApp.comments = \"\";\n          generatedApp.purchased = false;\n          generatedApp.credentials = false;\n          generatedApp.expireDate = \"\";\n          generatedApp.timesAppLaunchedLastLogin = \"\";\n          generatedApp.timesAppLaunchedPurchased = \"\";\n          generatedApp.lastLaunchDate = \"\";\n          generatedApp.timesAppLaunched = \"\";\n          generatedApp.deviceId = \"\";\n          generatedApp.activatedOn = \"\";\n          generatedApp.codeUsed = \"\";\n          generatedApp.DateofLastUse = \"\";\n          generatedApp.LaunchesSinceActive = \"\";\n        }\n\n        theNewProduct.apps.push(generatedApp);\n      });\n      product.features.forEach(a => {\n        let exist = false;\n        let generatedFeature = {};\n        oldProduct.features.forEach(feature => {\n          // console.log(\"a:\",a)\n          // console.log(\"feature:\",feature)\n          // console.log(a)\n          exist = true;\n          generatedFeature.name = a.name;\n          generatedFeature.tag = a.tag;\n          generatedFeature.activeUrl = a.activeUrl;\n          generatedFeature.inActiveUrl = a.inActiveUrl;\n          generatedFeature.comments = a.comment ? a.comment : \"\";\n          generatedFeature.active = feature.active ? feature.active : false;\n          generatedFeature.purchased = feature.purchased ? feature.purchased : false;\n          generatedFeature.expireDate = feature.expireDate ? feature.expireDate : \"30/3/2021\";\n          generatedFeature.activatedOn = feature.activatedOn ? feature.activatedOn : '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\n          generatedFeature.codeUsed = feature.codeUsed ? feature.codeUsed : '123456789';\n        });\n        theNewProduct.features.push(generatedFeature);\n      });\n      products.push(theNewProduct); // console.log(products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const deleteProductFromUsers = productName => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(product => {\n        // console.log(product.name,productName)\n        return product.name !== productName;\n      }); // console.log(\"products is \",products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nconst addNewProductToUsers = (product, productId) => {\n  db.collection(\"users\").get().then(snapshot => {\n    // console.log(productId)\n    let theProduct = {};\n    theProduct.name = product.name;\n    theProduct.purchasedUrl = product.purchasedUrl;\n    theProduct.unpurchasedUrl = product.unpurchasedUrl;\n    theProduct.visibility = product.visibility;\n    theProduct.productIcon = product.productIcon, theProduct.description = product.description, theProduct.apps = [];\n    theProduct.features = [];\n    theProduct.id = productId; // theProduct.id = product.id;\n\n    if (product.apps[0].name.length) {\n      product.apps.forEach(app => {\n        theProduct.apps.push({\n          name: app.name,\n          activeUrl: app.activeUrl ? app.activeUrl : \"\",\n          inActiveUrl: app.inActiveUrl ? app.inActiveUrl : \"\",\n          tag: app.tag ? app.tag : \"\",\n          appIcon: app.appIcon ? app.appIcon : \"\",\n          active: app.active ? app.active : false,\n          purchased: app.purchased ? app.purchased : false,\n          credentials: app.credentials ? app.credentials : \"\",\n          expireDate: app.expireDate ? app.expireDate : \"\",\n          timesAppLaunchedLastLogin: app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\n          timesAppLaunchedPurchased: app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\n          lastLaunchDate: app.lastLaunchDate ? app.lastLaunchDate : \"\",\n          timesAppLaunched: app.timesAppLaunched ? app.timesAppLaunched : \"\",\n          deviceId: \"9876543\",\n          activatedOn: app.activatedOn ? app.activatedOn : \"\",\n          codeUsed: \"9876543\",\n          DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\n          LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\n        });\n      });\n    }\n\n    if (product.features[0].name.length) {\n      product.features.forEach(feature => {\n        theProduct.features.push({\n          name: feature.name,\n          activeUrl: feature.activeUrl ? feature.activeUrl : \"\",\n          inActiveUrl: feature.inActiveUrl ? feature.inActiveUrl : \"\",\n          tag: feature.tag ? feature.tag : \"\",\n          active: false,\n          purchased: false,\n          expireDate: \"\",\n          activatedOn: \"\",\n          codeUsed: \"9876543\"\n        });\n      });\n    }\n\n    snapshot.docs.forEach(user => {\n      let products = user.data().products;\n      products.push(theProduct);\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n}; // const updateProductsinCodes = (product)=>{\n//     db.collection(\"codes\").get().then(snapshot=>{\n//         snapshot.docs.forEach(code=>{\n//             let allAppCodes=code.data().productActivated.apps\n//             // console.log(\"allProducts before\",allProducts);\n//             allAppCodes.forEach(app => {\n//                 if(product.name === app.productName){\n//                     app.productName = \n//                     piu.apps.forEach((app,j)=>{\n//                         if(app.name === p.appName){\n//                             allProducts[i].apps[j].purchased = true\n//                             allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\n//                             // console.log(\"allAppCodes\",allAppCodes)\n//                         }\n//                     })\n//                 }\n//             })\n//             code.data().productActivated.apps.forEach(app => {\n//                 if(app.productName == product.name){\n//                 }\n//             })\n//             // db.collection(\"codes\").doc(code.id).update({\n//             // })\n//             console.log(code.data())\n//             // console.log(products)\n//             // db.collection(\"users\").doc(user.id).set({\n//             //     products\n//             // },{merge:true})\n//         })\n//     })\n// }\n\n\nexport const handleDeleteProducts = (ids, setProducts, callback) => {\n  // console.log(ids)\n  return db.collection(\"products\").get().then(snapshot => {\n    snapshot.docs.forEach(product => {\n      let products = [];\n      ids.forEach(uid => {\n        db.collection(\"products\").doc(uid).delete();\n        products.push(product);\n        deleteProductFromUsers(product.data().name); // console.log(\"[...snapshot.docs]\", product.data())\n      });\n    });\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      callback();\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n}; // const resetUsersDetails = () =>{\n//     let products;\n//     db.collection(\"products\").get().then(snapshot=>{\n//         products = snapshot.docs;\n//         db.collection(\"users\").get().then(snapshot=>{\n//             snapshot.docs.forEach(user=>{\n//                 products.forEach(product=>{\n//                     user.products\n//                 })\n//             })\n//         })\n//     });  \n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/ProductsActions.js"],"names":["db","handleEditProduct","editableProduct","setProducts","callback","collection","doc","id","update","name","purchasedUrl","unpurchasedUrl","visibility","productIcon","description","apps","features","then","get","snapshot","docs","updateProductsinUsers","updateProductsinCodes","catch","err","console","log","handleAddNewProduct","addedProduct","add","length","newProduct","products","forEach","product","checked","push","addNewProductToUsers","error","handleDeleteProduct","delete","deleteProductFromUsers","data","user","filter","p","oldProduct","find","theNewProduct","a","exist","generatedApp","app","tag","inActiveUrl","activeUrl","active","comments","comment","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive","generatedFeature","feature","set","merge","productName","productId","theProduct","appIcon","handleDeleteProducts","ids","uid"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\nexport const handleEditProduct = (editableProduct,setProducts,callback)=> {\r\n    // console.log(\"editableProduct\",editableProduct)\r\n    db.collection(\"products\").doc(editableProduct.id).update({\r\n        name:editableProduct.name,\r\n        purchasedUrl: editableProduct.purchasedUrl,\r\n        unpurchasedUrl: editableProduct.unpurchasedUrl,\r\n        visibility: editableProduct.visibility,\r\n        productIcon: editableProduct.productIcon,\r\n        description: editableProduct.description,\r\n        id: editableProduct.id,\r\n        apps:editableProduct.apps,\r\n        features:editableProduct.features\r\n    }).then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            // console.log(snapshot.docs[0].data())\r\n            setProducts([...snapshot.docs]);\r\n            updateProductsinUsers(editableProduct)\r\n            updateProductsinCodes(editableProduct)\r\n            callback();\r\n        })\r\n    })\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const handleAddNewProduct = (addedProduct,setProducts,callback)=>{\r\n    // console.log(addedProduct)\r\n    db.collection(\"products\").add({\r\n        name: addedProduct.name,\r\n        description: addedProduct.description,\r\n        purchasedUrl: addedProduct.purchasedUrl,\r\n        unpurchasedUrl: addedProduct.unpurchasedUrl,\r\n        visibility: addedProduct.visibility,\r\n        productIcon: addedProduct.productIcon,\r\n        apps: addedProduct.apps[0].name.length?addedProduct.apps:null,\r\n        features: addedProduct.features[0].name.length?addedProduct.features:null,\r\n        // id : addedProduct.id\r\n    })\r\n    .then((newProduct) => {\r\n        db.collection(\"products\").get().then(snapshot=>{\r\n            let products = [];\r\n            snapshot.docs.forEach(product=>{\r\n                product.checked = false;\r\n                products.push(product)\r\n            })\r\n            setProducts([...products]);\r\n            // console.log(\"addedProduct\", addedProduct)\r\n            addNewProductToUsers(addedProduct,newProduct.id)\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteProduct = (product,setProducts, callback)=>{\r\n    // console.log(product.id)\r\n    db.collection(\"products\").doc(product.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            deleteProductFromUsers(product.data().name);\r\n        })\r\n        callback()\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\nconst updateProductsinUsers = (product)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(p=>{\r\n                return product.id !== p.id;\r\n            });\r\n\r\n            let oldProduct = user.data().products.find(p=>{\r\n                // console.log(\"p.id\", p.id)\r\n                // console.log(\"product.id\", product.id)\r\n                return product.id == p.id\r\n            })\r\n            // console.log(\"old product is\",oldProduct)\r\n\r\n            let theNewProduct = {};\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            theNewProduct.features = [];\r\n            product.apps.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedApp   = {};\r\n                oldProduct.apps.forEach((app)=>{\r\n                    generatedApp.name = a.name;\r\n                    generatedApp.tag = a.tag;\r\n                    generatedApp.inActiveUrl = a.inActiveUrl;\r\n                    generatedApp.activeUrl = a.activeUrl;\r\n\r\n                    if(app.name == a.name){\r\n                        // console.log(a)\r\n                        exist = true;\r\n                        generatedApp.active = app.active\r\n                        generatedApp.comments = a.comment?a.comment : \"\"\r\n                        generatedApp.purchased= app.purchased\r\n                        generatedApp.credentials = app.credentials\r\n                        generatedApp.expireDate= app.expireDate\r\n                        generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                        generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                        generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                        generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                        generatedApp.deviceId = app.deviceId \r\n                        generatedApp.activatedOn= app.activatedOn\r\n                        generatedApp.codeUsed= app.codeUsed\r\n                        generatedApp.DateofLastUse= app.DateofLastUse\r\n                        generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                    }\r\n                })\r\n\r\n                if(!exist){\r\n                    generatedApp.active = false;\r\n                    generatedApp.comments =  \"\"\r\n                    generatedApp.purchased= false\r\n                    generatedApp.credentials = false\r\n                    generatedApp.expireDate= \"\"\r\n                    generatedApp.timesAppLaunchedLastLogin = \"\"\r\n                    generatedApp.timesAppLaunchedPurchased = \"\"\r\n                    generatedApp.lastLaunchDate = \"\"\r\n                    generatedApp.timesAppLaunched = \"\"\r\n                    generatedApp.deviceId = \"\"\r\n                    generatedApp.activatedOn= \"\"\r\n                    generatedApp.codeUsed= \"\" \r\n                    generatedApp.DateofLastUse= \"\"\r\n                    generatedApp.LaunchesSinceActive= \"\"\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedApp)\r\n            })\r\n            product.features.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedFeature   = {};\r\n                oldProduct.features.forEach((feature)=>{\r\n                    // console.log(\"a:\",a)\r\n                    // console.log(\"feature:\",feature)\r\n                        // console.log(a)\r\n                        exist = true;\r\n                        generatedFeature.name = a.name;\r\n                        generatedFeature.tag = a.tag;\r\n                        generatedFeature.activeUrl = a.activeUrl;\r\n                        generatedFeature.inActiveUrl = a.inActiveUrl;\r\n                        generatedFeature.comments = a.comment?a.comment : \"\"\r\n                        generatedFeature.active=feature.active? feature.active : false;\r\n                        generatedFeature.purchased= feature.purchased ? feature.purchased : false;\r\n                        generatedFeature.expireDate= feature.expireDate?feature.expireDate:\"30/3/2021\";\r\n                        generatedFeature.activatedOn= feature.activatedOn?feature.activatedOn : '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\r\n                        generatedFeature.codeUsed= feature.codeUsed ? feature.codeUsed : '123456789' \r\n                })\r\n\r\n                theNewProduct.features.push(generatedFeature)\r\n            })\r\n\r\n            products.push(theNewProduct)\r\n            // console.log(products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteProductFromUsers = (productName)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(product=>{\r\n                // console.log(product.name,productName)\r\n                return product.name !== productName;\r\n            });\r\n\r\n            // console.log(\"products is \",products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewProductToUsers = (product,productId)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        // console.log(productId)\r\n        let theProduct = {};\r\n        theProduct.name = product.name;\r\n        theProduct.purchasedUrl= product.purchasedUrl;\r\n        theProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n        theProduct.visibility= product.visibility;\r\n        theProduct.productIcon= product.productIcon,\r\n        theProduct.description= product.description,\r\n        theProduct.apps = [];\r\n        theProduct.features = [];\r\n        theProduct.id = productId\r\n        // theProduct.id = product.id;\r\n    if(product.apps[0].name.length){\r\n        product.apps.forEach(app=>{\r\n            theProduct.apps.push({\r\n                name:app.name,\r\n                activeUrl:app.activeUrl ? app.activeUrl : \"\",\r\n                inActiveUrl:app.inActiveUrl ? app.inActiveUrl : \"\",\r\n                tag: app.tag ? app.tag : \"\",\r\n                appIcon: app.appIcon ? app.appIcon : \"\",\r\n                active:app.active ? app.active : false,\r\n                purchased: app.purchased ? app.purchased : false,\r\n                credentials : app.credentials ? app.credentials : \"\",\r\n                expireDate: app.expireDate ? app.expireDate : \"\",\r\n                timesAppLaunchedLastLogin : app.timesAppLaunchedLastLogin ? app.timesAppLaunchedLastLogin : \"\",\r\n                timesAppLaunchedPurchased : app.timesAppLaunchedPurchased ? app.timesAppLaunchedPurchased : \"\",\r\n                lastLaunchDate : app.lastLaunchDate ? app.lastLaunchDate : \"\",\r\n                timesAppLaunched : app.timesAppLaunched ? app.timesAppLaunched : \"\",\r\n                deviceId : \"9876543\",\r\n                activatedOn: app.activatedOn ? app.activatedOn : \"\",\r\n                codeUsed: \"9876543\" ,\r\n                DateofLastUse: app.DateofLastUse ? app.DateofLastUse : \"\",\r\n                LaunchesSinceActive: app.LaunchesSinceActive ? app.LaunchesSinceActive : \"\"\r\n            })\r\n        })\r\n    }\r\n    if(product.features[0].name.length){    \r\n        product.features.forEach(feature => {\r\n            theProduct.features.push({\r\n            name:feature.name,\r\n            activeUrl:feature.activeUrl ? feature.activeUrl : \"\",\r\n            inActiveUrl:feature.inActiveUrl ? feature.inActiveUrl : \"\",\r\n            tag: feature.tag ? feature.tag : \"\",\r\n            active: false,\r\n            purchased:  false,\r\n            expireDate: \"\",\r\n            activatedOn:  \"\",\r\n            codeUsed: \"9876543\" ,\r\n            })\r\n        })\r\n    }\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products;\r\n            products.push(theProduct);\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\n// const updateProductsinCodes = (product)=>{\r\n//     db.collection(\"codes\").get().then(snapshot=>{\r\n//         snapshot.docs.forEach(code=>{\r\n//             let allAppCodes=code.data().productActivated.apps\r\n//             // console.log(\"allProducts before\",allProducts);\r\n//             allAppCodes.forEach(app => {\r\n//                 if(product.name === app.productName){\r\n//                     app.productName = \r\n//                     piu.apps.forEach((app,j)=>{\r\n//                         if(app.name === p.appName){\r\n//                             allProducts[i].apps[j].purchased = true\r\n//                             allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\r\n//                             // console.log(\"allAppCodes\",allAppCodes)\r\n//                         }\r\n//                     })\r\n//                 }\r\n//             })\r\n//             code.data().productActivated.apps.forEach(app => {\r\n//                 if(app.productName == product.name){\r\n\r\n//                 }\r\n//             })\r\n//             // db.collection(\"codes\").doc(code.id).update({\r\n//             // })\r\n//             console.log(code.data())\r\n            \r\n//             // console.log(products)\r\n//             // db.collection(\"users\").doc(user.id).set({\r\n//             //     products\r\n//             // },{merge:true})\r\n//         })\r\n//     })\r\n// }\r\n\r\nexport const handleDeleteProducts = (ids, setProducts,callback) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"products\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((product) => {\r\n            let products = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"products\").doc(uid).delete();\r\n                products.push(product)\r\n                deleteProductFromUsers(product.data().name);\r\n                // console.log(\"[...snapshot.docs]\", product.data())\r\n            })\r\n        })\r\n    }).then(() => {\r\n        db.collection(\"products\").get()\r\n        .then(snapshot => {\r\n            setProducts([...snapshot.docs])\r\n            callback()\r\n        })\r\n    })\r\n    .catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n// const resetUsersDetails = () =>{\r\n//     let products;\r\n//     db.collection(\"products\").get().then(snapshot=>{\r\n//         products = snapshot.docs;\r\n//         db.collection(\"users\").get().then(snapshot=>{\r\n//             snapshot.docs.forEach(user=>{\r\n//                 products.forEach(product=>{\r\n//                     user.products\r\n//                 })\r\n//             })\r\n//         })\r\n//     });  \r\n// }"]},"metadata":{},"sourceType":"module"}