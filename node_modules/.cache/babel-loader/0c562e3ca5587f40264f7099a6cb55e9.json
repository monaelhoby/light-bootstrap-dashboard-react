{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp, setUser) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    if (app.name.name == theApp.name.name) {\n      app.deviceId = \"\";\n    }\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleDeactiveAllApps = (user, product, setUser, callback) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    app.deviceId = \"\";\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  callback();\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleInactiveCode = (code, pefixCode, theUser, theCodeObject, callback) => {\n  db.collection(\"codes\").get().then(snapshot => {\n    let activeCodeObject = {};\n    snapshot.docs.forEach(oneCode => {\n      if (Array.isArray(oneCode.data().code)) {\n        let activeCode = \"\";\n        activeCode = oneCode.data().code.find(singleCode => singleCode == code);\n\n        if (activeCode) {\n          activeCodeObject = oneCode.data();\n        }\n      } else if (!Array.isArray(oneCode.data().code)) {\n        if (oneCode.data().code == code) {\n          activeCodeObject = oneCode.data();\n        } else {\n          return;\n        }\n      }\n    });\n    db.collection(\"inactiveCodes\").add({\n      inactiveCode: code,\n      activatedBy: theUser.email,\n      firstName: theUser.firstName,\n      lastName: theUser.lastName,\n      pefixCode: pefixCode,\n      dataAdded: new Date().toLocaleString(),\n      placeOfPurchase: activeCodeObject.purchasedLocation,\n      productActivated: activeCodeObject.productActivated,\n      notes: activeCodeObject.notes\n    }).then(() => {\n      // console.log(theCodeObject.data().productActivated)\n      db.collection(\"codes\").doc(theCodeObject.id).delete();\n      updateAppsinUser(theCodeObject.data().productActivated, theUser.id, code);\n      callback();\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateAppsinUser = (productsActivated, id, code) => {\n  db.collection(\"users\").doc(id).get().then(snapshot => {\n    let allProducts = snapshot.data().products;\n    let theNewProduct = {};\n    let productActivatedExist = {}; // console.log(\"allProducts before\",allProducts);\n\n    productsActivated.forEach(p => {\n      allProducts.forEach((piu, i) => {\n        if (piu.name === p.productName) {\n          piu.apps.forEach((app, j) => {\n            if (app.name.name === p.appName) {\n              allProducts[i].apps[j].purchased = true;\n              allProducts[i].apps[j].activatedOn = new Date().toLocaleString(); // console.log(\"allProducts\",allProducts)\n            }\n          });\n        }\n      });\n    }); // console.log(\"allProducts\",allProducts)\n\n    db.collection(\"users\").doc(id).set({\n      products: allProducts\n    }, {\n      merge: true\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","setUser","newUser","editableProduct","products","find","p","name","filter","apps","forEach","app","deviceId","push","collection","doc","id","set","handleDeactiveAllApps","callback","handleInactiveCode","code","pefixCode","theUser","theCodeObject","get","then","snapshot","activeCodeObject","docs","oneCode","Array","isArray","data","activeCode","singleCode","add","inactiveCode","activatedBy","email","firstName","lastName","dataAdded","Date","toLocaleString","placeOfPurchase","purchasedLocation","productActivated","notes","delete","updateAppsinUser","catch","err","console","log","productsActivated","allProducts","theNewProduct","productActivatedExist","piu","i","productName","j","appName","purchased","activatedOn","merge"],"mappings":"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","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp,setUser) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n        if (app.name.name == theApp.name.name){\r\n            app.deviceId = \"\";\r\n        }\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleDeactiveAllApps = (user,product,setUser,callback) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n            app.deviceId = \"\";\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n    callback()\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleInactiveCode = (code,pefixCode, theUser, theCodeObject,callback) => {\r\n    db.collection(\"codes\").get()\r\n    .then(snapshot => {\r\n    let activeCodeObject = {};\r\n    snapshot.docs.forEach(oneCode => {\r\n        if(Array.isArray(oneCode.data().code)){\r\n            let activeCode = \"\";\r\n            activeCode = oneCode.data().code.find(singleCode => singleCode==code);\r\n            if(activeCode){\r\n                activeCodeObject = oneCode.data() \r\n            }\r\n        }else if(!Array.isArray(oneCode.data().code)){\r\n            if(oneCode.data().code == code) {\r\n                activeCodeObject = oneCode.data() \r\n            }else{\r\n                return\r\n            }\r\n        }\r\n    })\r\n    db.collection(\"inactiveCodes\").add({\r\n        inactiveCode : code,\r\n        activatedBy : theUser.email,\r\n        firstName : theUser.firstName,\r\n        lastName : theUser.lastName,\r\n        pefixCode : pefixCode,\r\n        dataAdded : new Date().toLocaleString(),\r\n        placeOfPurchase: activeCodeObject.purchasedLocation,\r\n        productActivated: activeCodeObject.productActivated,\r\n        notes: activeCodeObject.notes,\r\n    }).then(() => {\r\n        // console.log(theCodeObject.data().productActivated)\r\n        db.collection(\"codes\").doc(theCodeObject.id).delete()\r\n        updateAppsinUser(theCodeObject.data().productActivated,theUser.id,code)\r\n        callback()\r\n    })\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  const updateAppsinUser = (productsActivated, id,code)=>{\r\n    db.collection(\"users\").doc(id).get()\r\n    .then(snapshot=>{\r\n        let allProducts=snapshot.data().products\r\n        let theNewProduct = {};\r\n        let productActivatedExist = {};\r\n        // console.log(\"allProducts before\",allProducts);\r\n\r\n        productsActivated.forEach(p=>{\r\n            allProducts.forEach((piu,i)=>{\r\n                if(piu.name === p.productName){\r\n                    piu.apps.forEach((app,j)=>{\r\n                        if(app.name.name === p.appName){\r\n                            allProducts[i].apps[j].purchased = true\r\n                            allProducts[i].apps[j].activatedOn = new Date().toLocaleString()\r\n                            // console.log(\"allProducts\",allProducts)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        // console.log(\"allProducts\",allProducts)\r\n        db.collection(\"users\").doc(id).set({\r\n            products: allProducts\r\n        },{merge:true})\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}