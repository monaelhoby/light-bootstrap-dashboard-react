{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditAdmin = (admin, setAdmins, callback, theOffset, thePageLimit, setCurrentAdmins) => {\n  let theAdmins = []; // console.log(admin)\n\n  return db.collection(\"admins\").doc(admin.Uid).update({\n    email: admin.email,\n    firstName: admin.firstName,\n    lastName: admin.lastName\n  }).then(() => {\n    db.collection(\"admins\").get().then(snapshot => {\n      snapshot.docs.forEach(user => {\n        user.checked = false;\n        theAdmins.push(user);\n      });\n    }).then(() => {\n      callback();\n      setAdmins([...theAdmins]);\n\n      if (theOffset || thePageLimit) {\n        setCurrentAdmins(theAdmins.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentAdmins([...theAdmins]);\n      }\n    });\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteAdmin = (uid, setAdmins, callback, theOffset, thePageLimit, setCurrentAdmins) => {\n  return db.collection(\"admins\").doc(uid).delete().then(() => {\n    db.collection(\"admins\").get().then(snapshot => {\n      setAdmins([...snapshot.docs]);\n\n      if (theOffset || thePageLimit) {\n        setCurrentAdmins(snapshot.docs.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentAdmins([...snapshot.docs]);\n      }\n    });\n    callback();\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteAdmins = (ids, setAdmins, callback, theOffset, thePageLimit, setCurrentAdmins) => {\n  // console.log(\"ids\", ids)\n  return db.collection(\"admins\").get().then(snapshot => {\n    let theAdmins = [];\n    ids.forEach(id => {\n      theAdmins = snapshot.docs.filter(admin => admin.id != id);\n      return db.collection(\"admins\").doc(id).delete().then(() => {\n        console.log(theAdmins);\n      });\n    }); //    setAdmins([...snapshot.docs]);\n    //    snapshot.docs.forEach(admin=>{\n    //     theAdmins.push(admin);\n    //   })\n    //   console.log(\"theAdmins\", theAdmins)\n    //   setAdmins([...theAdmins]);\n\n    callback();\n\n    if (theOffset || thePageLimit) {\n      setCurrentAdmins(snapshot.docs.slice(theOffset, theOffset + thePageLimit));\n    } else {\n      setCurrentAdmins([...snapshot.docs]);\n    }\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/adminAction.js"],"names":["db","handleEditAdmin","admin","setAdmins","callback","theOffset","thePageLimit","setCurrentAdmins","theAdmins","collection","doc","Uid","update","email","firstName","lastName","then","get","snapshot","docs","forEach","user","checked","push","slice","catch","err","console","log","handleDeleteAdmin","uid","delete","handleDeleteAdmins","ids","id","filter"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\n\r\nexport const handleEditAdmin = (admin,setAdmins, callback,theOffset,thePageLimit,setCurrentAdmins)=>{\r\n    let theAdmins = []\r\n    // console.log(admin)\r\n    return db.collection(\"admins\").doc(admin.Uid).update({\r\n        email:admin.email,\r\n        firstName:admin.firstName,\r\n        lastName:admin.lastName,\r\n        }).then(()=>{\r\n        db.collection(\"admins\").get().then(snapshot=>{\r\n            snapshot.docs.forEach(user=>{\r\n                user.checked = false;\r\n                theAdmins.push(user)\r\n            })\r\n        }).then(() => {\r\n            \r\n            callback()\r\n            setAdmins([...theAdmins]);\r\n            if(theOffset || thePageLimit){\r\n                setCurrentAdmins(theAdmins.slice(theOffset, theOffset + thePageLimit))\r\n            }else{\r\n                setCurrentAdmins([...theAdmins])\r\n            }\r\n        })\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteAdmin = (uid,setAdmins, callback,theOffset,thePageLimit,setCurrentAdmins)=>{\r\n    \r\n    return db.collection(\"admins\").doc(uid).delete()\r\n    .then(() => {\r\n        db.collection(\"admins\").get()\r\n        .then(snapshot=>{\r\n          setAdmins([...snapshot.docs]);\r\n          if(theOffset || thePageLimit){\r\n              setCurrentAdmins(snapshot.docs.slice(theOffset, theOffset + thePageLimit))\r\n          }else{\r\n              setCurrentAdmins([...snapshot.docs])\r\n          }\r\n        })\r\n        callback()\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\n\r\nexport const handleDeleteAdmins = (ids,setAdmins,callback,theOffset,thePageLimit,setCurrentAdmins) =>{\r\n    // console.log(\"ids\", ids)\r\n     return db.collection(\"admins\").get()\r\n     .then(snapshot=>{\r\n        let theAdmins = []\r\n        ids.forEach (id => {\r\n            theAdmins = snapshot.docs.filter(admin => admin.id != id)\r\n        return db.collection(\"admins\").doc(id).delete()\r\n        .then(() => {\r\n            console.log(theAdmins)\r\n        })\r\n        })\r\n    //    setAdmins([...snapshot.docs]);\r\n    //    snapshot.docs.forEach(admin=>{\r\n    //     theAdmins.push(admin);\r\n    //   })\r\n    //   console.log(\"theAdmins\", theAdmins)\r\n    //   setAdmins([...theAdmins]);\r\n       callback()\r\n        if(theOffset || thePageLimit){\r\n            setCurrentAdmins(snapshot.docs.slice(theOffset, theOffset + thePageLimit))\r\n        }else{\r\n            setCurrentAdmins([...snapshot.docs])\r\n        }\r\n     })\r\n     .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    }) \r\n     \r\n}\r\n"]},"metadata":{},"sourceType":"module"}