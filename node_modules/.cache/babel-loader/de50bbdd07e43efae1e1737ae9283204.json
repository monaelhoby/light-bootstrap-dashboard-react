{"ast":null,"code":"import { db } from \"../firebase\";\nexport const handleEditProduct = (editableProduct, setProducts, callback) => {\n  db.collection(\"products\").doc(editableProduct.id).update({\n    name: editableProduct.name,\n    purchasedUrl: editableProduct.purchasedUrl,\n    unpurchasedUrl: editableProduct.unpurchasedUrl,\n    visibility: editableProduct.visibility,\n    productIcon: editableProduct.productIcon,\n    description: editableProduct.description,\n    apps: editableProduct.apps\n  }).then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      updateProductsinUsers(editableProduct);\n      callback();\n    });\n  }).then(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n    });\n  });\n};\nexport const handleAddNewProduct = (addedProduct, setProducts, callback) => {\n  db.collection(\"products\").add({\n    name: addedProduct.name,\n    description: addedProduct.description,\n    purchasedUrl: addedProduct.purchasedUrl,\n    unpurchasedUrl: addedProduct.unpurchasedUrl,\n    visibility: addedProduct.visibility,\n    productIcon: addedProduct.productIcon,\n    apps: addedProduct.apps\n  }).then(newProduct => {\n    db.collection(\"products\").get().then(snapshot => {\n      let products = [];\n      snapshot.docs.forEach(product => {\n        product.checked = false;\n        products.push(product);\n      });\n      setProducts([...products]); // console.log(\"addedProduct\", addedProduct)\n\n      addNewProductToUsers(addedProduct, newProduct.id);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteProduct = (product, setProducts, callback) => {\n  // console.log(product.id)\n  db.collection(\"products\").doc(product.id).delete().then(() => {\n    db.collection(\"products\").get().then(snapshot => {\n      setProducts([...snapshot.docs]);\n      deleteProductFromUsers(product.data().name);\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateProductsinUsers = product => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(p => {\n        return product.id !== p.id;\n      });\n      let oldProduct = user.data().products.find(p => {\n        // console.log(\"p.id\", p.id)\n        // console.log(\"product.id\", product.id)\n        return product.id == p.id;\n      }); // console.log(\"old product is\",oldProduct)\n\n      let theNewProduct = {};\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      product.apps.forEach(a => {\n        let exist = false;\n        let generatedApp = {};\n        oldProduct.apps.forEach(app => {\n          generatedApp.name = a;\n\n          if (app.name == a) {\n            console.log(a);\n            exist = true;\n            generatedApp.active = app.active;\n            generatedApp.purchased = false;\n            generatedApp.credentials = false;\n            generatedApp.expireDate = \"30/3/2021\";\n            generatedApp.timesAppLaunchedLastLogin = 3;\n            generatedApp.timesAppLaunchedPurchased = 4;\n            generatedApp.lastLaunchDate = \"23-12-2020\";\n            generatedApp.timesAppLaunched = 7;\n            generatedApp.deviceId = \"1.23.456.5\";\n            generatedApp.activatedOn = '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\n            generatedApp.codeUsed = '123456789';\n            generatedApp.DateofLastUse = '12/29/2020 @ 3:43pm';\n            generatedApp.LaunchesSinceActive = 23;\n          }\n        });\n\n        if (!exist) {\n          generatedApp.active = false;\n          generatedApp.purchased = false;\n          generatedApp.credentials = false;\n          generatedApp.expireDate = \"30/3/2021\";\n          generatedApp.timesAppLaunchedLastLogin = 3;\n          generatedApp.timesAppLaunchedPurchased = 4;\n          generatedApp.lastLaunchDate = \"23-12-2020\";\n          generatedApp.timesAppLaunched = 7;\n          generatedApp.deviceId = \"1.23.456.5\";\n          generatedApp.activatedOn = '12/28/2020 @ 5:45pm : \"1.23.456.5\"';\n          generatedApp.codeUsed = '123456789';\n          generatedApp.DateofLastUse = '12/29/2020 @ 3:43pm';\n          generatedApp.LaunchesSinceActive = 23;\n        }\n\n        theNewProduct.apps.push(generatedApp);\n      });\n      products.push(theNewProduct); // console.log(products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const deleteProductFromUsers = productName => {\n  db.collection(\"users\").get().then(snapshot => {\n    snapshot.docs.forEach(user => {\n      let products = user.data().products.filter(product => {\n        // console.log(product.name,productName)\n        return product.name !== productName;\n      }); // console.log(\"products is \",products)\n\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nconst addNewProductToUsers = (product, productId) => {\n  db.collection(\"users\").get().then(snapshot => {\n    let theProduct = {};\n    theProduct.name = product.name;\n    theProduct.purchasedUrl = product.purchasedUrl;\n    theProduct.unpurchasedUrl = product.unpurchasedUrl;\n    theProduct.visibility = product.visibility;\n    theProduct.productIcon = product.productIcon, theProduct.description = product.description, theProduct.apps = [];\n    theProduct.id = productId; // theProduct.id = product.id;\n\n    product.apps.forEach(app => {\n      theProduct.apps.push({\n        name: app.name,\n        activeUrl: app.activeUrl ? app.activeUrl : \"\",\n        inActiveUrl: app.inActiveUrl ? app.inActiveUrl : \"\",\n        tag: app.tag ? app.tag : \"\",\n        appIcon: app.appIcon ? app.appIcon : \"\",\n        active: false,\n        purchased: false,\n        credentials: false,\n        expireDate: \"30/3/2021\",\n        timesAppLaunchedLastLogin: 3,\n        timesAppLaunchedPurchased: 4,\n        lastLaunchDate: \"23-12-2020\",\n        timesAppLaunched: 7,\n        deviceId: \"1.23.456.5\",\n        activatedOn: '12/28/2020 @ 5:45pm : \"1.23.456.5\"',\n        codeUsed: '123456789',\n        DateofLastUse: '12/29/2020 @ 3:43pm',\n        LaunchesSinceActive: 23\n      });\n    });\n    snapshot.docs.forEach(user => {\n      let products = user.data().products;\n      products.push(theProduct);\n      db.collection(\"users\").doc(user.id).set({\n        products\n      }, {\n        merge: true\n      });\n    });\n  });\n};\n\nexport const handleDeleteProducts = (ids, setProducts, callback) => {\n  // console.log(ids)\n  return db.collection(\"products\").get().then(snapshot => {\n    snapshot.docs.forEach(product => {\n      let products = [];\n      ids.forEach(uid => {\n        db.collection(\"products\").doc(uid).delete();\n        products.push(product);\n        deleteProductFromUsers(product.data().name); // console.log(\"[...snapshot.docs]\", product.data())\n      });\n      setProducts([...products]);\n      callback();\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n}; // const resetUsersDetails = () =>{\n//     let products;\n//     db.collection(\"products\").get().then(snapshot=>{\n//         products = snapshot.docs;\n//         db.collection(\"users\").get().then(snapshot=>{\n//             snapshot.docs.forEach(user=>{\n//                 products.forEach(product=>{\n//                     user.products\n//                 })\n//             })\n//         })\n//     });  \n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/ProductsActions.js"],"names":["db","handleEditProduct","editableProduct","setProducts","callback","collection","doc","id","update","name","purchasedUrl","unpurchasedUrl","visibility","productIcon","description","apps","then","get","snapshot","docs","updateProductsinUsers","handleAddNewProduct","addedProduct","add","newProduct","products","forEach","product","checked","push","addNewProductToUsers","catch","error","console","handleDeleteProduct","delete","deleteProductFromUsers","data","err","log","user","filter","p","oldProduct","find","theNewProduct","a","exist","generatedApp","app","active","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","deviceId","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive","set","merge","productName","productId","theProduct","activeUrl","inActiveUrl","tag","appIcon","handleDeleteProducts","ids","uid"],"mappings":"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","sourcesContent":["import { db } from \"../firebase\";\r\n\r\nexport const handleEditProduct = (editableProduct,setProducts,callback)=> {\r\n    \r\n    db.collection(\"products\").doc(editableProduct.id).update({\r\n        name:editableProduct.name,\r\n        purchasedUrl: editableProduct.purchasedUrl,\r\n        unpurchasedUrl: editableProduct.unpurchasedUrl,\r\n        visibility: editableProduct.visibility,\r\n        productIcon: editableProduct.productIcon,\r\n        description: editableProduct.description,\r\n        apps:editableProduct.apps\r\n    }).then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            updateProductsinUsers(editableProduct)\r\n            callback();\r\n        })\r\n    }).then(()=>{\r\n        db.collection(\"users\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleAddNewProduct = (addedProduct,setProducts,callback)=>{\r\n    \r\n    db.collection(\"products\").add({\r\n        name: addedProduct.name,\r\n        description: addedProduct.description,\r\n        purchasedUrl: addedProduct.purchasedUrl,\r\n        unpurchasedUrl: addedProduct.unpurchasedUrl,\r\n        visibility: addedProduct.visibility,\r\n        productIcon: addedProduct.productIcon,\r\n        apps: addedProduct.apps,\r\n    })\r\n    .then((newProduct) => {\r\n        db.collection(\"products\").get().then(snapshot=>{\r\n            let products = [];\r\n            snapshot.docs.forEach(product=>{\r\n                product.checked = false;\r\n                products.push(product)\r\n            })\r\n            setProducts([...products]);\r\n            // console.log(\"addedProduct\", addedProduct)\r\n            addNewProductToUsers(addedProduct,newProduct.id)\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteProduct = (product,setProducts, callback)=>{\r\n    // console.log(product.id)\r\n    db.collection(\"products\").doc(product.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"products\").get()\r\n        .then(snapshot=>{\r\n            setProducts([...snapshot.docs]);\r\n            deleteProductFromUsers(product.data().name);\r\n        })\r\n        callback()\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\nconst updateProductsinUsers = (product)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(p=>{\r\n                return product.id !== p.id;\r\n            });\r\n\r\n            let oldProduct = user.data().products.find(p=>{\r\n                // console.log(\"p.id\", p.id)\r\n                // console.log(\"product.id\", product.id)\r\n                return product.id == p.id\r\n            })\r\n            \r\n        \r\n            // console.log(\"old product is\",oldProduct)\r\n\r\n            let theNewProduct = {};\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            product.apps.forEach((a)=>{\r\n                let exist = false;\r\n                let generatedApp   = {};\r\n                oldProduct.apps.forEach((app)=>{\r\n                    generatedApp.name = a;\r\n\r\n                    if(app.name == a){\r\n                        console.log(a)\r\n                        exist = true;\r\n                        generatedApp.active = app.active\r\n                        generatedApp.purchased= false\r\n                        generatedApp.credentials = false\r\n                        generatedApp.expireDate= \"30/3/2021\"\r\n                        generatedApp.timesAppLaunchedLastLogin = 3\r\n                        generatedApp.timesAppLaunchedPurchased = 4\r\n                        generatedApp.lastLaunchDate = \"23-12-2020\"\r\n                        generatedApp.timesAppLaunched = 7\r\n                        generatedApp.deviceId = \"1.23.456.5\"\r\n                        generatedApp.activatedOn= '12/28/2020 @ 5:45pm : \"1.23.456.5\"'\r\n                        generatedApp.codeUsed= '123456789' \r\n                        generatedApp.DateofLastUse= '12/29/2020 @ 3:43pm'\r\n                        generatedApp.LaunchesSinceActive= 23\r\n                    }\r\n                })\r\n\r\n                if(!exist){\r\n                    generatedApp.active = false;\r\n                    generatedApp.purchased= false\r\n                    generatedApp.credentials = false\r\n                    generatedApp.expireDate= \"30/3/2021\"\r\n                    generatedApp.timesAppLaunchedLastLogin = 3\r\n                    generatedApp.timesAppLaunchedPurchased = 4\r\n                    generatedApp.lastLaunchDate = \"23-12-2020\"\r\n                    generatedApp.timesAppLaunched = 7\r\n                    generatedApp.deviceId = \"1.23.456.5\"\r\n                    generatedApp.activatedOn= '12/28/2020 @ 5:45pm : \"1.23.456.5\"'\r\n                    generatedApp.codeUsed= '123456789' \r\n                    generatedApp.DateofLastUse= '12/29/2020 @ 3:43pm'\r\n                    generatedApp.LaunchesSinceActive= 23\r\n                }\r\n\r\n                theNewProduct.apps.push(generatedApp)\r\n            })\r\n\r\n            products.push(theNewProduct)\r\n            // console.log(products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteProductFromUsers = (productName)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products.filter(product=>{\r\n                // console.log(product.name,productName)\r\n                return product.name !== productName;\r\n            });\r\n\r\n            // console.log(\"products is \",products)\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewProductToUsers = (product,productId)=>{\r\n    db.collection(\"users\").get().then(snapshot=>{\r\n        \r\n        let theProduct = {};\r\n        theProduct.name = product.name;\r\n        theProduct.purchasedUrl= product.purchasedUrl;\r\n        theProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n        theProduct.visibility= product.visibility;\r\n        theProduct.productIcon= product.productIcon,\r\n        theProduct.description= product.description,\r\n        theProduct.apps = [];\r\n        theProduct.id = productId\r\n        // theProduct.id = product.id;\r\n        product.apps.forEach(app=>{\r\n            theProduct.apps.push({\r\n                name:app.name,\r\n                activeUrl:app.activeUrl ? app.activeUrl : \"\",\r\n                inActiveUrl:app.inActiveUrl ? app.inActiveUrl : \"\",\r\n                tag: app.tag ? app.tag : \"\",\r\n                appIcon: app.appIcon ? app.appIcon : \"\",\r\n                active:false,\r\n                purchased: false,\r\n                credentials : false,\r\n                expireDate: \"30/3/2021\",\r\n                timesAppLaunchedLastLogin : 3,\r\n                timesAppLaunchedPurchased : 4,\r\n                lastLaunchDate : \"23-12-2020\",\r\n                timesAppLaunched : 7,\r\n                deviceId : \"1.23.456.5\",\r\n                activatedOn: '12/28/2020 @ 5:45pm : \"1.23.456.5\"',\r\n                codeUsed: '123456789' ,\r\n                DateofLastUse: '12/29/2020 @ 3:43pm',\r\n                LaunchesSinceActive: 23\r\n            })\r\n        })\r\n        \r\n        snapshot.docs.forEach(user=>{\r\n            let products = user.data().products;\r\n            products.push(theProduct);\r\n            db.collection(\"users\").doc(user.id).set({\r\n                products\r\n            },{merge:true})\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleDeleteProducts = (ids, setProducts,callback) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"products\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((product) => {\r\n            let products = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"products\").doc(uid).delete();\r\n                products.push(product)\r\n                deleteProductFromUsers(product.data().name);\r\n                // console.log(\"[...snapshot.docs]\", product.data())\r\n            })\r\n            setProducts([...products])\r\n            callback()\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n// const resetUsersDetails = () =>{\r\n//     let products;\r\n//     db.collection(\"products\").get().then(snapshot=>{\r\n//         products = snapshot.docs;\r\n//         db.collection(\"users\").get().then(snapshot=>{\r\n//             snapshot.docs.forEach(user=>{\r\n//                 products.forEach(product=>{\r\n//                     user.products\r\n//                 })\r\n//             })\r\n//         })\r\n//     });  \r\n// }"]},"metadata":{},"sourceType":"module"}