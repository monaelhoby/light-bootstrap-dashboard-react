{"ast":null,"code":"import { db } from '../firebase'; // import {crypto} from 'crypto'\n\nconst crypto = require(\"crypto\");\n\nexport const handleAddCode = (code, setCodes, callback) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n  db.collection(\"codes\").add({\n    code: code.perfixCode + cryptoCode,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    purchasedLocation: code.purchasedLocation\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteCode = (uid, codes, i, setCodes) => {\n  codes.splice(i, 1);\n  setCodes([...codes]);\n  return db.collection(\"codes\").doc(uid).delete().then(() => {// callback()\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteCodes = (ids, setCodes) => {\n  return db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"codes\").doc(uid).delete();\n        codes.push(code);\n      });\n    });\n    setCodes([...codes]);\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/codeActions.js"],"names":["db","crypto","require","handleAddCode","code","setCodes","callback","length","Number","lengthCode","cryptoCode","randomBytes","toString","collection","add","perfixCode","dateAdded","Date","toLocaleString","productActivated","apps","purchasedLocation","then","codes","get","snapshot","docs","forEach","checked","push","catch","error","console","handleDeleteCode","uid","i","splice","doc","delete","err","log","handleDeleteCodes","ids"],"mappings":"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","sourcesContent":["import {db} from '../firebase';\r\n// import {crypto} from 'crypto'\r\nconst crypto = require(\"crypto\");\r\n\r\nexport const handleAddCode = (code,setCodes,callback) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    db.collection(\"codes\").add({\r\n        code : code.perfixCode+cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        purchasedLocation : code.purchasedLocation\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteCode = (uid,codes,i,setCodes)=>{\r\n    codes.splice(i, 1);\r\n    setCodes([...codes]);\r\n\r\n    return db.collection(\"codes\").doc(uid).delete()\r\n    .then(() => {\r\n        // callback()\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteCodes = (ids, setCodes) =>{  \r\n    return db.collection(\"codes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"codes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n        })\r\n        setCodes([...codes])\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}