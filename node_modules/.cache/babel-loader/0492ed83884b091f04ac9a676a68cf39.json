{"ast":null,"code":"import { db } from '../firebase'; // import {crypto} from 'crypto'\n\nconst crypto = require(\"crypto\");\n\nexport const handleAddCode = (code, setCodes, callback) => {\n  // console.log(code.lengthCode)\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n  cryptoCode = cryptoCode.slice(0, length); // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  });\n  db.collection(\"codes\").add({\n    prefixCode: code.prefixCode,\n    code: code.prefixCode + cryptoCode,\n    suffixCode: cryptoCode,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: activatedProduct,\n    products: code.products,\n    purchasedLocation: code.purchasedLocation,\n    notes: code.notes\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleAddCodes = (code, setCodes, callback) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null; // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  });\n  console.log(\"activatedProduct\", activatedProduct);\n\n  for (let i = 0; i < code.quantity; i++) {\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n    cryptoCode = cryptoCode.slice(0, length);\n    db.collection(\"codes\").add({\n      prefixCode: code.prefixCode,\n      code: cryptoCode,\n      dateAdded: new Date().toLocaleString(),\n      productActivated: activatedProduct,\n      purchasedLocation: code.purchasedLocation,\n      notes: code.notes,\n      products: code.products\n    }).then(() => {\n      db.collection(\"codes\").get().then(snapshot => {\n        let codes = [];\n        snapshot.docs.forEach(code => {\n          code.checked = false;\n          codes.push(code);\n        });\n        setCodes([...snapshot.docs]);\n        callback();\n      });\n    }).catch(error => {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n};\nexport const handleDeleteCode = (uid, codes, i, setCodes) => {\n  codes.splice(i, 1);\n  setCodes([...codes]);\n  return db.collection(\"codes\").doc(uid).delete().then(() => {// callback()\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteCodes = (ids, setCodes) => {\n  return db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"codes\").doc(uid).delete();\n        codes.push(code);\n      });\n    });\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      setCodes([...snapshot.docs]);\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleEditCode = (editCode, setCodes, callback) => {\n  db.collection(\"codes\").doc(editCode.id).update({\n    prefixCode: editCode.prefixCode,\n    code: editCode.prefixCode + editCode.suffixCode,\n    productActivated: editCode.apps,\n    notes: editCode.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleEditCodes = (editCode, setCodes, callback) => {\n  db.collection(\"codes\").doc(editCode.id).update({\n    productActivated: editCode.apps,\n    notes: editCode.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteInactiveCodes = (ids, setCodes) => {\n  console.log(ids);\n  return db.collection(\"inactiveCodes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"inactiveCodes\").doc(uid).delete();\n        codes.push(code);\n      });\n      setCodes([...codes]);\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleReactiveCode = (code, setCodes, callback) => {\n  // console.log(code)\n  db.collection(\"codes\").add({\n    code: code.code,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    purchasedLocation: code.placeOfPurchase,\n    notes: code.notes,\n    pefixCode: code.pefixCode\n  }).then(() => {\n    db.collection(\"inactiveCodes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      db.collection(\"inactiveCodes\").doc(code.id).delete();\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/codeActions.js"],"names":["db","crypto","require","handleAddCode","code","setCodes","callback","length","Number","lengthCode","cryptoCode","randomBytes","toString","slice","activatedProduct","products","forEach","product","theProduct","checked","name","productName","id","productId","apps","app","push","features","feature","collection","add","prefixCode","suffixCode","dateAdded","Date","toLocaleString","productActivated","purchasedLocation","notes","then","get","snapshot","codes","docs","catch","error","console","handleAddCodes","log","i","quantity","handleDeleteCode","uid","splice","doc","delete","err","handleDeleteCodes","ids","handleEditCode","editCode","update","handleEditCodes","handleDeleteInactiveCodes","handleReactiveCode","placeOfPurchase","pefixCode"],"mappings":"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","sourcesContent":["import {db} from '../firebase';\r\n// import {crypto} from 'crypto'\r\nconst crypto = require(\"crypto\");\r\n\r\nexport const handleAddCode = (code,setCodes,callback) => {\r\n    // console.log(code.lengthCode)\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    cryptoCode = cryptoCode.slice(0,length)\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : code.prefixCode+cryptoCode,\r\n        suffixCode : cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        products : code.products,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n    })\r\n    .then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleAddCodes = (code,setCodes,callback) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    console.log(\"activatedProduct\", activatedProduct)\r\n    for(let i =0; i<code.quantity; i++){\r\n        cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n        cryptoCode = cryptoCode.slice(0,length)\r\n    db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n        products: code.products\r\n    })\r\n    .then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...snapshot.docs]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n    }\r\n}\r\n\r\nexport const handleDeleteCode = (uid,codes,i,setCodes)=>{\r\n    codes.splice(i, 1);\r\n    setCodes([...codes]);\r\n    return db.collection(\"codes\").doc(uid).delete()\r\n    .then(() => {\r\n        // callback()\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteCodes = (ids, setCodes) =>{  \r\n    return db.collection(\"codes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"codes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n        })\r\n    }).then(() => {\r\n        db.collection(\"codes\").get()\r\n        .then(snapshot=>{\r\n            setCodes([...snapshot.docs]);\r\n        })\r\n    })\r\n    .catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleEditCode = (editCode,setCodes,callback) => {\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        prefixCode : editCode.prefixCode,\r\n        code : editCode.prefixCode+editCode.suffixCode,\r\n        productActivated : editCode.apps,\r\n        notes : editCode.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\nexport const handleEditCodes = (editCode,setCodes,callback) => {\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        productActivated : editCode.apps,\r\n        notes : editCode.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteInactiveCodes = (ids, setCodes) =>{  \r\n    console.log(ids)\r\n    return db.collection(\"inactiveCodes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"inactiveCodes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes])\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleReactiveCode = (code,setCodes,callback) => {\r\n    // console.log(code)\r\n    db.collection(\"codes\").add({\r\n        code : code.code,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        purchasedLocation : code.placeOfPurchase,\r\n        notes : code.notes,\r\n        pefixCode : code.pefixCode,\r\n    })\r\n    .then(() => {\r\n        db.collection(\"inactiveCodes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            db.collection(\"inactiveCodes\").doc(code.id).delete()\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}