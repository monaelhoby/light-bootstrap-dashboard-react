{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp, setUser) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    if (app.name.name == theApp.name.name) {\n      app.deviceId = \"\";\n    }\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleDeactiveAllApps = (user, product, setUser, callback) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    app.deviceId = \"\";\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  callback();\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleInactiveCode = (code, email, id, theCodeObject, callback) => {\n  db.collection(\"codes\").get().then(snapshot => {\n    let activeCodeObject = {};\n    snapshot.docs.forEach(oneCode => {\n      if (Array.isArray(oneCode.data().code)) {\n        let activeCode = \"\";\n        activeCode = oneCode.data().code.find(singleCode => singleCode == code);\n\n        if (activeCode) {\n          activeCodeObject = oneCode.data();\n        }\n      } else if (!Array.isArray(oneCode.data().code)) {\n        if (oneCode.data().code == code) {\n          activeCodeObject = oneCode.data();\n        } else {\n          return;\n        }\n      }\n    });\n    db.collection(\"inactiveCodes\").add({\n      inactiveCode: code,\n      activatedBy: email,\n      dataAdded: new Date().toLocaleString(),\n      placeOfPurchase: activeCodeObject.purchasedLocation,\n      productActivated: activeCodeObject.productActivated,\n      notes: activeCodeObject.notes\n    }).then(() => {\n      console.log(heCodeObject.data().productActivated); // db.collection(\"codes\").doc(theCodeObject.id).delete()\n\n      updateAppsinUser(theCodeObject.data().productActivated, id, code);\n      callback();\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateAppsinUser = (productsActivated, id, code) => {\n  db.collection(\"users\").doc(id).get().then(snapshot => {\n    let allProducts = [];\n    let theNewProduct = {};\n    let productActivatedExist = {};\n    snapshot.data().products.forEach(product => {\n      productActivatedExist = productsActivated.find(p => product.name == p.productName); // productActivatedExist.push(productActivatedExist)\n\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      let generatedApp = {};\n      product.apps.forEach(app => {\n        generatedApp.active = productActivatedExist ? productActivatedExist.appName == app.name.name ? true : app.active : app.active;\n        generatedApp.purchased = productActivatedExist ? productActivatedExist.appName == app.name.name ? true : app.purchased : app.purchased;\n        generatedApp.credentials = app.credentials;\n        generatedApp.expireDate = app.expireDate;\n        generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n        generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n        generatedApp.lastLaunchDate = app.lastLaunchDate;\n        generatedApp.timesAppLaunched = app.timesAppLaunched;\n        generatedApp.deviceId = app.deviceId;\n        generatedApp.activatedOn = productActivatedExist ? productActivatedExist.appName == app.name.name ? new Date().toLocaleString() : app.activatedOn : app.activatedOn;\n        generatedApp.codeUsed = code;\n        generatedApp.DateofLastUse = app.DateofLastUse;\n        generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n        generatedApp.name = app.name;\n        theNewProduct.apps.push(generatedApp);\n      }); // console.log(\"theNewProduct\",theNewProduct)\n\n      allProducts.push(theNewProduct);\n    });\n    console.log(\"allProducts\", allProducts); // db.collection(\"users\").doc(id).set({\n    //     products: [...allProducts]\n    // },{merge:true})\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","setUser","newUser","editableProduct","products","find","p","name","filter","apps","forEach","app","deviceId","push","collection","doc","id","set","handleDeactiveAllApps","callback","handleInactiveCode","code","email","theCodeObject","get","then","snapshot","activeCodeObject","docs","oneCode","Array","isArray","data","activeCode","singleCode","add","inactiveCode","activatedBy","dataAdded","Date","toLocaleString","placeOfPurchase","purchasedLocation","productActivated","notes","console","log","heCodeObject","updateAppsinUser","catch","err","productsActivated","allProducts","theNewProduct","productActivatedExist","productName","purchasedUrl","unpurchasedUrl","visibility","description","productIcon","generatedApp","active","appName","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive"],"mappings":"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","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp,setUser) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n        if (app.name.name == theApp.name.name){\r\n            app.deviceId = \"\";\r\n        }\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleDeactiveAllApps = (user,product,setUser,callback) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n            app.deviceId = \"\";\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n    callback()\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleInactiveCode = (code, email, id, theCodeObject,callback) => {\r\n    db.collection(\"codes\").get()\r\n    .then(snapshot => {\r\n    let activeCodeObject = {};\r\n    snapshot.docs.forEach(oneCode => {\r\n        if(Array.isArray(oneCode.data().code)){\r\n            let activeCode = \"\";\r\n            activeCode = oneCode.data().code.find(singleCode => singleCode==code);\r\n            if(activeCode){\r\n                activeCodeObject = oneCode.data() \r\n            }\r\n        }else if(!Array.isArray(oneCode.data().code)){\r\n            if(oneCode.data().code == code) {\r\n                activeCodeObject = oneCode.data() \r\n            }else{\r\n                return\r\n            }\r\n        }\r\n    })\r\n    db.collection(\"inactiveCodes\").add({\r\n        inactiveCode : code,\r\n        activatedBy : email,\r\n        dataAdded : new Date().toLocaleString(),\r\n        placeOfPurchase: activeCodeObject.purchasedLocation,\r\n        productActivated: activeCodeObject.productActivated,\r\n        notes: activeCodeObject.notes,\r\n    }).then(() => {\r\n        console.log(heCodeObject.data().productActivated)\r\n        // db.collection(\"codes\").doc(theCodeObject.id).delete()\r\n        updateAppsinUser(theCodeObject.data().productActivated,id,code)\r\n        callback()\r\n    })\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  const updateAppsinUser = (productsActivated, id,code)=>{\r\n    db.collection(\"users\").doc(id).get()\r\n    .then(snapshot=>{\r\n        let allProducts=[]\r\n        let theNewProduct = {};\r\n        let productActivatedExist = {};\r\n        snapshot.data().products.forEach((product) => {\r\n            productActivatedExist = productsActivated.find(p => product.name == p.productName)\r\n            // productActivatedExist.push(productActivatedExist)\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            let generatedApp   = {};\r\n            product.apps.forEach(app => {\r\n                generatedApp.active = productActivatedExist? productActivatedExist.appName == app.name.name ? true : app.active : app.active\r\n                generatedApp.purchased= productActivatedExist?productActivatedExist.appName == app.name.name ? true : app.purchased :app.purchased\r\n                generatedApp.credentials = app.credentials\r\n                generatedApp.expireDate= app.expireDate\r\n                generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                generatedApp.deviceId = app.deviceId \r\n                generatedApp.activatedOn= productActivatedExist?productActivatedExist.appName == app.name.name ? new Date().toLocaleString() :app.activatedOn:app.activatedOn\r\n                generatedApp.codeUsed= code\r\n                generatedApp.DateofLastUse= app.DateofLastUse\r\n                generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                generatedApp.name = app.name\r\n\r\n                \r\n            theNewProduct.apps.push(generatedApp)\r\n            })\r\n            // console.log(\"theNewProduct\",theNewProduct)\r\n            allProducts.push(theNewProduct)\r\n        })\r\n        console.log(\"allProducts\",allProducts)\r\n        // db.collection(\"users\").doc(id).set({\r\n        //     products: [...allProducts]\r\n        // },{merge:true})\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}