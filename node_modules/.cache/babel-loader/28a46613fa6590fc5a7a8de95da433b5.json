{"ast":null,"code":"import { db } from \"../../firebase\";\nexport const handleDeactiveApp = (user, product, theApp, setUser) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    if (app.name.name == theApp.name.name) {\n      app.deviceId = \"\";\n    }\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleDeactiveAllApps = (user, product, setUser, callback) => {\n  let newUser = user;\n  let editableProduct = newUser.products.find(p => {\n    return p.name == product.name;\n  });\n  newUser.products = newUser.products.filter(p => {\n    return p.name !== product.name;\n  });\n  editableProduct.apps.forEach(app => {\n    app.deviceId = \"\";\n  });\n  newUser.products.push(editableProduct);\n  setUser({ ...newUser\n  });\n  callback();\n  return db.collection('users').doc(user.id).set(newUser);\n};\nexport const handleInactiveCode = (code, email, id, theCodeObject, callback) => {\n  console.log(code, email, id, theCodeObject);\n  db.collection(\"codes\").get().then(snapshot => {\n    let activeCodeObject = {};\n    snapshot.docs.forEach(oneCode => {\n      if (Array.isArray(oneCode.data().code)) {\n        let activeCode = \"\";\n        activeCode = oneCode.data().code.find(singleCode => singleCode == code);\n\n        if (activeCode) {\n          activeCodeObject = oneCode.data();\n        }\n      } else if (!Array.isArray(oneCode.data().code)) {\n        if (oneCode.data().code == code) {\n          activeCodeObject = oneCode.data();\n        } else {\n          return;\n        }\n      }\n    });\n    db.collection(\"inactiveCodes\").add({\n      inactiveCode: code,\n      activatedBy: email,\n      dataAdded: new Date().toLocaleString(),\n      placeOfPurchase: activeCodeObject.purchasedLocation,\n      productActivated: activeCodeObject.productActivated,\n      notes: activeCodeObject.notes\n    }).then(() => {\n      updateAppsinUser(theCodeObject.productActivated, id, code);\n      callback();\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updateAppsinUser = (productsActivated, id, code) => {\n  db.collection(\"users\").doc(id).get().then(snapshot => {\n    let allProducts = [];\n    let theNewProduct = {};\n    snapshot.data().products.forEach(product => {\n      theNewProduct.name = product.name;\n      theNewProduct.purchasedUrl = product.purchasedUrl;\n      theNewProduct.unpurchasedUrl = product.unpurchasedUrl;\n      theNewProduct.visibility = product.visibility;\n      theNewProduct.description = product.description, theNewProduct.productIcon = product.productIcon, theNewProduct.id = product.id;\n      theNewProduct.apps = [];\n      let generatedApp = {};\n      const productActivatedExist = productsActivated.filter(p => product.name == p.productName);\n      console.log(\"productActivatedExist\", productsActivated);\n      product.apps.forEach(app => {\n        if (productsActivated) {\n          productsActivated.forEach(ActivatedProduct => {\n            if (app.name.name == ActivatedProduct.appName) {\n              generatedApp.active = true;\n              generatedApp.purchased = true;\n              generatedApp.credentials = app.credentials;\n              generatedApp.expireDate = app.expireDate;\n              generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n              generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n              generatedApp.lastLaunchDate = app.lastLaunchDate;\n              generatedApp.timesAppLaunched = app.timesAppLaunched;\n              generatedApp.deviceId = app.deviceId;\n              generatedApp.activatedOn = new Date().toLocaleString();\n              generatedApp.codeUsed = code;\n              generatedApp.DateofLastUse = app.DateofLastUse;\n              generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n              generatedApp.name = app.name;\n            }\n          });\n        } else {\n          product.apps.forEach(app => {\n            generatedApp.active = app.active, generatedApp.purchased = app.purchased;\n            generatedApp.credentials = app.credentials;\n            generatedApp.expireDate = app.expireDate;\n            generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin;\n            generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased;\n            generatedApp.lastLaunchDate = app.lastLaunchDate;\n            generatedApp.timesAppLaunched = app.timesAppLaunched;\n            generatedApp.deviceId = app.deviceId;\n            generatedApp.activatedOn = app.activatedOn;\n            generatedApp.codeUsed = app.codeUsed;\n            generatedApp.DateofLastUse = app.DateofLastUse;\n            generatedApp.LaunchesSinceActive = app.LaunchesSinceActive;\n            generatedApp.name = app.name;\n          });\n        }\n\n        theNewProduct.apps.push(generatedApp); // console.log(\"theNewProduct\",theNewProduct)\n      });\n      allProducts.push(theNewProduct);\n    }); // console.log(\"allProducts\",allProducts)\n    // db.collection(\"users\").doc(id).set({\n    //     products: [...allProducts]\n    // },{merge:true})\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/userPortal/appAction.js"],"names":["db","handleDeactiveApp","user","product","theApp","setUser","newUser","editableProduct","products","find","p","name","filter","apps","forEach","app","deviceId","push","collection","doc","id","set","handleDeactiveAllApps","callback","handleInactiveCode","code","email","theCodeObject","console","log","get","then","snapshot","activeCodeObject","docs","oneCode","Array","isArray","data","activeCode","singleCode","add","inactiveCode","activatedBy","dataAdded","Date","toLocaleString","placeOfPurchase","purchasedLocation","productActivated","notes","updateAppsinUser","catch","err","productsActivated","allProducts","theNewProduct","purchasedUrl","unpurchasedUrl","visibility","description","productIcon","generatedApp","productActivatedExist","productName","ActivatedProduct","appName","active","purchased","credentials","expireDate","timesAppLaunchedLastLogin","timesAppLaunchedPurchased","lastLaunchDate","timesAppLaunched","activatedOn","codeUsed","DateofLastUse","LaunchesSinceActive"],"mappings":"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","sourcesContent":["import { db } from \"../../firebase\";\r\n\r\n\r\nexport const handleDeactiveApp = (user,product,theApp,setUser) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n        if (app.name.name == theApp.name.name){\r\n            app.deviceId = \"\";\r\n        }\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleDeactiveAllApps = (user,product,setUser,callback) => {\r\n    let newUser = user;\r\n    let editableProduct = newUser.products.find(p=>{\r\n        return p.name == product.name;\r\n    })\r\n    \r\n    newUser.products = newUser.products.filter(p=>{\r\n        return p.name !== product.name;\r\n    })\r\n\r\n    editableProduct.apps.forEach(app => {\r\n            app.deviceId = \"\";\r\n    });\r\n    newUser.products.push(editableProduct);\r\n    setUser({...newUser})\r\n    callback()\r\n    return db.collection('users').doc(user.id).set(newUser) \r\n    \r\n  }\r\n\r\n  export const handleInactiveCode = (code, email, id, theCodeObject,callback) => {\r\n      console.log(code,email,id,theCodeObject)\r\n    db.collection(\"codes\").get()\r\n    .then(snapshot => {\r\n    let activeCodeObject = {};\r\n    snapshot.docs.forEach(oneCode => {\r\n        if(Array.isArray(oneCode.data().code)){\r\n            let activeCode = \"\";\r\n            activeCode = oneCode.data().code.find(singleCode => singleCode==code);\r\n            if(activeCode){\r\n                activeCodeObject = oneCode.data() \r\n            }\r\n        }else if(!Array.isArray(oneCode.data().code)){\r\n            if(oneCode.data().code == code) {\r\n                activeCodeObject = oneCode.data() \r\n            }else{\r\n                return\r\n            }\r\n        }\r\n    })\r\n    db.collection(\"inactiveCodes\").add({\r\n        inactiveCode : code,\r\n        activatedBy : email,\r\n        dataAdded : new Date().toLocaleString(),\r\n        placeOfPurchase: activeCodeObject.purchasedLocation,\r\n        productActivated: activeCodeObject.productActivated,\r\n        notes: activeCodeObject.notes,\r\n    }).then(() => {\r\n        updateAppsinUser(theCodeObject.productActivated,id,code)\r\n        callback()\r\n    })\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  const updateAppsinUser = (productsActivated, id,code)=>{\r\n    db.collection(\"users\").doc(id).get()\r\n    .then(snapshot=>{\r\n        let allProducts=[]\r\n        let theNewProduct = {};\r\n        snapshot.data().products.forEach((product) => {\r\n            theNewProduct.name = product.name;\r\n            theNewProduct.purchasedUrl= product.purchasedUrl;\r\n            theNewProduct.unpurchasedUrl= product.unpurchasedUrl;\r\n            theNewProduct.visibility= product.visibility;\r\n            theNewProduct.description= product.description,\r\n            theNewProduct.productIcon= product.productIcon,\r\n            theNewProduct.id = product.id;\r\n            theNewProduct.apps = [];\r\n            let generatedApp   = {};\r\n            const productActivatedExist = productsActivated.filter(p => product.name == p.productName)\r\n            console.log(\"productActivatedExist\",productsActivated)\r\n            product.apps.forEach(app => {\r\n                if(productsActivated){\r\n                    productsActivated.forEach((ActivatedProduct)=>{\r\n                        if(app.name.name == ActivatedProduct.appName){\r\n                            generatedApp.active = true\r\n                            generatedApp.purchased= true\r\n                            generatedApp.credentials = app.credentials\r\n                            generatedApp.expireDate= app.expireDate\r\n                            generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                            generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                            generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                            generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                            generatedApp.deviceId = app.deviceId \r\n                            generatedApp.activatedOn= new Date().toLocaleString()\r\n                            generatedApp.codeUsed= code\r\n                            generatedApp.DateofLastUse= app.DateofLastUse\r\n                            generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                            generatedApp.name = app.name\r\n                        }\r\n                    })\r\n                }else{\r\n                    product.apps.forEach((app)=>{\r\n                        generatedApp.active = app.active,\r\n                        generatedApp.purchased= app.purchased\r\n                        generatedApp.credentials = app.credentials\r\n                        generatedApp.expireDate= app.expireDate\r\n                        generatedApp.timesAppLaunchedLastLogin = app.timesAppLaunchedLastLogin\r\n                        generatedApp.timesAppLaunchedPurchased = app.timesAppLaunchedPurchased\r\n                        generatedApp.lastLaunchDate = app.lastLaunchDate\r\n                        generatedApp.timesAppLaunched = app.timesAppLaunched\r\n                        generatedApp.deviceId = app.deviceId \r\n                        generatedApp.activatedOn= app.activatedOn\r\n                        generatedApp.codeUsed= app.codeUsed\r\n                        generatedApp.DateofLastUse= app.DateofLastUse\r\n                        generatedApp.LaunchesSinceActive= app.LaunchesSinceActive\r\n                        generatedApp.name = app.name\r\n                    })\r\n                }\r\n                theNewProduct.apps.push(generatedApp)\r\n                // console.log(\"theNewProduct\",theNewProduct)\r\n            })\r\n            allProducts.push(theNewProduct)\r\n        })\r\n        // console.log(\"allProducts\",allProducts)\r\n        // db.collection(\"users\").doc(id).set({\r\n        //     products: [...allProducts]\r\n        // },{merge:true})\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}