{"ast":null,"code":"var _jsxFileName = \"E:\\\\Folder\\\\React\\\\projects\\\\my_freelance_work\\\\M.Radwan Work\\\\light-bootstrap-dashboard-react\\\\src\\\\components\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, db, functions } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addAdminRole = functions.httpsCallable(\"addAdminRole\"); // addAdminRole({ email: \"mohamedradwandev@gmail.com\" }).then((result) => {\n//   // console.log(result);\n// });\n// db.collection(\"users\")\n//   .get()\n//   .then((snapshot) => {\n//     console.log(\"snapshot is \", snapshot.docs[0].data());\n//   });\n\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  const handleResetPassword = email => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        user.getIdTokenResult().then(idTokenResult => {\n          user.admin = idTokenResult.claims.admin;\n          setCurrentUser(user);\n          setLoading(false);\n        });\n      } else {\n        setCurrentUser(user);\n        setLoading(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    addAdminRole,\n    handleResetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/components/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","db","functions","addAdminRole","httpsCallable","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","handleResetPassword","sendPasswordResetEmail","resetPassword","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","getIdTokenResult","then","idTokenResult","admin","claims","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,SAAnB,QAAoC,gBAApC;;AAEA,MAAMC,YAAY,GAAGD,SAAS,CAACE,aAAV,CAAwB,cAAxB,CAArB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOV,UAAU,CAACQ,WAAD,CAAjB;AACD;;GAFeE,O;;AAKhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASgB,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,WAAOhB,IAAI,CAACiB,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACD;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOhB,IAAI,CAACmB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AAED,WAASI,MAAT,GAAkB;AAChB,WAAOpB,IAAI,CAACqB,OAAL,EAAP;AACD;;AAED,QAAMC,mBAAmB,GAAIP,KAAD,IAAW;AACrC,WAAOf,IAAI,CAACuB,sBAAL,CAA4BR,KAA5B,CAAP;AACD,GAFD;;AAIA,WAASS,aAAT,CAAuBT,KAAvB,EAA8B;AAC5B,WAAOf,IAAI,CAACuB,sBAAL,CAA4BR,KAA5B,CAAP;AACD;;AAED,WAASU,WAAT,CAAqBV,KAArB,EAA4B;AAC1B,WAAOL,WAAW,CAACe,WAAZ,CAAwBV,KAAxB,CAAP;AACD;;AAED,WAASW,cAAT,CAAwBV,QAAxB,EAAkC;AAChC,WAAON,WAAW,CAACgB,cAAZ,CAA2BV,QAA3B,CAAP;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,WAAW,GAAG3B,IAAI,CAAC4B,kBAAL,CAAyBC,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACC,gBAAL,GAAwBC,IAAxB,CAA8BC,aAAD,IAAmB;AAC9CH,UAAAA,IAAI,CAACI,KAAL,GAAaD,aAAa,CAACE,MAAd,CAAqBD,KAAlC;AACAtB,UAAAA,cAAc,CAACkB,IAAD,CAAd;AACAhB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAJD;AAKD,OAND,MAMO;AACLF,QAAAA,cAAc,CAACkB,IAAD,CAAd;AACAhB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAXmB,CAApB;AAaA,WAAOc,WAAP;AACD,GAfQ,EAeN,EAfM,CAAT;AAiBA,QAAMQ,KAAK,GAAG;AACZzB,IAAAA,WADY;AAEZQ,IAAAA,KAFY;AAGZJ,IAAAA,MAHY;AAIZM,IAAAA,MAJY;AAKZI,IAAAA,aALY;AAMZC,IAAAA,WANY;AAOZC,IAAAA,cAPY;AAQZvB,IAAAA,YARY;AASZmB,IAAAA;AATY,GAAd;AAYA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,KAA7B;AAAA,cACG,CAACvB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAlEeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth, db, functions } from \"../../firebase\";\r\n\r\nconst addAdminRole = functions.httpsCallable(\"addAdminRole\");\r\n\r\n// addAdminRole({ email: \"mohamedradwandev@gmail.com\" }).then((result) => {\r\n//   // console.log(result);\r\n// });\r\n\r\n// db.collection(\"users\")\r\n//   .get()\r\n//   .then((snapshot) => {\r\n//     console.log(\"snapshot is \", snapshot.docs[0].data());\r\n//   });\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  const handleResetPassword = (email) => {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        user.getIdTokenResult().then((idTokenResult) => {\r\n          user.admin = idTokenResult.claims.admin;\r\n          setCurrentUser(user);\r\n          setLoading(false);\r\n        });\r\n      } else {\r\n        setCurrentUser(user);\r\n        setLoading(false);\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    addAdminRole,\r\n    handleResetPassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}