{"ast":null,"code":"import { db } from '../firebase'; // import {crypto} from 'crypto'\n\nconst crypto = require(\"crypto\");\n\nexport const handleAddCode = (code, setCodes, callback, theOffsetActiveCode, thePageLimitActiveCode, setCurrentActiveCodes) => {\n  // console.log(code.lengthCode)\n  const length = Number(code.lengthCode);\n  let cryptoCode = null;\n  cryptoCode = crypto.randomBytes(length).toString(\"hex\"); // console.log(\"before cryptoCode\", cryptoCode)\n\n  cryptoCode = cryptoCode.replace(/0|1|o|O|l|L/gi, \"e\"); // console.log(\"before cryptoCode\", cryptoCode)\n\n  let thePrefix = code.prefixCode;\n  thePrefix = thePrefix.replace(/0|1/gi, \"e\"); // console.log(\"before thePrefix\", thePrefix)\n\n  thePrefix = thePrefix.replace(/0|1|o|O|l|L/gi, \"R\"); // console.log(\"before thePrefix\", thePrefix)\n  // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  });\n  db.collection(\"codes\").add({\n    prefixCode: code.prefixCode,\n    code: thePrefix + cryptoCode,\n    suffixCode: cryptoCode,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: activatedProduct,\n    products: code.products,\n    purchasedLocation: code.purchasedLocation,\n    notes: code.notes\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n\n      if (theOffsetActiveCode || thePageLimitActiveCode) {\n        setCurrentActiveCodes(codes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode));\n      } else {\n        setCurrentActiveCodes([...codes]);\n      }\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleAddCodes = (code, setCodes, callback, theOffsetActiveCode, thePageLimitActiveCode, setCurrentActiveCodes) => {\n  const length = Number(code.lengthCode);\n  let cryptoCode = null; // console.log(code.products)\n\n  let activatedProduct = [];\n  code.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  }); // console.log(\"activatedProduct\", activatedProduct)\n\n  for (let i = 0; i < code.quantity; i++) {\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\");\n    cryptoCode = cryptoCode.slice(0, length - code.prefixCode.length); // console.log(\"before cryptoCode\", cryptoCode)\n\n    cryptoCode = cryptoCode.replace(/0|1|o|O|l|L/gi, \"e\"); // console.log(\"before cryptoCode\", cryptoCode)\n\n    let thePrefix = code.prefixCode;\n    thePrefix = thePrefix.replace(/0|1/gi, \"e\"); // console.log(\"before thePrefix\", thePrefix)\n\n    thePrefix = thePrefix.replace(/0|1|o|O|l|L/gi, \"R\"); // console.log(\"before thePrefix\", thePrefix)\n\n    db.collection(\"codes\").add({\n      prefixCode: code.prefixCode,\n      code: thePrefix + cryptoCode,\n      dateAdded: new Date().toLocaleString(),\n      productActivated: activatedProduct,\n      purchasedLocation: code.purchasedLocation,\n      notes: code.notes,\n      products: code.products,\n      suffixCode: cryptoCode\n    }).then(() => {\n      db.collection(\"codes\").get().then(snapshot => {\n        let codes = [];\n        snapshot.docs.forEach(code => {\n          code.checked = false;\n          codes.push(code);\n        });\n        setCodes([...snapshot.docs]);\n        callback();\n\n        if (theOffsetActiveCode || thePageLimitActiveCode) {\n          setCurrentActiveCodes(snapshot.docs.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode));\n        } else {\n          setCurrentActiveCodes([...snapshot.docs]);\n        }\n      });\n    }).catch(error => {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n};\nexport const handleDeleteCode = (code, setCodes, callback, theOffsetActiveCode, thePageLimitActiveCode, setCurrentActiveCodes) => {\n  db.collection(\"codes\").doc(code.id).delete().then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      setCodes([...snapshot.docs]);\n\n      if (theOffsetActiveCode || thePageLimitActiveCode) {\n        setCurrentActiveCodes(snapshot.docs.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode));\n      } else {\n        setCurrentActiveCodes([...snapshot.docs]);\n      }\n    });\n    callback();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const handleDeleteCodes = (ids, setCodes, callback, theOffsetActiveCode, thePageLimitActiveCode, setCurrentActiveCodes) => {\n  let theCodes = [];\n  return db.collection(\"codes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      let codes = [];\n      ids.forEach(uid => {\n        db.collection(\"codes\").doc(uid).delete();\n        codes.push(code);\n      });\n    });\n  }).then(() => {\n    db.collection(\"codes\").get().then(snapshot => {\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        theCodes.push(code);\n      });\n      setCodes([...theCodes]);\n\n      if (theOffsetActiveCode || thePageLimitActiveCode) {\n        setCurrentActiveCodes(theCodes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode));\n      } else {\n        setCurrentActiveCodes([...theCodes]);\n      }\n    });\n    callback();\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleEditCode = (editCode, setCodes, callback, theOffsetActiveCode, thePageLimitActiveCode, setCurrentActiveCodes) => {\n  // console.log(\"editCode\", editCode)\n  let activatedProduct = [];\n  editCode.products.forEach(product => {\n    // console.log(product.productName)\n    let theProduct = {};\n\n    if (product.checked == true) {\n      theProduct.name = product.productName;\n      theProduct.id = product.productId;\n      let apps = [];\n      product.apps.forEach(app => {\n        if (app.checked) {\n          apps.push(app.name);\n        }\n\n        theProduct.apps = apps;\n      });\n      let features = [];\n      product.features.forEach(feature => {\n        if (feature.checked) {\n          features.push(feature.name);\n        }\n\n        theProduct.features = features;\n      });\n      activatedProduct.push(theProduct);\n    } // console.log(theProduct)\n\n  }); // console.log(editCode)\n\n  db.collection(\"codes\").doc(editCode.id).update({\n    prefixCode: editCode.prefixCode,\n    code: editCode.prefixCode + editCode.suffixCode,\n    productActivated: activatedProduct,\n    notes: editCode.notes,\n    products: editCode.products\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n\n      if (theOffsetActiveCode || thePageLimitActiveCode) {\n        setCurrentActiveCodes(codes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode));\n      } else {\n        setCurrentActiveCodes([...codes]);\n      }\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleEditCodes = (editCode, setCodes, callback) => {\n  db.collection(\"codes\").doc(editCode.id).update({\n    productActivated: editCode.apps,\n    notes: editCode.notes\n  }).then(codes => {\n    db.collection(\"codes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        code.checked = false;\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n    });\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const handleDeleteInactiveCodes = (ids, setCodes, callback, theOffsetInactiveCode, thePageLimitInactiveCode, setCurrentInactiveCodes) => {\n  // console.log(ids)\n  return db.collection(\"inactiveCodes\").get().then(snapshot => {\n    snapshot.docs.forEach(code => {\n      ids.forEach(uid => {\n        db.collection(\"inactiveCodes\").doc(uid).delete();\n      });\n    });\n    callback();\n  }).then(() => {\n    db.collection(\"inactiveCodes\").get().then(snapshot => {\n      let codes = [];\n      snapshot.docs.forEach(code => {\n        codes.push(code);\n      });\n      setCodes([...codes]);\n      callback();\n\n      if (theOffsetInactiveCode || thePageLimitInactiveCode) {\n        setCurrentInactiveCodes(codes.slice(theOffsetInactiveCode, theOffsetInactiveCode + thePageLimitInactiveCode));\n      } else {\n        setCurrentInactiveCodes([...codes]);\n      }\n    });\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};\nexport const handleReactiveCode = (code, setCodes, callback, theOffsetInactiveCode, thePageLimitInactiveCode, setCurrentInactiveCodes) => {\n  // console.log(code)\n  db.collection(\"codes\").add({\n    code: code.code,\n    dateAdded: new Date().toLocaleString(),\n    productActivated: code.apps,\n    products: code.products,\n    purchasedLocation: code.placeOfPurchase,\n    notes: code.notes,\n    prefixCode: code.prefixCode,\n    suffixCode: code.suffixCode\n  }).then(() => {\n    db.collection(\"inactiveCodes\").doc(code.id).delete().then(() => {\n      db.collection(\"inactiveCodes\").get().then(snapshot => {\n        // console.log(snapshot.docs)\n        setCodes([...snapshot.docs]);\n\n        if (theOffsetInactiveCode || thePageLimitInactiveCode) {\n          setCurrentInactiveCodes(snapshot.docs.slice(theOffsetInactiveCode, theOffsetInactiveCode + thePageLimitInactiveCode));\n        } else {\n          setCurrentInactiveCodes([...snapshot.docs]);\n        }\n      }); // code.checked = false;\n      // codes.push(code)\n    });\n    callback();\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/codeActions.js"],"names":["db","crypto","require","handleAddCode","code","setCodes","callback","theOffsetActiveCode","thePageLimitActiveCode","setCurrentActiveCodes","length","Number","lengthCode","cryptoCode","randomBytes","toString","replace","thePrefix","prefixCode","activatedProduct","products","forEach","product","theProduct","checked","name","productName","id","productId","apps","app","push","features","feature","collection","add","suffixCode","dateAdded","Date","toLocaleString","productActivated","purchasedLocation","notes","then","get","snapshot","codes","docs","slice","catch","error","console","handleAddCodes","i","quantity","handleDeleteCode","doc","delete","err","log","handleDeleteCodes","ids","theCodes","uid","handleEditCode","editCode","update","handleEditCodes","handleDeleteInactiveCodes","theOffsetInactiveCode","thePageLimitInactiveCode","setCurrentInactiveCodes","handleReactiveCode","placeOfPurchase"],"mappings":"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","sourcesContent":["import {db} from '../firebase';\r\n// import {crypto} from 'crypto'\r\nconst crypto = require(\"crypto\");\r\n\r\nexport const handleAddCode = (code,setCodes,callback,theOffsetActiveCode,thePageLimitActiveCode,setCurrentActiveCodes) => {\r\n    // console.log(code.lengthCode)\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n    // console.log(\"before cryptoCode\", cryptoCode)\r\n    cryptoCode = cryptoCode.replace(/0|1|o|O|l|L/gi,\"e\")\r\n    // console.log(\"before cryptoCode\", cryptoCode)\r\n    let thePrefix = code.prefixCode\r\n    thePrefix = thePrefix.replace(/0|1/gi,\"e\")\r\n    // console.log(\"before thePrefix\", thePrefix)\r\n    thePrefix = thePrefix.replace(/0|1|o|O|l|L/gi,\"R\")\r\n    // console.log(\"before thePrefix\", thePrefix)\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : thePrefix+cryptoCode,\r\n        suffixCode : cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        products : code.products,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n    })\r\n    .then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n            if(theOffsetActiveCode || thePageLimitActiveCode){\r\n                setCurrentActiveCodes(codes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode))\r\n            }else{\r\n                setCurrentActiveCodes([...codes])\r\n            }\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleAddCodes = (code,setCodes,callback,theOffsetActiveCode,thePageLimitActiveCode,setCurrentActiveCodes) => {\r\n    const length = Number(code.lengthCode) \r\n    let cryptoCode = null;\r\n    // console.log(code.products)\r\n    let activatedProduct = []\r\n    code.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    // console.log(\"activatedProduct\", activatedProduct)\r\n    for(let i =0; i<code.quantity; i++){\r\n        cryptoCode = crypto.randomBytes(length).toString(\"hex\")\r\n        cryptoCode = cryptoCode.slice(0,length - code.prefixCode.length)\r\n        // console.log(\"before cryptoCode\", cryptoCode)\r\n        cryptoCode = cryptoCode.replace(/0|1|o|O|l|L/gi,\"e\")\r\n        // console.log(\"before cryptoCode\", cryptoCode)\r\n        let thePrefix = code.prefixCode\r\n        thePrefix = thePrefix.replace(/0|1/gi,\"e\")\r\n        // console.log(\"before thePrefix\", thePrefix)\r\n        thePrefix = thePrefix.replace(/0|1|o|O|l|L/gi,\"R\")\r\n        // console.log(\"before thePrefix\", thePrefix)\r\n        db.collection(\"codes\").add({\r\n        prefixCode : code.prefixCode,\r\n        code : thePrefix+cryptoCode,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : activatedProduct,\r\n        purchasedLocation : code.purchasedLocation,\r\n        notes : code.notes,\r\n        products: code.products,\r\n        suffixCode: cryptoCode\r\n        })\r\n        .then(() => {\r\n            db.collection(\"codes\").get().then(snapshot=>{\r\n                let codes = [];\r\n                snapshot.docs.forEach(code=>{\r\n                    code.checked = false;\r\n                    codes.push(code)\r\n                })\r\n                setCodes([...snapshot.docs]);\r\n                callback()\r\n                if(theOffsetActiveCode || thePageLimitActiveCode){\r\n                    setCurrentActiveCodes(snapshot.docs.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode))\r\n                }else{\r\n                    setCurrentActiveCodes([...snapshot.docs])\r\n                }\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n}\r\n\r\nexport const handleDeleteCode = (code,setCodes,callback,theOffsetActiveCode,thePageLimitActiveCode,setCurrentActiveCodes)=>{\r\n    \r\n    db.collection(\"codes\").doc(code.id).delete()\r\n    .then(()=>{\r\n        db.collection(\"codes\").get()\r\n        .then(snapshot=>{\r\n            setCodes([...snapshot.docs]);\r\n            if(theOffsetActiveCode || thePageLimitActiveCode){\r\n                setCurrentActiveCodes(snapshot.docs.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode))\r\n            }else{\r\n                setCurrentActiveCodes([...snapshot.docs])\r\n            }\r\n        })\r\n        callback() \r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteCodes = (ids, setCodes,callback,theOffsetActiveCode,thePageLimitActiveCode,setCurrentActiveCodes) =>{  \r\n    let theCodes = [];\r\n    return db.collection(\"codes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            let codes = [];\r\n            ids.forEach(uid => {\r\n                db.collection(\"codes\").doc(uid).delete();\r\n                codes.push(code)\r\n            })\r\n        })\r\n    }).then(() => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            snapshot.docs.forEach(code => {\r\n                code.checked = false;\r\n                theCodes.push(code)\r\n            })\r\n            setCodes([...theCodes]); \r\n            if(theOffsetActiveCode || thePageLimitActiveCode){\r\n                setCurrentActiveCodes(theCodes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode))\r\n            }else{\r\n                setCurrentActiveCodes([...theCodes])\r\n            }\r\n        })\r\n        callback()\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleEditCode = (editCode,setCodes,callback,theOffsetActiveCode,thePageLimitActiveCode,setCurrentActiveCodes) => {\r\n    // console.log(\"editCode\", editCode)\r\n    let activatedProduct = []\r\n    editCode.products.forEach(product => {\r\n        // console.log(product.productName)\r\n        let theProduct = {}\r\n        if(product.checked == true){\r\n            theProduct.name = product.productName\r\n            theProduct.id = product.productId\r\n            let apps =[]\r\n            product.apps.forEach(app => {\r\n                if(app.checked){\r\n                    apps.push(app.name)\r\n                }\r\n                theProduct.apps = apps\r\n            })\r\n            let features =[]\r\n            product.features.forEach(feature => {\r\n                if(feature.checked){\r\n                    features.push(feature.name)\r\n                }\r\n                theProduct.features = features\r\n            })\r\n            activatedProduct.push(theProduct)\r\n        }\r\n        // console.log(theProduct)\r\n    })\r\n    // console.log(editCode)\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        prefixCode : editCode.prefixCode,\r\n        code : editCode.prefixCode+editCode.suffixCode,\r\n        productActivated : activatedProduct,\r\n        notes : editCode.notes,\r\n        products : editCode.products\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback() \r\n            if(theOffsetActiveCode || thePageLimitActiveCode){\r\n                setCurrentActiveCodes(codes.slice(theOffsetActiveCode, theOffsetActiveCode + thePageLimitActiveCode))\r\n            }else{\r\n                setCurrentActiveCodes([...codes])\r\n            }\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleEditCodes = (editCode,setCodes,callback) => {\r\n    db.collection(\"codes\").doc(editCode.id).update({\r\n        productActivated : editCode.apps,\r\n        notes : editCode.notes,\r\n    })\r\n    .then((codes) => {\r\n        db.collection(\"codes\").get().then(snapshot=>{\r\n            let codes = [];\r\n            snapshot.docs.forEach(code=>{\r\n                code.checked = false;\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes]);\r\n            callback()\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n\r\nexport const handleDeleteInactiveCodes = (ids, setCodes,callback,theOffsetInactiveCode,thePageLimitInactiveCode,setCurrentInactiveCodes) =>{  \r\n    // console.log(ids)\r\n    return db.collection(\"inactiveCodes\").get().then((snapshot) => {\r\n        snapshot.docs.forEach((code) => {\r\n            ids.forEach(uid => {\r\n                db.collection(\"inactiveCodes\").doc(uid).delete();\r\n            })\r\n        })\r\n        callback()\r\n    }).then(() => {\r\n        db.collection(\"inactiveCodes\").get().then((snapshot) => {\r\n            let codes =[]\r\n            snapshot.docs.forEach((code) => {\r\n                codes.push(code)\r\n            })\r\n            setCodes([...codes])\r\n            callback()\r\n            if(theOffsetInactiveCode || thePageLimitInactiveCode){\r\n                setCurrentInactiveCodes(codes.slice(theOffsetInactiveCode, theOffsetInactiveCode + thePageLimitInactiveCode))\r\n            }else{\r\n                setCurrentInactiveCodes([...codes])\r\n            }\r\n        })\r\n    }).catch(err=>{\r\n    console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\nexport const handleReactiveCode = (code,setCodes,callback,theOffsetInactiveCode,thePageLimitInactiveCode,setCurrentInactiveCodes) => {\r\n    // console.log(code)\r\n    db.collection(\"codes\").add({\r\n        code : code.code,\r\n        dateAdded : new Date().toLocaleString(),\r\n        productActivated : code.apps,\r\n        products : code.products,\r\n        purchasedLocation : code.placeOfPurchase,\r\n        notes : code.notes,\r\n        prefixCode : code.prefixCode,\r\n        suffixCode: code.suffixCode\r\n    })\r\n    .then(() => {\r\n        db.collection(\"inactiveCodes\").doc(code.id).delete()\r\n        .then(() => {\r\n            db.collection(\"inactiveCodes\").get().then(snapshot=>{\r\n                // console.log(snapshot.docs)\r\n                setCodes([...snapshot.docs]);\r\n                if(theOffsetInactiveCode || thePageLimitInactiveCode){\r\n                    setCurrentInactiveCodes(snapshot.docs.slice(theOffsetInactiveCode, theOffsetInactiveCode + thePageLimitInactiveCode))\r\n                }else{\r\n                    setCurrentInactiveCodes([...snapshot.docs])\r\n                }\r\n            })\r\n            // code.checked = false;\r\n            // codes.push(code)\r\n        })\r\n        callback()\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"Error writing document: \", error);\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}