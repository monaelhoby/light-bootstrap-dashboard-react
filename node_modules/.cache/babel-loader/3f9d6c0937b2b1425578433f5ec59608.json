{"ast":null,"code":"var _jsxFileName = \"E:\\\\Folder\\\\React\\\\projects\\\\my_freelance_work\\\\M.Radwan Work\\\\light-bootstrap-dashboard-react\\\\src\\\\views\\\\resetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\";\nimport { useAuth } from \"../components/contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport app, { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function forgetPassword() {\n  _s();\n\n  // console.log(\"useAuth\",useAuth())\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    handleResetPassword\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showResetPassword, setShowResetPassword] = useState(false);\n  const [showFailedResetPassword, setShowFailedResetPassword] = useState(false);\n  React.useEffect(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      let users = [];\n      snapshot.docs.forEach(user => {\n        user.checked = false;\n        users.push(user);\n      });\n      setUsers([...users]);\n    });\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await handleResetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox\");\n    } catch (err) {\n      console.log(err);\n      setError(\"Failed to Reset Password\");\n    }\n\n    setLoading(false);\n  }\n\n  if (showResetPassword) {\n    setShowFailedResetPassword(false);\n  }\n\n  const handleClick = () => {\n    // console.log(users)\n    users.forEach(user => {\n      // console.log(user.data().email)\n      if (emailRef.current.value === user.data().email) {\n        // console.log(\"yes\", emailRef.current.value)\n        setShowResetPassword(true);\n        setShowFailedResetPassword(false);\n      }\n\n      if (emailRef.current.value !== user.data().email) {\n        // console.log(\"no\", emailRef.current.value)\n        setShowFailedResetPassword(true);\n      }\n    });\n\n    if (showResetPassword) {\n      setShowFailedResetPassword(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      style: {\n        maxWidth: \"400px\",\n        margin: \"50px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            onClick: handleClick,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 text-center mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 text-center mt-2\",\n        children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thePopUp resetPopup \" + (showResetPassword ? \"active\" : \"\"),\n        onClick: () => setShowResetPassword(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thePopUpBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-icon-detail closePopUp\",\n            onClick: () => setShowResetPassword(false),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"nc-icon nc-simple-remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            style: {\n              marginBottom: 30\n            },\n            children: \"Password Reset sent to your email successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSubmit,\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thePopUp failedPopup \" + (showFailedResetPassword && !showResetPassword ? \"active\" : showFailedResetPassword && showResetPassword ? \"\" : \"\"),\n        onClick: () => setShowFailedResetPassword(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thePopUpBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-icon-detail closePopUp\",\n            onClick: () => setShowFailedResetPassword(false),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"nc-icon nc-simple-remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Account Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(forgetPassword, \"NwLzIZ8d4AW0xzqQcJMmLX1YRg4=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/resetPassword.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","Modal","useAuth","Link","app","db","forgetPassword","emailRef","passwordRef","handleResetPassword","error","setError","message","setMessage","loading","setLoading","users","setUsers","showResetPassword","setShowResetPassword","showFailedResetPassword","setShowFailedResetPassword","useEffect","collection","get","then","snapshot","docs","forEach","user","checked","push","handleSubmit","e","preventDefault","current","value","err","console","log","handleClick","data","email","maxWidth","margin","marginBottom"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\";\r\nimport { useAuth } from \"../components/contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport app, { db } from \"../firebase\";\r\n\r\nexport default function forgetPassword() {\r\n  // console.log(\"useAuth\",useAuth())\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { handleResetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [users, setUsers] = useState([])\r\n  const [showResetPassword, setShowResetPassword] = useState(false)\r\n  const [showFailedResetPassword, setShowFailedResetPassword] = useState(false)\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\").get()\r\n    .then(snapshot=>{\r\n      let users = [];\r\n      snapshot.docs.forEach(user=>{\r\n        user.checked = false;\r\n        users.push(user);\r\n      })\r\n      setUsers([...users]);\r\n    })\r\n  },[]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await handleResetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox\")\r\n    } catch(err) {\r\n        console.log(err)\r\n      setError(\"Failed to Reset Password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  if(showResetPassword){\r\n    setShowFailedResetPassword(false)\r\n  }\r\n\r\n  const handleClick = () =>{\r\n    // console.log(users)\r\n    users.forEach(user => {\r\n      // console.log(user.data().email)\r\n      if(emailRef.current.value === user.data().email){\r\n        // console.log(\"yes\", emailRef.current.value)\r\n          setShowResetPassword(true)\r\n          setShowFailedResetPassword(false)\r\n      }\r\n      if(emailRef.current.value !== user.data().email){\r\n        // console.log(\"no\", emailRef.current.value)\r\n        setShowFailedResetPassword(true)\r\n      }\r\n    })\r\n    if(showResetPassword){\r\n      setShowFailedResetPassword(false)\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n    <div className=\"w-100\" style={{ maxWidth: \"400px\",margin:\"50px auto\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {/* <Form onSubmit={handleClick}> */}\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\" onClick={handleClick}>\r\n              Reset Password\r\n            </Button>\r\n          {/* </Form> */}\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n      \r\n      <div className={\"thePopUp resetPopup \" + (showResetPassword ? \"active\" : \"\")} onClick={() => setShowResetPassword(false)}>\r\n        <div className=\"thePopUpBody\">\r\n          <div className=\"font-icon-detail closePopUp\" onClick={() => setShowResetPassword(false)}>\r\n            <i className=\"nc-icon nc-simple-remove\"></i>\r\n          </div>\r\n          <Modal.Body style={{marginBottom: 30}}>Password Reset sent to your email successfully</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      </div>\r\n      <div className={\"thePopUp failedPopup \" + (showFailedResetPassword && !showResetPassword ? \"active\" : showFailedResetPassword && showResetPassword ? \"\" : \"\")} onClick={() => setShowFailedResetPassword(false)}>\r\n        <div className=\"thePopUpBody\">\r\n          <div className=\"font-icon-detail closePopUp\" onClick={() => setShowFailedResetPassword(false)}>\r\n            <i className=\"nc-icon nc-simple-remove\"></i>\r\n          </div>\r\n          <div>\r\n          Account Not Found\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}