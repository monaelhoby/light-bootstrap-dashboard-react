{"ast":null,"code":"import { db, functions } from \"../firebase\";\nconst updateUser = functions.httpsCallable(\"updateUser\");\nexport const handleEditAdmin = (admin, setAdmins, callback) => {\n  let theAdmins = [];\n  console.log(admin);\n  return db.collection(\"admins\").doc(admin.Uid).update({\n    email: admin.email,\n    firstName: admin.firstName,\n    lastName: admin.lastName\n  }).then(snapshot => {\n    // db.collection(\"users\").get().then(snapshot=>{\n    //     console.log(snapshot.docs)\n    //     // snapshot.docs.forEach(user=>{\n    //     //     user.checked = false;\n    //     //     theAdmins.push(user);\n    //     // })\n    //     // setAdmins([...theAdmins]);\n    //     // updateUsers(admin)\n    //     callback();\n    // })\n    console.log(snapshot.docs);\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n}; // const updateUsers = (admin) => {\n//     db.collection(\"users\").get().then(snapshot=>{\n//         snapshot.docs.forEach(user=>{\n//             let user = user.data().find(user => {\n//                 return user.email !== admin.email;\n//             });\n//             products.push(theNewProduct)\n//             // console.log(products)\n//             db.collection(\"users\").doc(user.id).set({\n//                 products\n//             },{merge:true})\n//         })\n//     })\n// }","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/adminAction.js"],"names":["db","functions","updateUser","httpsCallable","handleEditAdmin","admin","setAdmins","callback","theAdmins","console","log","collection","doc","Uid","update","email","firstName","lastName","then","snapshot","docs","catch","err"],"mappings":"AAAA,SAASA,EAAT,EAAaC,SAAb,QAA8B,aAA9B;AAGA,MAAMC,UAAU,GAAID,SAAS,CAACE,aAAV,CAAwB,YAAxB,CAApB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,SAAP,EAAiBC,QAAjB,KAA4B;AACvD,MAAIC,SAAS,GAAG,EAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAOL,EAAE,CAACW,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4BP,KAAK,CAACQ,GAAlC,EAAuCC,MAAvC,CAA8C;AACrCC,IAAAA,KAAK,EAACV,KAAK,CAACU,KADyB;AAErCC,IAAAA,SAAS,EAACX,KAAK,CAACW,SAFqB;AAGrCC,IAAAA,QAAQ,EAACZ,KAAK,CAACY;AAHsB,GAA9C,EAIQC,IAJR,CAIcC,QAAD,IAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,IAArB;AACf,GAhBM,EAiBNC,KAjBM,CAiBAC,GAAG,IAAE;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBY,GAAvB;AACH,GAnBM,CAAP;AAoBH,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { db, functions } from \"../firebase\";\r\n\r\n\r\nconst updateUser  = functions.httpsCallable(\"updateUser\");\r\n\r\nexport const handleEditAdmin = (admin,setAdmins,callback)=>{\r\n    let theAdmins = []\r\n    console.log(admin)\r\n    return db.collection(\"admins\").doc(admin.Uid).update({\r\n                    email:admin.email,\r\n                    firstName:admin.firstName,\r\n                    lastName:admin.lastName,\r\n                }).then((snapshot)=>{\r\n                    // db.collection(\"users\").get().then(snapshot=>{\r\n                    //     console.log(snapshot.docs)\r\n                    //     // snapshot.docs.forEach(user=>{\r\n                    //     //     user.checked = false;\r\n                    //     //     theAdmins.push(user);\r\n                    //     // })\r\n                    //     // setAdmins([...theAdmins]);\r\n                    //     // updateUsers(admin)\r\n                    //     callback();\r\n                    // })\r\n                    console.log(snapshot.docs)\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\n// const updateUsers = (admin) => {\r\n//     db.collection(\"users\").get().then(snapshot=>{\r\n//         snapshot.docs.forEach(user=>{\r\n//             let user = user.data().find(user => {\r\n//                 return user.email !== admin.email;\r\n//             });\r\n            \r\n\r\n//             products.push(theNewProduct)\r\n//             // console.log(products)\r\n//             db.collection(\"users\").doc(user.id).set({\r\n//                 products\r\n//             },{merge:true})\r\n//         })\r\n//     })\r\n// }"]},"metadata":{},"sourceType":"module"}