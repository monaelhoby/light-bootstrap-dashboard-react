{"ast":null,"code":"import { functions, db } from \"../firebase\";\nimport { useAuth } from \"../components/contexts/AuthContext\";\nconst deleteUser = functions.httpsCallable(\"deleteUser\");\nconst deleteUsers = functions.httpsCallable(\"deleteUsers\");\nconst updateUser = functions.httpsCallable(\"updateUser\");\nexport const handleUpdateUser = (user, setUsers, theOffset, thePageLimit, setCurrentUsers) => {\n  let theUsers = [];\n  console.log(\"user is \", user);\n  return updateUser(user).then(theRecordedUser => {\n    console.log(\"theRecordedUser\", theRecordedUser);\n    db.collection(\"users\").doc(user.uid).update({\n      email: user.email,\n      password: user.password,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      userCode: user.userCode,\n      products: user.products\n    }).then(() => {\n      db.collection(\"users\").get().then(snapshot => {\n        snapshot.docs.forEach(user => {\n          user.checked = false; // user.purchased = false;\n\n          theUsers.push(user);\n        });\n        setUsers([...theUsers]);\n\n        if (theOffset || thePageLimit) {\n          setCurrentUsers(theUsers.slice(theOffset, theOffset + thePageLimit));\n        } else {\n          setCurrentUsers([...theUsers]);\n        }\n      });\n    });\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteUser = (uid, users, i, setUsers, callback, theOffset, thePageLimit, setCurrentUsers) => {\n  // console.log(\"useActionI\", i,uid)\n  users.splice(i, 1);\n  setUsers([...users]);\n  return deleteUser({\n    uid: uid\n  }).then(() => {\n    db.collection(\"users\").doc(uid).delete();\n    callback();\n\n    if (theOffset || thePageLimit) {\n      setCurrentUsers(users.slice(theOffset, theOffset + thePageLimit));\n    } else {\n      setCurrentUsers([...users]);\n    }\n  }).catch(err => {\n    console.log(\"Err is \", err);\n  });\n};\nexport const handleDeleteUsers = (ids, setUsers, callback, theOffset, thePageLimit, setCurrentUsers) => {\n  let theUsers = [];\n  return deleteUsers(ids).then(res => {\n    // console.log(\"res after deleting users\",res);\n    ids.forEach(uid => {\n      db.collection(\"users\").doc(uid).delete();\n    });\n  }).then(() => {\n    db.collection(\"users\").get().then(snapshot => {\n      snapshot.docs.forEach(user => {\n        user.checked = false; // user.purchased = false;\n\n        theUsers.push(user);\n      });\n      setUsers([...theUsers]);\n\n      if (theOffset || thePageLimit) {\n        setCurrentUsers(theUsers.slice(theOffset, theOffset + thePageLimit));\n      } else {\n        setCurrentUsers([...theUsers]);\n      }\n    });\n    callback();\n  }).catch(err => {\n    console.log(\"ERR\", err);\n  });\n};","map":{"version":3,"sources":["E:/Folder/React/projects/my_freelance_work/M.Radwan Work/light-bootstrap-dashboard-react/src/views/UsersAction.js"],"names":["functions","db","useAuth","deleteUser","httpsCallable","deleteUsers","updateUser","handleUpdateUser","user","setUsers","theOffset","thePageLimit","setCurrentUsers","theUsers","console","log","then","theRecordedUser","collection","doc","uid","update","email","password","firstName","lastName","userCode","products","get","snapshot","docs","forEach","checked","push","slice","catch","err","handleDeleteUser","users","i","callback","splice","delete","handleDeleteUsers","ids","res"],"mappings":"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","sourcesContent":["import { functions, db } from \"../firebase\";\r\nimport { useAuth } from \"../components/contexts/AuthContext\"\r\nconst deleteUser  = functions.httpsCallable(\"deleteUser\");\r\nconst deleteUsers = functions.httpsCallable(\"deleteUsers\");\r\nconst updateUser  = functions.httpsCallable(\"updateUser\");\r\n\r\nexport const handleUpdateUser = (user,setUsers,theOffset,thePageLimit,setCurrentUsers)=>{\r\n    let theUsers = [];\r\n    console.log(\"user is \", user)\r\n    return updateUser(user)\r\n    .then((theRecordedUser)=>{\r\n        console.log(\"theRecordedUser\",theRecordedUser)\r\n        db.collection(\"users\").doc(user.uid).update({\r\n            email:user.email,\r\n            password:user.password,\r\n            firstName:user.firstName,\r\n            lastName:user.lastName,\r\n            userCode:user.userCode,\r\n            products:user.products\r\n        }).then(()=>{\r\n            db.collection(\"users\").get().then(snapshot=>{\r\n                snapshot.docs.forEach(user=>{\r\n                    user.checked = false;\r\n                    // user.purchased = false;\r\n                    theUsers.push(user);\r\n                })\r\n                setUsers([...theUsers]);\r\n                if(theOffset || thePageLimit){\r\n                    setCurrentUsers(theUsers.slice(theOffset, theOffset + thePageLimit))\r\n                  }else{\r\n                    setCurrentUsers([...theUsers])\r\n                  }\r\n            })\r\n        })\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteUser = (uid,users,i,setUsers,callback,theOffset,thePageLimit,setCurrentUsers)=>{\r\n    // console.log(\"useActionI\", i,uid)\r\n    users.splice(i, 1);\r\n    setUsers([...users]);\r\n\r\n    return deleteUser({uid:uid})\r\n    .then(()=>{\r\n        db.collection(\"users\").doc(uid).delete();\r\n        callback() \r\n        if(theOffset || thePageLimit){\r\n            setCurrentUsers(users.slice(theOffset, theOffset + thePageLimit))\r\n        }else{\r\n            setCurrentUsers([...users])\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Err is \", err)\r\n    })\r\n}\r\n\r\nexport const handleDeleteUsers = (ids,setUsers, callback,theOffset,thePageLimit,setCurrentUsers) =>{\r\n    let theUsers = [];\r\n    return deleteUsers(ids)\r\n    .then(res=>{\r\n        // console.log(\"res after deleting users\",res);\r\n        ids.forEach(uid => {\r\n            db.collection(\"users\").doc(uid).delete();\r\n        });\r\n    }).then(() => {\r\n        db.collection(\"users\").get().then(snapshot=>{\r\n            snapshot.docs.forEach(user=>{\r\n                user.checked = false;\r\n                // user.purchased = false;\r\n                theUsers.push(user);\r\n            })\r\n            setUsers([...theUsers]);\r\n            if(theOffset || thePageLimit){\r\n                setCurrentUsers(theUsers.slice(theOffset, theOffset + thePageLimit))\r\n              }else{\r\n                setCurrentUsers([...theUsers])\r\n              }\r\n        })\r\n        callback()\r\n    }).catch(err=>{\r\n        console.log(\"ERR\",err);\r\n    })\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}